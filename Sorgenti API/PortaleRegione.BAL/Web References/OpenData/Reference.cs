//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Il codice sorgente è stato generato automaticamente da Microsoft.VSDesigner, versione 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace PortaleRegione.BAL.OpenData {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UpsertOpenDataSoap", Namespace="https://intranet.consiglio.regione.lombardia.it/OpenData")]
    public partial class UpsertOpenData : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ConnTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckInfoTABOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpsertLROperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLROperationCompleted;
        
        private System.Threading.SendOrPostCallback UpsertLINK_ATTIOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLINK_ATTIOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpsertATTOOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteATTOOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectATTIOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpsertATTO_SIOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteATTO_SIOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpsertCONSOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCONSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectCONSOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpsertCONS_LEGOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLINK_CONS_LEGOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpsertORGANOOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteORGANOOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpsertGRUPPOOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGRUPPOOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpsertCOMPOSIZIONE_GRUPPOOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCOMPOSIZIONE_GRUPPOOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectCOMPOSIZIONE_GRUPPOOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpsertCARICAOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCARICAOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectCARICHEOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpsertDUPOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDUPOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpsertATTO_VALOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteATTO_VALOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectATTI_VALOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpsertATTO_VAL_ALLEGATOOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteATTO_VAL_ALLEGATOOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectATTO_VAL_ALLEGATIOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpsertCALENDARIOOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCALENDARIOOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpsertEMOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEMOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectEMOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpsertTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectGIUNTAOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public UpsertOpenData() {
            this.Url = global::PortaleRegione.BAL.Properties.Settings.Default.PortaleRegione_BAL_OpenData_UpsertOpenData;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ConnTestCompletedEventHandler ConnTestCompleted;
        
        /// <remarks/>
        public event CheckInfoTABCompletedEventHandler CheckInfoTABCompleted;
        
        /// <remarks/>
        public event UpsertLRCompletedEventHandler UpsertLRCompleted;
        
        /// <remarks/>
        public event DeleteLRCompletedEventHandler DeleteLRCompleted;
        
        /// <remarks/>
        public event UpsertLINK_ATTICompletedEventHandler UpsertLINK_ATTICompleted;
        
        /// <remarks/>
        public event DeleteLINK_ATTICompletedEventHandler DeleteLINK_ATTICompleted;
        
        /// <remarks/>
        public event UpsertATTOCompletedEventHandler UpsertATTOCompleted;
        
        /// <remarks/>
        public event DeleteATTOCompletedEventHandler DeleteATTOCompleted;
        
        /// <remarks/>
        public event SelectATTICompletedEventHandler SelectATTICompleted;
        
        /// <remarks/>
        public event UpsertATTO_SICompletedEventHandler UpsertATTO_SICompleted;
        
        /// <remarks/>
        public event DeleteATTO_SICompletedEventHandler DeleteATTO_SICompleted;
        
        /// <remarks/>
        public event UpsertCONSCompletedEventHandler UpsertCONSCompleted;
        
        /// <remarks/>
        public event DeleteCONSCompletedEventHandler DeleteCONSCompleted;
        
        /// <remarks/>
        public event SelectCONSCompletedEventHandler SelectCONSCompleted;
        
        /// <remarks/>
        public event UpsertCONS_LEGCompletedEventHandler UpsertCONS_LEGCompleted;
        
        /// <remarks/>
        public event DeleteLINK_CONS_LEGCompletedEventHandler DeleteLINK_CONS_LEGCompleted;
        
        /// <remarks/>
        public event UpsertORGANOCompletedEventHandler UpsertORGANOCompleted;
        
        /// <remarks/>
        public event DeleteORGANOCompletedEventHandler DeleteORGANOCompleted;
        
        /// <remarks/>
        public event UpsertGRUPPOCompletedEventHandler UpsertGRUPPOCompleted;
        
        /// <remarks/>
        public event DeleteGRUPPOCompletedEventHandler DeleteGRUPPOCompleted;
        
        /// <remarks/>
        public event UpsertCOMPOSIZIONE_GRUPPOCompletedEventHandler UpsertCOMPOSIZIONE_GRUPPOCompleted;
        
        /// <remarks/>
        public event DeleteCOMPOSIZIONE_GRUPPOCompletedEventHandler DeleteCOMPOSIZIONE_GRUPPOCompleted;
        
        /// <remarks/>
        public event SelectCOMPOSIZIONE_GRUPPOCompletedEventHandler SelectCOMPOSIZIONE_GRUPPOCompleted;
        
        /// <remarks/>
        public event UpsertCARICACompletedEventHandler UpsertCARICACompleted;
        
        /// <remarks/>
        public event DeleteCARICACompletedEventHandler DeleteCARICACompleted;
        
        /// <remarks/>
        public event SelectCARICHECompletedEventHandler SelectCARICHECompleted;
        
        /// <remarks/>
        public event UpsertDUPCompletedEventHandler UpsertDUPCompleted;
        
        /// <remarks/>
        public event DeleteDUPCompletedEventHandler DeleteDUPCompleted;
        
        /// <remarks/>
        public event UpsertATTO_VALCompletedEventHandler UpsertATTO_VALCompleted;
        
        /// <remarks/>
        public event DeleteATTO_VALCompletedEventHandler DeleteATTO_VALCompleted;
        
        /// <remarks/>
        public event SelectATTI_VALCompletedEventHandler SelectATTI_VALCompleted;
        
        /// <remarks/>
        public event UpsertATTO_VAL_ALLEGATOCompletedEventHandler UpsertATTO_VAL_ALLEGATOCompleted;
        
        /// <remarks/>
        public event DeleteATTO_VAL_ALLEGATOCompletedEventHandler DeleteATTO_VAL_ALLEGATOCompleted;
        
        /// <remarks/>
        public event SelectATTO_VAL_ALLEGATICompletedEventHandler SelectATTO_VAL_ALLEGATICompleted;
        
        /// <remarks/>
        public event UpsertCALENDARIOCompletedEventHandler UpsertCALENDARIOCompleted;
        
        /// <remarks/>
        public event DeleteCALENDARIOCompletedEventHandler DeleteCALENDARIOCompleted;
        
        /// <remarks/>
        public event UpsertEMCompletedEventHandler UpsertEMCompleted;
        
        /// <remarks/>
        public event DeleteEMCompletedEventHandler DeleteEMCompleted;
        
        /// <remarks/>
        public event SelectEMCompletedEventHandler SelectEMCompleted;
        
        /// <remarks/>
        public event UpsertTestCompletedEventHandler UpsertTestCompleted;
        
        /// <remarks/>
        public event SelectGIUNTACompletedEventHandler SelectGIUNTACompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/ConnTest", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConnTest() {
            object[] results = this.Invoke("ConnTest", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConnTestAsync() {
            this.ConnTestAsync(null);
        }
        
        /// <remarks/>
        public void ConnTestAsync(object userState) {
            if ((this.ConnTestOperationCompleted == null)) {
                this.ConnTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnTestOperationCompleted);
            }
            this.InvokeAsync("ConnTest", new object[0], this.ConnTestOperationCompleted, userState);
        }
        
        private void OnConnTestOperationCompleted(object arg) {
            if ((this.ConnTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConnTestCompleted(this, new ConnTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/CheckInfoTAB", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckInfoTAB(string ID, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("CheckInfoTAB", new object[] {
                        ID,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckInfoTABAsync(string ID, string PRIVATE_TOKEN) {
            this.CheckInfoTABAsync(ID, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void CheckInfoTABAsync(string ID, string PRIVATE_TOKEN, object userState) {
            if ((this.CheckInfoTABOperationCompleted == null)) {
                this.CheckInfoTABOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckInfoTABOperationCompleted);
            }
            this.InvokeAsync("CheckInfoTAB", new object[] {
                        ID,
                        PRIVATE_TOKEN}, this.CheckInfoTABOperationCompleted, userState);
        }
        
        private void OnCheckInfoTABOperationCompleted(object arg) {
            if ((this.CheckInfoTABCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckInfoTABCompleted(this, new CheckInfoTABCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/UpsertLR", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpsertLR(string ODLeggeRegionale, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("UpsertLR", new object[] {
                        ODLeggeRegionale,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpsertLRAsync(string ODLeggeRegionale, string PRIVATE_TOKEN) {
            this.UpsertLRAsync(ODLeggeRegionale, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void UpsertLRAsync(string ODLeggeRegionale, string PRIVATE_TOKEN, object userState) {
            if ((this.UpsertLROperationCompleted == null)) {
                this.UpsertLROperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpsertLROperationCompleted);
            }
            this.InvokeAsync("UpsertLR", new object[] {
                        ODLeggeRegionale,
                        PRIVATE_TOKEN}, this.UpsertLROperationCompleted, userState);
        }
        
        private void OnUpsertLROperationCompleted(object arg) {
            if ((this.UpsertLRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpsertLRCompleted(this, new UpsertLRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/DeleteLR", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteLR(string ID, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("DeleteLR", new object[] {
                        ID,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLRAsync(string ID, string PRIVATE_TOKEN) {
            this.DeleteLRAsync(ID, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void DeleteLRAsync(string ID, string PRIVATE_TOKEN, object userState) {
            if ((this.DeleteLROperationCompleted == null)) {
                this.DeleteLROperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLROperationCompleted);
            }
            this.InvokeAsync("DeleteLR", new object[] {
                        ID,
                        PRIVATE_TOKEN}, this.DeleteLROperationCompleted, userState);
        }
        
        private void OnDeleteLROperationCompleted(object arg) {
            if ((this.DeleteLRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLRCompleted(this, new DeleteLRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/UpsertLINK_ATTI", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpsertLINK_ATTI(string ODLinkAtti, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("UpsertLINK_ATTI", new object[] {
                        ODLinkAtti,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpsertLINK_ATTIAsync(string ODLinkAtti, string PRIVATE_TOKEN) {
            this.UpsertLINK_ATTIAsync(ODLinkAtti, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void UpsertLINK_ATTIAsync(string ODLinkAtti, string PRIVATE_TOKEN, object userState) {
            if ((this.UpsertLINK_ATTIOperationCompleted == null)) {
                this.UpsertLINK_ATTIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpsertLINK_ATTIOperationCompleted);
            }
            this.InvokeAsync("UpsertLINK_ATTI", new object[] {
                        ODLinkAtti,
                        PRIVATE_TOKEN}, this.UpsertLINK_ATTIOperationCompleted, userState);
        }
        
        private void OnUpsertLINK_ATTIOperationCompleted(object arg) {
            if ((this.UpsertLINK_ATTICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpsertLINK_ATTICompleted(this, new UpsertLINK_ATTICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/DeleteLINK_ATTI", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteLINK_ATTI(string ID, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("DeleteLINK_ATTI", new object[] {
                        ID,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLINK_ATTIAsync(string ID, string PRIVATE_TOKEN) {
            this.DeleteLINK_ATTIAsync(ID, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void DeleteLINK_ATTIAsync(string ID, string PRIVATE_TOKEN, object userState) {
            if ((this.DeleteLINK_ATTIOperationCompleted == null)) {
                this.DeleteLINK_ATTIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLINK_ATTIOperationCompleted);
            }
            this.InvokeAsync("DeleteLINK_ATTI", new object[] {
                        ID,
                        PRIVATE_TOKEN}, this.DeleteLINK_ATTIOperationCompleted, userState);
        }
        
        private void OnDeleteLINK_ATTIOperationCompleted(object arg) {
            if ((this.DeleteLINK_ATTICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLINK_ATTICompleted(this, new DeleteLINK_ATTICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/UpsertATTO", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpsertATTO(string ODAtto, string PRIVATE_TOKEN, string ambiente) {
            object[] results = this.Invoke("UpsertATTO", new object[] {
                        ODAtto,
                        PRIVATE_TOKEN,
                        ambiente});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpsertATTOAsync(string ODAtto, string PRIVATE_TOKEN, string ambiente) {
            this.UpsertATTOAsync(ODAtto, PRIVATE_TOKEN, ambiente, null);
        }
        
        /// <remarks/>
        public void UpsertATTOAsync(string ODAtto, string PRIVATE_TOKEN, string ambiente, object userState) {
            if ((this.UpsertATTOOperationCompleted == null)) {
                this.UpsertATTOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpsertATTOOperationCompleted);
            }
            this.InvokeAsync("UpsertATTO", new object[] {
                        ODAtto,
                        PRIVATE_TOKEN,
                        ambiente}, this.UpsertATTOOperationCompleted, userState);
        }
        
        private void OnUpsertATTOOperationCompleted(object arg) {
            if ((this.UpsertATTOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpsertATTOCompleted(this, new UpsertATTOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/DeleteATTO", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteATTO(string ID, string PRIVATE_TOKEN, string ambiente) {
            object[] results = this.Invoke("DeleteATTO", new object[] {
                        ID,
                        PRIVATE_TOKEN,
                        ambiente});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteATTOAsync(string ID, string PRIVATE_TOKEN, string ambiente) {
            this.DeleteATTOAsync(ID, PRIVATE_TOKEN, ambiente, null);
        }
        
        /// <remarks/>
        public void DeleteATTOAsync(string ID, string PRIVATE_TOKEN, string ambiente, object userState) {
            if ((this.DeleteATTOOperationCompleted == null)) {
                this.DeleteATTOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteATTOOperationCompleted);
            }
            this.InvokeAsync("DeleteATTO", new object[] {
                        ID,
                        PRIVATE_TOKEN,
                        ambiente}, this.DeleteATTOOperationCompleted, userState);
        }
        
        private void OnDeleteATTOOperationCompleted(object arg) {
            if ((this.DeleteATTOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteATTOCompleted(this, new DeleteATTOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/SelectATTI", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectATTI(string qry, string order) {
            object[] results = this.Invoke("SelectATTI", new object[] {
                        qry,
                        order});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectATTIAsync(string qry, string order) {
            this.SelectATTIAsync(qry, order, null);
        }
        
        /// <remarks/>
        public void SelectATTIAsync(string qry, string order, object userState) {
            if ((this.SelectATTIOperationCompleted == null)) {
                this.SelectATTIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectATTIOperationCompleted);
            }
            this.InvokeAsync("SelectATTI", new object[] {
                        qry,
                        order}, this.SelectATTIOperationCompleted, userState);
        }
        
        private void OnSelectATTIOperationCompleted(object arg) {
            if ((this.SelectATTICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectATTICompleted(this, new SelectATTICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/UpsertATTO_SI", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpsertATTO_SI(string ODAtto_SI, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("UpsertATTO_SI", new object[] {
                        ODAtto_SI,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpsertATTO_SIAsync(string ODAtto_SI, string PRIVATE_TOKEN) {
            this.UpsertATTO_SIAsync(ODAtto_SI, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void UpsertATTO_SIAsync(string ODAtto_SI, string PRIVATE_TOKEN, object userState) {
            if ((this.UpsertATTO_SIOperationCompleted == null)) {
                this.UpsertATTO_SIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpsertATTO_SIOperationCompleted);
            }
            this.InvokeAsync("UpsertATTO_SI", new object[] {
                        ODAtto_SI,
                        PRIVATE_TOKEN}, this.UpsertATTO_SIOperationCompleted, userState);
        }
        
        private void OnUpsertATTO_SIOperationCompleted(object arg) {
            if ((this.UpsertATTO_SICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpsertATTO_SICompleted(this, new UpsertATTO_SICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/DeleteATTO_SI", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteATTO_SI(string ID, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("DeleteATTO_SI", new object[] {
                        ID,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteATTO_SIAsync(string ID, string PRIVATE_TOKEN) {
            this.DeleteATTO_SIAsync(ID, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void DeleteATTO_SIAsync(string ID, string PRIVATE_TOKEN, object userState) {
            if ((this.DeleteATTO_SIOperationCompleted == null)) {
                this.DeleteATTO_SIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteATTO_SIOperationCompleted);
            }
            this.InvokeAsync("DeleteATTO_SI", new object[] {
                        ID,
                        PRIVATE_TOKEN}, this.DeleteATTO_SIOperationCompleted, userState);
        }
        
        private void OnDeleteATTO_SIOperationCompleted(object arg) {
            if ((this.DeleteATTO_SICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteATTO_SICompleted(this, new DeleteATTO_SICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/UpsertCONS", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpsertCONS(string ODConsigliere, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("UpsertCONS", new object[] {
                        ODConsigliere,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpsertCONSAsync(string ODConsigliere, string PRIVATE_TOKEN) {
            this.UpsertCONSAsync(ODConsigliere, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void UpsertCONSAsync(string ODConsigliere, string PRIVATE_TOKEN, object userState) {
            if ((this.UpsertCONSOperationCompleted == null)) {
                this.UpsertCONSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpsertCONSOperationCompleted);
            }
            this.InvokeAsync("UpsertCONS", new object[] {
                        ODConsigliere,
                        PRIVATE_TOKEN}, this.UpsertCONSOperationCompleted, userState);
        }
        
        private void OnUpsertCONSOperationCompleted(object arg) {
            if ((this.UpsertCONSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpsertCONSCompleted(this, new UpsertCONSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/DeleteCONS", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteCONS(string ID, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("DeleteCONS", new object[] {
                        ID,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCONSAsync(string ID, string PRIVATE_TOKEN) {
            this.DeleteCONSAsync(ID, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void DeleteCONSAsync(string ID, string PRIVATE_TOKEN, object userState) {
            if ((this.DeleteCONSOperationCompleted == null)) {
                this.DeleteCONSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCONSOperationCompleted);
            }
            this.InvokeAsync("DeleteCONS", new object[] {
                        ID,
                        PRIVATE_TOKEN}, this.DeleteCONSOperationCompleted, userState);
        }
        
        private void OnDeleteCONSOperationCompleted(object arg) {
            if ((this.DeleteCONSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCONSCompleted(this, new DeleteCONSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/SelectCONS", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectCONS(string qry, string order) {
            object[] results = this.Invoke("SelectCONS", new object[] {
                        qry,
                        order});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectCONSAsync(string qry, string order) {
            this.SelectCONSAsync(qry, order, null);
        }
        
        /// <remarks/>
        public void SelectCONSAsync(string qry, string order, object userState) {
            if ((this.SelectCONSOperationCompleted == null)) {
                this.SelectCONSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectCONSOperationCompleted);
            }
            this.InvokeAsync("SelectCONS", new object[] {
                        qry,
                        order}, this.SelectCONSOperationCompleted, userState);
        }
        
        private void OnSelectCONSOperationCompleted(object arg) {
            if ((this.SelectCONSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectCONSCompleted(this, new SelectCONSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/UpsertCONS_LEG", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpsertCONS_LEG(string ODCons_Leg, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("UpsertCONS_LEG", new object[] {
                        ODCons_Leg,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpsertCONS_LEGAsync(string ODCons_Leg, string PRIVATE_TOKEN) {
            this.UpsertCONS_LEGAsync(ODCons_Leg, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void UpsertCONS_LEGAsync(string ODCons_Leg, string PRIVATE_TOKEN, object userState) {
            if ((this.UpsertCONS_LEGOperationCompleted == null)) {
                this.UpsertCONS_LEGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpsertCONS_LEGOperationCompleted);
            }
            this.InvokeAsync("UpsertCONS_LEG", new object[] {
                        ODCons_Leg,
                        PRIVATE_TOKEN}, this.UpsertCONS_LEGOperationCompleted, userState);
        }
        
        private void OnUpsertCONS_LEGOperationCompleted(object arg) {
            if ((this.UpsertCONS_LEGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpsertCONS_LEGCompleted(this, new UpsertCONS_LEGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/DeleteLINK_CONS_LEG", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteLINK_CONS_LEG(string ID, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("DeleteLINK_CONS_LEG", new object[] {
                        ID,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLINK_CONS_LEGAsync(string ID, string PRIVATE_TOKEN) {
            this.DeleteLINK_CONS_LEGAsync(ID, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void DeleteLINK_CONS_LEGAsync(string ID, string PRIVATE_TOKEN, object userState) {
            if ((this.DeleteLINK_CONS_LEGOperationCompleted == null)) {
                this.DeleteLINK_CONS_LEGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLINK_CONS_LEGOperationCompleted);
            }
            this.InvokeAsync("DeleteLINK_CONS_LEG", new object[] {
                        ID,
                        PRIVATE_TOKEN}, this.DeleteLINK_CONS_LEGOperationCompleted, userState);
        }
        
        private void OnDeleteLINK_CONS_LEGOperationCompleted(object arg) {
            if ((this.DeleteLINK_CONS_LEGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLINK_CONS_LEGCompleted(this, new DeleteLINK_CONS_LEGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/UpsertORGANO", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpsertORGANO(string ODOrgano, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("UpsertORGANO", new object[] {
                        ODOrgano,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpsertORGANOAsync(string ODOrgano, string PRIVATE_TOKEN) {
            this.UpsertORGANOAsync(ODOrgano, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void UpsertORGANOAsync(string ODOrgano, string PRIVATE_TOKEN, object userState) {
            if ((this.UpsertORGANOOperationCompleted == null)) {
                this.UpsertORGANOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpsertORGANOOperationCompleted);
            }
            this.InvokeAsync("UpsertORGANO", new object[] {
                        ODOrgano,
                        PRIVATE_TOKEN}, this.UpsertORGANOOperationCompleted, userState);
        }
        
        private void OnUpsertORGANOOperationCompleted(object arg) {
            if ((this.UpsertORGANOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpsertORGANOCompleted(this, new UpsertORGANOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/DeleteORGANO", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteORGANO(string ID, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("DeleteORGANO", new object[] {
                        ID,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteORGANOAsync(string ID, string PRIVATE_TOKEN) {
            this.DeleteORGANOAsync(ID, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void DeleteORGANOAsync(string ID, string PRIVATE_TOKEN, object userState) {
            if ((this.DeleteORGANOOperationCompleted == null)) {
                this.DeleteORGANOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteORGANOOperationCompleted);
            }
            this.InvokeAsync("DeleteORGANO", new object[] {
                        ID,
                        PRIVATE_TOKEN}, this.DeleteORGANOOperationCompleted, userState);
        }
        
        private void OnDeleteORGANOOperationCompleted(object arg) {
            if ((this.DeleteORGANOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteORGANOCompleted(this, new DeleteORGANOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/UpsertGRUPPO", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpsertGRUPPO(string ODGruppo, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("UpsertGRUPPO", new object[] {
                        ODGruppo,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpsertGRUPPOAsync(string ODGruppo, string PRIVATE_TOKEN) {
            this.UpsertGRUPPOAsync(ODGruppo, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void UpsertGRUPPOAsync(string ODGruppo, string PRIVATE_TOKEN, object userState) {
            if ((this.UpsertGRUPPOOperationCompleted == null)) {
                this.UpsertGRUPPOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpsertGRUPPOOperationCompleted);
            }
            this.InvokeAsync("UpsertGRUPPO", new object[] {
                        ODGruppo,
                        PRIVATE_TOKEN}, this.UpsertGRUPPOOperationCompleted, userState);
        }
        
        private void OnUpsertGRUPPOOperationCompleted(object arg) {
            if ((this.UpsertGRUPPOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpsertGRUPPOCompleted(this, new UpsertGRUPPOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/DeleteGRUPPO", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteGRUPPO(string ID, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("DeleteGRUPPO", new object[] {
                        ID,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGRUPPOAsync(string ID, string PRIVATE_TOKEN) {
            this.DeleteGRUPPOAsync(ID, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void DeleteGRUPPOAsync(string ID, string PRIVATE_TOKEN, object userState) {
            if ((this.DeleteGRUPPOOperationCompleted == null)) {
                this.DeleteGRUPPOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGRUPPOOperationCompleted);
            }
            this.InvokeAsync("DeleteGRUPPO", new object[] {
                        ID,
                        PRIVATE_TOKEN}, this.DeleteGRUPPOOperationCompleted, userState);
        }
        
        private void OnDeleteGRUPPOOperationCompleted(object arg) {
            if ((this.DeleteGRUPPOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGRUPPOCompleted(this, new DeleteGRUPPOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/UpsertCOMPOSIZIONE_GRUPP" +
            "O", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpsertCOMPOSIZIONE_GRUPPO(string ODComposizioneGruppo, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("UpsertCOMPOSIZIONE_GRUPPO", new object[] {
                        ODComposizioneGruppo,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpsertCOMPOSIZIONE_GRUPPOAsync(string ODComposizioneGruppo, string PRIVATE_TOKEN) {
            this.UpsertCOMPOSIZIONE_GRUPPOAsync(ODComposizioneGruppo, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void UpsertCOMPOSIZIONE_GRUPPOAsync(string ODComposizioneGruppo, string PRIVATE_TOKEN, object userState) {
            if ((this.UpsertCOMPOSIZIONE_GRUPPOOperationCompleted == null)) {
                this.UpsertCOMPOSIZIONE_GRUPPOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpsertCOMPOSIZIONE_GRUPPOOperationCompleted);
            }
            this.InvokeAsync("UpsertCOMPOSIZIONE_GRUPPO", new object[] {
                        ODComposizioneGruppo,
                        PRIVATE_TOKEN}, this.UpsertCOMPOSIZIONE_GRUPPOOperationCompleted, userState);
        }
        
        private void OnUpsertCOMPOSIZIONE_GRUPPOOperationCompleted(object arg) {
            if ((this.UpsertCOMPOSIZIONE_GRUPPOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpsertCOMPOSIZIONE_GRUPPOCompleted(this, new UpsertCOMPOSIZIONE_GRUPPOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/DeleteCOMPOSIZIONE_GRUPP" +
            "O", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteCOMPOSIZIONE_GRUPPO(string ID, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("DeleteCOMPOSIZIONE_GRUPPO", new object[] {
                        ID,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCOMPOSIZIONE_GRUPPOAsync(string ID, string PRIVATE_TOKEN) {
            this.DeleteCOMPOSIZIONE_GRUPPOAsync(ID, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void DeleteCOMPOSIZIONE_GRUPPOAsync(string ID, string PRIVATE_TOKEN, object userState) {
            if ((this.DeleteCOMPOSIZIONE_GRUPPOOperationCompleted == null)) {
                this.DeleteCOMPOSIZIONE_GRUPPOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCOMPOSIZIONE_GRUPPOOperationCompleted);
            }
            this.InvokeAsync("DeleteCOMPOSIZIONE_GRUPPO", new object[] {
                        ID,
                        PRIVATE_TOKEN}, this.DeleteCOMPOSIZIONE_GRUPPOOperationCompleted, userState);
        }
        
        private void OnDeleteCOMPOSIZIONE_GRUPPOOperationCompleted(object arg) {
            if ((this.DeleteCOMPOSIZIONE_GRUPPOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCOMPOSIZIONE_GRUPPOCompleted(this, new DeleteCOMPOSIZIONE_GRUPPOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/SelectCOMPOSIZIONE_GRUPP" +
            "O", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectCOMPOSIZIONE_GRUPPO(string qry, string order) {
            object[] results = this.Invoke("SelectCOMPOSIZIONE_GRUPPO", new object[] {
                        qry,
                        order});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectCOMPOSIZIONE_GRUPPOAsync(string qry, string order) {
            this.SelectCOMPOSIZIONE_GRUPPOAsync(qry, order, null);
        }
        
        /// <remarks/>
        public void SelectCOMPOSIZIONE_GRUPPOAsync(string qry, string order, object userState) {
            if ((this.SelectCOMPOSIZIONE_GRUPPOOperationCompleted == null)) {
                this.SelectCOMPOSIZIONE_GRUPPOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectCOMPOSIZIONE_GRUPPOOperationCompleted);
            }
            this.InvokeAsync("SelectCOMPOSIZIONE_GRUPPO", new object[] {
                        qry,
                        order}, this.SelectCOMPOSIZIONE_GRUPPOOperationCompleted, userState);
        }
        
        private void OnSelectCOMPOSIZIONE_GRUPPOOperationCompleted(object arg) {
            if ((this.SelectCOMPOSIZIONE_GRUPPOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectCOMPOSIZIONE_GRUPPOCompleted(this, new SelectCOMPOSIZIONE_GRUPPOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/UpsertCARICA", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpsertCARICA(string ODCarica, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("UpsertCARICA", new object[] {
                        ODCarica,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpsertCARICAAsync(string ODCarica, string PRIVATE_TOKEN) {
            this.UpsertCARICAAsync(ODCarica, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void UpsertCARICAAsync(string ODCarica, string PRIVATE_TOKEN, object userState) {
            if ((this.UpsertCARICAOperationCompleted == null)) {
                this.UpsertCARICAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpsertCARICAOperationCompleted);
            }
            this.InvokeAsync("UpsertCARICA", new object[] {
                        ODCarica,
                        PRIVATE_TOKEN}, this.UpsertCARICAOperationCompleted, userState);
        }
        
        private void OnUpsertCARICAOperationCompleted(object arg) {
            if ((this.UpsertCARICACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpsertCARICACompleted(this, new UpsertCARICACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/DeleteCARICA", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteCARICA(string ID, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("DeleteCARICA", new object[] {
                        ID,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCARICAAsync(string ID, string PRIVATE_TOKEN) {
            this.DeleteCARICAAsync(ID, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void DeleteCARICAAsync(string ID, string PRIVATE_TOKEN, object userState) {
            if ((this.DeleteCARICAOperationCompleted == null)) {
                this.DeleteCARICAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCARICAOperationCompleted);
            }
            this.InvokeAsync("DeleteCARICA", new object[] {
                        ID,
                        PRIVATE_TOKEN}, this.DeleteCARICAOperationCompleted, userState);
        }
        
        private void OnDeleteCARICAOperationCompleted(object arg) {
            if ((this.DeleteCARICACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCARICACompleted(this, new DeleteCARICACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/SelectCARICHE", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectCARICHE(string qry, string order) {
            object[] results = this.Invoke("SelectCARICHE", new object[] {
                        qry,
                        order});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectCARICHEAsync(string qry, string order) {
            this.SelectCARICHEAsync(qry, order, null);
        }
        
        /// <remarks/>
        public void SelectCARICHEAsync(string qry, string order, object userState) {
            if ((this.SelectCARICHEOperationCompleted == null)) {
                this.SelectCARICHEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectCARICHEOperationCompleted);
            }
            this.InvokeAsync("SelectCARICHE", new object[] {
                        qry,
                        order}, this.SelectCARICHEOperationCompleted, userState);
        }
        
        private void OnSelectCARICHEOperationCompleted(object arg) {
            if ((this.SelectCARICHECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectCARICHECompleted(this, new SelectCARICHECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/UpsertDUP", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpsertDUP(string ODDelibera, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("UpsertDUP", new object[] {
                        ODDelibera,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpsertDUPAsync(string ODDelibera, string PRIVATE_TOKEN) {
            this.UpsertDUPAsync(ODDelibera, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void UpsertDUPAsync(string ODDelibera, string PRIVATE_TOKEN, object userState) {
            if ((this.UpsertDUPOperationCompleted == null)) {
                this.UpsertDUPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpsertDUPOperationCompleted);
            }
            this.InvokeAsync("UpsertDUP", new object[] {
                        ODDelibera,
                        PRIVATE_TOKEN}, this.UpsertDUPOperationCompleted, userState);
        }
        
        private void OnUpsertDUPOperationCompleted(object arg) {
            if ((this.UpsertDUPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpsertDUPCompleted(this, new UpsertDUPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/DeleteDUP", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteDUP(string ID, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("DeleteDUP", new object[] {
                        ID,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDUPAsync(string ID, string PRIVATE_TOKEN) {
            this.DeleteDUPAsync(ID, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void DeleteDUPAsync(string ID, string PRIVATE_TOKEN, object userState) {
            if ((this.DeleteDUPOperationCompleted == null)) {
                this.DeleteDUPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDUPOperationCompleted);
            }
            this.InvokeAsync("DeleteDUP", new object[] {
                        ID,
                        PRIVATE_TOKEN}, this.DeleteDUPOperationCompleted, userState);
        }
        
        private void OnDeleteDUPOperationCompleted(object arg) {
            if ((this.DeleteDUPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDUPCompleted(this, new DeleteDUPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/UpsertATTO_VAL", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpsertATTO_VAL(string ODAtto_val, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("UpsertATTO_VAL", new object[] {
                        ODAtto_val,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpsertATTO_VALAsync(string ODAtto_val, string PRIVATE_TOKEN) {
            this.UpsertATTO_VALAsync(ODAtto_val, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void UpsertATTO_VALAsync(string ODAtto_val, string PRIVATE_TOKEN, object userState) {
            if ((this.UpsertATTO_VALOperationCompleted == null)) {
                this.UpsertATTO_VALOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpsertATTO_VALOperationCompleted);
            }
            this.InvokeAsync("UpsertATTO_VAL", new object[] {
                        ODAtto_val,
                        PRIVATE_TOKEN}, this.UpsertATTO_VALOperationCompleted, userState);
        }
        
        private void OnUpsertATTO_VALOperationCompleted(object arg) {
            if ((this.UpsertATTO_VALCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpsertATTO_VALCompleted(this, new UpsertATTO_VALCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/DeleteATTO_VAL", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteATTO_VAL(string ID, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("DeleteATTO_VAL", new object[] {
                        ID,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteATTO_VALAsync(string ID, string PRIVATE_TOKEN) {
            this.DeleteATTO_VALAsync(ID, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void DeleteATTO_VALAsync(string ID, string PRIVATE_TOKEN, object userState) {
            if ((this.DeleteATTO_VALOperationCompleted == null)) {
                this.DeleteATTO_VALOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteATTO_VALOperationCompleted);
            }
            this.InvokeAsync("DeleteATTO_VAL", new object[] {
                        ID,
                        PRIVATE_TOKEN}, this.DeleteATTO_VALOperationCompleted, userState);
        }
        
        private void OnDeleteATTO_VALOperationCompleted(object arg) {
            if ((this.DeleteATTO_VALCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteATTO_VALCompleted(this, new DeleteATTO_VALCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/SelectATTI_VAL", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectATTI_VAL(string qry, string order) {
            object[] results = this.Invoke("SelectATTI_VAL", new object[] {
                        qry,
                        order});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectATTI_VALAsync(string qry, string order) {
            this.SelectATTI_VALAsync(qry, order, null);
        }
        
        /// <remarks/>
        public void SelectATTI_VALAsync(string qry, string order, object userState) {
            if ((this.SelectATTI_VALOperationCompleted == null)) {
                this.SelectATTI_VALOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectATTI_VALOperationCompleted);
            }
            this.InvokeAsync("SelectATTI_VAL", new object[] {
                        qry,
                        order}, this.SelectATTI_VALOperationCompleted, userState);
        }
        
        private void OnSelectATTI_VALOperationCompleted(object arg) {
            if ((this.SelectATTI_VALCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectATTI_VALCompleted(this, new SelectATTI_VALCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/UpsertATTO_VAL_ALLEGATO", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpsertATTO_VAL_ALLEGATO(string ODAtto_val_allegato, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("UpsertATTO_VAL_ALLEGATO", new object[] {
                        ODAtto_val_allegato,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpsertATTO_VAL_ALLEGATOAsync(string ODAtto_val_allegato, string PRIVATE_TOKEN) {
            this.UpsertATTO_VAL_ALLEGATOAsync(ODAtto_val_allegato, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void UpsertATTO_VAL_ALLEGATOAsync(string ODAtto_val_allegato, string PRIVATE_TOKEN, object userState) {
            if ((this.UpsertATTO_VAL_ALLEGATOOperationCompleted == null)) {
                this.UpsertATTO_VAL_ALLEGATOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpsertATTO_VAL_ALLEGATOOperationCompleted);
            }
            this.InvokeAsync("UpsertATTO_VAL_ALLEGATO", new object[] {
                        ODAtto_val_allegato,
                        PRIVATE_TOKEN}, this.UpsertATTO_VAL_ALLEGATOOperationCompleted, userState);
        }
        
        private void OnUpsertATTO_VAL_ALLEGATOOperationCompleted(object arg) {
            if ((this.UpsertATTO_VAL_ALLEGATOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpsertATTO_VAL_ALLEGATOCompleted(this, new UpsertATTO_VAL_ALLEGATOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/DeleteATTO_VAL_ALLEGATO", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteATTO_VAL_ALLEGATO(string ID, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("DeleteATTO_VAL_ALLEGATO", new object[] {
                        ID,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteATTO_VAL_ALLEGATOAsync(string ID, string PRIVATE_TOKEN) {
            this.DeleteATTO_VAL_ALLEGATOAsync(ID, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void DeleteATTO_VAL_ALLEGATOAsync(string ID, string PRIVATE_TOKEN, object userState) {
            if ((this.DeleteATTO_VAL_ALLEGATOOperationCompleted == null)) {
                this.DeleteATTO_VAL_ALLEGATOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteATTO_VAL_ALLEGATOOperationCompleted);
            }
            this.InvokeAsync("DeleteATTO_VAL_ALLEGATO", new object[] {
                        ID,
                        PRIVATE_TOKEN}, this.DeleteATTO_VAL_ALLEGATOOperationCompleted, userState);
        }
        
        private void OnDeleteATTO_VAL_ALLEGATOOperationCompleted(object arg) {
            if ((this.DeleteATTO_VAL_ALLEGATOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteATTO_VAL_ALLEGATOCompleted(this, new DeleteATTO_VAL_ALLEGATOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/SelectATTO_VAL_ALLEGATI", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectATTO_VAL_ALLEGATI(string qry, string order) {
            object[] results = this.Invoke("SelectATTO_VAL_ALLEGATI", new object[] {
                        qry,
                        order});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectATTO_VAL_ALLEGATIAsync(string qry, string order) {
            this.SelectATTO_VAL_ALLEGATIAsync(qry, order, null);
        }
        
        /// <remarks/>
        public void SelectATTO_VAL_ALLEGATIAsync(string qry, string order, object userState) {
            if ((this.SelectATTO_VAL_ALLEGATIOperationCompleted == null)) {
                this.SelectATTO_VAL_ALLEGATIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectATTO_VAL_ALLEGATIOperationCompleted);
            }
            this.InvokeAsync("SelectATTO_VAL_ALLEGATI", new object[] {
                        qry,
                        order}, this.SelectATTO_VAL_ALLEGATIOperationCompleted, userState);
        }
        
        private void OnSelectATTO_VAL_ALLEGATIOperationCompleted(object arg) {
            if ((this.SelectATTO_VAL_ALLEGATICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectATTO_VAL_ALLEGATICompleted(this, new SelectATTO_VAL_ALLEGATICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/UpsertCALENDARIO", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpsertCALENDARIO(string ODCalendario, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("UpsertCALENDARIO", new object[] {
                        ODCalendario,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpsertCALENDARIOAsync(string ODCalendario, string PRIVATE_TOKEN) {
            this.UpsertCALENDARIOAsync(ODCalendario, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void UpsertCALENDARIOAsync(string ODCalendario, string PRIVATE_TOKEN, object userState) {
            if ((this.UpsertCALENDARIOOperationCompleted == null)) {
                this.UpsertCALENDARIOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpsertCALENDARIOOperationCompleted);
            }
            this.InvokeAsync("UpsertCALENDARIO", new object[] {
                        ODCalendario,
                        PRIVATE_TOKEN}, this.UpsertCALENDARIOOperationCompleted, userState);
        }
        
        private void OnUpsertCALENDARIOOperationCompleted(object arg) {
            if ((this.UpsertCALENDARIOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpsertCALENDARIOCompleted(this, new UpsertCALENDARIOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/DeleteCALENDARIO", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteCALENDARIO(string ID, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("DeleteCALENDARIO", new object[] {
                        ID,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCALENDARIOAsync(string ID, string PRIVATE_TOKEN) {
            this.DeleteCALENDARIOAsync(ID, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void DeleteCALENDARIOAsync(string ID, string PRIVATE_TOKEN, object userState) {
            if ((this.DeleteCALENDARIOOperationCompleted == null)) {
                this.DeleteCALENDARIOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCALENDARIOOperationCompleted);
            }
            this.InvokeAsync("DeleteCALENDARIO", new object[] {
                        ID,
                        PRIVATE_TOKEN}, this.DeleteCALENDARIOOperationCompleted, userState);
        }
        
        private void OnDeleteCALENDARIOOperationCompleted(object arg) {
            if ((this.DeleteCALENDARIOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCALENDARIOCompleted(this, new DeleteCALENDARIOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/UpsertEM", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpsertEM(string ODEm, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("UpsertEM", new object[] {
                        ODEm,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpsertEMAsync(string ODEm, string PRIVATE_TOKEN) {
            this.UpsertEMAsync(ODEm, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void UpsertEMAsync(string ODEm, string PRIVATE_TOKEN, object userState) {
            if ((this.UpsertEMOperationCompleted == null)) {
                this.UpsertEMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpsertEMOperationCompleted);
            }
            this.InvokeAsync("UpsertEM", new object[] {
                        ODEm,
                        PRIVATE_TOKEN}, this.UpsertEMOperationCompleted, userState);
        }
        
        private void OnUpsertEMOperationCompleted(object arg) {
            if ((this.UpsertEMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpsertEMCompleted(this, new UpsertEMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/DeleteEM", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteEM(string ID, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("DeleteEM", new object[] {
                        ID,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEMAsync(string ID, string PRIVATE_TOKEN) {
            this.DeleteEMAsync(ID, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void DeleteEMAsync(string ID, string PRIVATE_TOKEN, object userState) {
            if ((this.DeleteEMOperationCompleted == null)) {
                this.DeleteEMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEMOperationCompleted);
            }
            this.InvokeAsync("DeleteEM", new object[] {
                        ID,
                        PRIVATE_TOKEN}, this.DeleteEMOperationCompleted, userState);
        }
        
        private void OnDeleteEMOperationCompleted(object arg) {
            if ((this.DeleteEMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEMCompleted(this, new DeleteEMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/SelectEM", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectEM(string qry, string order) {
            object[] results = this.Invoke("SelectEM", new object[] {
                        qry,
                        order});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectEMAsync(string qry, string order) {
            this.SelectEMAsync(qry, order, null);
        }
        
        /// <remarks/>
        public void SelectEMAsync(string qry, string order, object userState) {
            if ((this.SelectEMOperationCompleted == null)) {
                this.SelectEMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectEMOperationCompleted);
            }
            this.InvokeAsync("SelectEM", new object[] {
                        qry,
                        order}, this.SelectEMOperationCompleted, userState);
        }
        
        private void OnSelectEMOperationCompleted(object arg) {
            if ((this.SelectEMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectEMCompleted(this, new SelectEMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/UpsertTest", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpsertTest(string ODTest, string PRIVATE_TOKEN) {
            object[] results = this.Invoke("UpsertTest", new object[] {
                        ODTest,
                        PRIVATE_TOKEN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpsertTestAsync(string ODTest, string PRIVATE_TOKEN) {
            this.UpsertTestAsync(ODTest, PRIVATE_TOKEN, null);
        }
        
        /// <remarks/>
        public void UpsertTestAsync(string ODTest, string PRIVATE_TOKEN, object userState) {
            if ((this.UpsertTestOperationCompleted == null)) {
                this.UpsertTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpsertTestOperationCompleted);
            }
            this.InvokeAsync("UpsertTest", new object[] {
                        ODTest,
                        PRIVATE_TOKEN}, this.UpsertTestOperationCompleted, userState);
        }
        
        private void OnUpsertTestOperationCompleted(object arg) {
            if ((this.UpsertTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpsertTestCompleted(this, new UpsertTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://intranet.consiglio.regione.lombardia.it/OpenData/SelectGIUNTA", RequestNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", ResponseNamespace="https://intranet.consiglio.regione.lombardia.it/OpenData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectGIUNTA(string qry, string order) {
            object[] results = this.Invoke("SelectGIUNTA", new object[] {
                        qry,
                        order});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectGIUNTAAsync(string qry, string order) {
            this.SelectGIUNTAAsync(qry, order, null);
        }
        
        /// <remarks/>
        public void SelectGIUNTAAsync(string qry, string order, object userState) {
            if ((this.SelectGIUNTAOperationCompleted == null)) {
                this.SelectGIUNTAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectGIUNTAOperationCompleted);
            }
            this.InvokeAsync("SelectGIUNTA", new object[] {
                        qry,
                        order}, this.SelectGIUNTAOperationCompleted, userState);
        }
        
        private void OnSelectGIUNTAOperationCompleted(object arg) {
            if ((this.SelectGIUNTACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectGIUNTACompleted(this, new SelectGIUNTACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ConnTestCompletedEventHandler(object sender, ConnTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConnTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConnTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CheckInfoTABCompletedEventHandler(object sender, CheckInfoTABCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckInfoTABCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckInfoTABCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpsertLRCompletedEventHandler(object sender, UpsertLRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpsertLRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpsertLRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteLRCompletedEventHandler(object sender, DeleteLRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpsertLINK_ATTICompletedEventHandler(object sender, UpsertLINK_ATTICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpsertLINK_ATTICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpsertLINK_ATTICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteLINK_ATTICompletedEventHandler(object sender, DeleteLINK_ATTICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLINK_ATTICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLINK_ATTICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpsertATTOCompletedEventHandler(object sender, UpsertATTOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpsertATTOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpsertATTOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteATTOCompletedEventHandler(object sender, DeleteATTOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteATTOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteATTOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SelectATTICompletedEventHandler(object sender, SelectATTICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectATTICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectATTICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpsertATTO_SICompletedEventHandler(object sender, UpsertATTO_SICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpsertATTO_SICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpsertATTO_SICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteATTO_SICompletedEventHandler(object sender, DeleteATTO_SICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteATTO_SICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteATTO_SICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpsertCONSCompletedEventHandler(object sender, UpsertCONSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpsertCONSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpsertCONSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteCONSCompletedEventHandler(object sender, DeleteCONSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCONSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCONSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SelectCONSCompletedEventHandler(object sender, SelectCONSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectCONSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectCONSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpsertCONS_LEGCompletedEventHandler(object sender, UpsertCONS_LEGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpsertCONS_LEGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpsertCONS_LEGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteLINK_CONS_LEGCompletedEventHandler(object sender, DeleteLINK_CONS_LEGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLINK_CONS_LEGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLINK_CONS_LEGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpsertORGANOCompletedEventHandler(object sender, UpsertORGANOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpsertORGANOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpsertORGANOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteORGANOCompletedEventHandler(object sender, DeleteORGANOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteORGANOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteORGANOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpsertGRUPPOCompletedEventHandler(object sender, UpsertGRUPPOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpsertGRUPPOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpsertGRUPPOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteGRUPPOCompletedEventHandler(object sender, DeleteGRUPPOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGRUPPOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGRUPPOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpsertCOMPOSIZIONE_GRUPPOCompletedEventHandler(object sender, UpsertCOMPOSIZIONE_GRUPPOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpsertCOMPOSIZIONE_GRUPPOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpsertCOMPOSIZIONE_GRUPPOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteCOMPOSIZIONE_GRUPPOCompletedEventHandler(object sender, DeleteCOMPOSIZIONE_GRUPPOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCOMPOSIZIONE_GRUPPOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCOMPOSIZIONE_GRUPPOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SelectCOMPOSIZIONE_GRUPPOCompletedEventHandler(object sender, SelectCOMPOSIZIONE_GRUPPOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectCOMPOSIZIONE_GRUPPOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectCOMPOSIZIONE_GRUPPOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpsertCARICACompletedEventHandler(object sender, UpsertCARICACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpsertCARICACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpsertCARICACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteCARICACompletedEventHandler(object sender, DeleteCARICACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCARICACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCARICACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SelectCARICHECompletedEventHandler(object sender, SelectCARICHECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectCARICHECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectCARICHECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpsertDUPCompletedEventHandler(object sender, UpsertDUPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpsertDUPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpsertDUPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteDUPCompletedEventHandler(object sender, DeleteDUPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDUPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDUPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpsertATTO_VALCompletedEventHandler(object sender, UpsertATTO_VALCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpsertATTO_VALCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpsertATTO_VALCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteATTO_VALCompletedEventHandler(object sender, DeleteATTO_VALCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteATTO_VALCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteATTO_VALCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SelectATTI_VALCompletedEventHandler(object sender, SelectATTI_VALCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectATTI_VALCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectATTI_VALCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpsertATTO_VAL_ALLEGATOCompletedEventHandler(object sender, UpsertATTO_VAL_ALLEGATOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpsertATTO_VAL_ALLEGATOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpsertATTO_VAL_ALLEGATOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteATTO_VAL_ALLEGATOCompletedEventHandler(object sender, DeleteATTO_VAL_ALLEGATOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteATTO_VAL_ALLEGATOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteATTO_VAL_ALLEGATOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SelectATTO_VAL_ALLEGATICompletedEventHandler(object sender, SelectATTO_VAL_ALLEGATICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectATTO_VAL_ALLEGATICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectATTO_VAL_ALLEGATICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpsertCALENDARIOCompletedEventHandler(object sender, UpsertCALENDARIOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpsertCALENDARIOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpsertCALENDARIOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteCALENDARIOCompletedEventHandler(object sender, DeleteCALENDARIOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCALENDARIOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCALENDARIOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpsertEMCompletedEventHandler(object sender, UpsertEMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpsertEMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpsertEMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteEMCompletedEventHandler(object sender, DeleteEMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SelectEMCompletedEventHandler(object sender, SelectEMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectEMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectEMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpsertTestCompletedEventHandler(object sender, UpsertTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpsertTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpsertTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SelectGIUNTACompletedEventHandler(object sender, SelectGIUNTACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectGIUNTACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectGIUNTACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591