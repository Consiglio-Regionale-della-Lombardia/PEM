@using PortaleRegione.Common
@using PortaleRegione.DTO.Enum
<div id="btnComandiMassivi" class="fixed-action-btn" style="display: none">
    <a class="btn-floating btn-large pink tooltipped" data-tooltip="Comandi massivi" data-position="left">
        <i class="large material-icons">playlist_add</i>
    </a>
    <ul>
        <li>
            <a class="btn-floating approvato tooltipped" onclick="IscriviASedutaMassivoDASI()" data-position="left" data-tooltip="Iscrivi alla seduta">
                <i class="material-icons">assignment_turned_in</i> Assegna a seduta
            </a>
        </li>
        
        <li>
            <a class="btn-floating tooltipped depositato" data-position="left" data-tooltip="Depositato" onclick="CambioStatoMassivoDASI(@((int) StatiAttoEnum.PRESENTATO), '@StatiAttoEnum.PRESENTATO')">
                <i class="material-icons">lock</i>
            </a>
        </li>
        <li>
            <a class="btn-floating tooltipped trattazione" data-position="left" data-tooltip="In Trattazione" onclick="CambioStatoMassivoDASI(@((int) StatiAttoEnum.IN_TRATTAZIONE), '@StatiAttoEnum.IN_TRATTAZIONE')">
                <i class="material-icons">settings_input_antenna</i>
            </a>
        </li>
        <li>
            <a class="btn-floating tooltipped chiuso" data-position="left" data-tooltip="Chiuso" onclick="CambioStatoMassivoDASI(@((int) StatiAttoEnum.CHIUSO), '@StatiAttoEnum.CHIUSO')">
                <i class="material-icons">storage</i>
            </a>
        </li>
        <li>
            <a class="btn-floating grey tooltipped" onclick="resetGridSelection()" data-position="left" data-tooltip="Annulla">
                <i class="material-icons">undo</i>
            </a>
        </li>
    </ul>
</div>

<div id="pnlNuovoCartaceoDASI" class="fixed-action-btn" style="display: block">
    <a id="btnNuovoCartaceoDASI" class="btn-floating btn-large blue darken-1">
        <i class="large material-icons">add</i>
    </a>
</div>

<div id="modalNuovoCartaceo" class="modal">
    <div class="modal-content">
        <h4>Presentazione cartacea</h4>
        <p>seleziona il tipo di atto e il tipo di risposta se necessario</p>
        <div class="row">
            <div class="input-field col s4">
                <select id="NuovoCartaceo_Tipo" onchange="ShowHideTipoRisposta()">
                </select>
                <label for="NuovoCartaceo_Tipo">Tipo</label>
            </div>
            <div class="input-field col s4" id="panelTipoRispostaCartaceo" style="display: none;">
                <select id="NuovoCartaceo_TipoRisposta">
                </select>
                <label for="NuovoCartaceo_TipoRisposta">Tipo Risposta</label>
            </div>
            <div class="input-field col s4">
                <input id="NuovoCartaceo_Salto" type="number" min="1" step="1" value="1">
                <label for="NuovoCartaceo_Salto">Quantità</label>
            </div>
        </div>
        
    </div>
    <div class="modal-footer">
        <a id="NuovoCartaceo_Presenta" href="#!" class="modal-close waves-effect waves-green btn-flat">Presenta</a>
    </div>
</div>

<script>

    function ModificaMetaDASI(tipo) {
        openFormDASI(tipo, true);
    }

    function AbilitaComandiMassivi_DASI(uidAtto) {
        if (uidAtto) {
            var chk = $("#chk_Atto_" + uidAtto);
            var selezionaTutti = getSelezionaTutti_DASI();
            if (chk[0].checked) {
                if (selezionaTutti) {
                    removeAtto(uidAtto); //listaEsclusiva
                } else {
                    addAtto(uidAtto); //listaInsclusiva
                }
            } else {
                if (selezionaTutti) {
                    addAtto(uidAtto); //listaEsclusiva
                } else {
                    removeAtto(uidAtto); //listaInsclusiva
                }
            }
        }

        var lchk = getListaAtti();

        if (lchk.length > 0 || $("#checkAll")[0].checked) {
            $("#btnComandiMassivi").show();
            $("#pnlNuovoCartaceoDASI").hide();
        } else {
            $("#btnComandiMassivi").hide();
            $("#pnlNuovoCartaceoDASI").show();
        }
    }

    var itl_tipi_risposta = [
        { id: @((int)TipoRispostaEnum.ORALE), value: '@(TipoRispostaEnum.ORALE)'},
        { id: @((int)TipoRispostaEnum.SCRITTO), value: '@(TipoRispostaEnum.SCRITTO)'},
        { id: @((int)TipoRispostaEnum.COMMISSIONE), value: '@(TipoRispostaEnum.COMMISSIONE)'}
    ];
    var itr_tipi_risposta = [
        { id: @((int)TipoRispostaEnum.SCRITTO), value: '@(TipoRispostaEnum.SCRITTO)'},
        { id: @((int)TipoRispostaEnum.COMMISSIONE), value: '@(TipoRispostaEnum.COMMISSIONE)'}
    ];
    var iqt_tipi_risposta = [
        { id: @((int)TipoRispostaEnum.IMMEDIATA), value: '@(TipoRispostaEnum.IMMEDIATA)'}
    ];

    function ShowHideTipoRisposta() {
        $('#panelTipoRispostaCartaceo').hide();
        var tipo = $('select[id="NuovoCartaceo_Tipo"]').children("option:selected").val();
        if (tipo == @((int)TipoAttoEnum.ITL)
            || tipo == @((int)TipoAttoEnum.ITR)
            || tipo == @((int)TipoAttoEnum.IQT)) {
            $('#panelTipoRispostaCartaceo').show();
            var select = $('#NuovoCartaceo_TipoRisposta');
            select.empty();

            var tipi_risposta = [];
            if (tipo == @((int)TipoAttoEnum.ITL)) {
                tipi_risposta = itl_tipi_risposta;
            }else if (tipo == @((int)TipoAttoEnum.ITR)) {
                tipi_risposta = itr_tipi_risposta;
            }else if (tipo == @((int)TipoAttoEnum.IQT)) {
                tipi_risposta = iqt_tipi_risposta;
            }

            $.each(tipi_risposta,
                function(index, item) {
                    var template = "<option></option>";
                    select.append($(template).val(item.id).html(item.value));
                });

            var elems = document.querySelectorAll("#NuovoCartaceo_TipoRisposta");
            M.FormSelect.init(elems, null);
        }
    }

    $('#btnNuovoCartaceoDASI').on("click",
        async function() {
            $('#panelTipoRispostaCartaceo').hide();

            var tipi = await GetTipiDASI();
            if (tipi.length > 0) {
                var select = $("#NuovoCartaceo_Tipo");
                select.empty();
                $.each(tipi,
                    function(index, item) {
                        if (item.IDTipoAtto != @Html.Raw((int)TipoAttoEnum.TUTTI)) {
                            var template = "<option></option>";
                            select.append($(template).val(item.IDTipoAtto).html(item.Tipo_Atto));
                        }
                    });

                var elems = document.querySelectorAll("#NuovoCartaceo_Tipo");
                M.FormSelect.init(elems, null);
                ShowHideTipoRisposta();
            }
            $('#modalNuovoCartaceo').modal("open");
        });

    $('#NuovoCartaceo_Presenta').on("click",
        function() {
            var obj = {};
            obj.Tipo = $('select[id="NuovoCartaceo_Tipo"]').children("option:selected").val();
            obj.TipoRisposta = $('select[id="NuovoCartaceo_TipoRisposta"]').children("option:selected").val();
            obj.Salto = $('#NuovoCartaceo_Salto').val();
            $.ajax({
                url: '@Url.Action("PresentazioneCartacea")',
                method: "POST",
                data: JSON.stringify(obj),
                contentType: "application/json; charset=utf-8",
                dataType: "json"
            }).done(function(data) {
                if (data.message) {
                    swal({
                        title: "Esito salvataggio",
                        text: data.message,
                        icon: "error",
                        button: "OK"
                    });
                } else {
                    swal({
                        title: "Operazione completata",
                        icon: "success",
                        buttons: { cancel: "Annulla", confirm: "Ricarica pagina" }
                    }).then((value) => {
                        if (value == null || value == "")
                            return;
                
                        location.reload();
                    });
                }
            }).fail(function(err) {
                console.log("error", err);
                Error(err);
            });
        });

    $("#checkAll").click(function() {
        setSelezionaTutti_DASI(this.checked);
        setListaAtti([]);
        $('input[id^="chk_Atto_"]').not(this).prop('checked', this.checked);
        AbilitaComandiMassivi_DASI(null);
    });

    function resetGridSelection() {
        $("#checkAll").prop("checked", false);
        $('input[id^="chk_Atto_"]').not(this).prop("checked", false);
        setSelezionaTutti_DASI(false);
        setListaAtti([]);
        AbilitaComandiMassivi_DASI(null);
    }
</script>