@using Newtonsoft.Json
@using PortaleRegione.Client.Helpers
@using PortaleRegione.DTO.Domain
@using PortaleRegione.DTO.Enum
@using Utility = PortaleRegione.Common.Utility
@model PortaleRegione.DTO.Model.DASIFormModel

@{
    Layout = null;
    var atto = Model.Atto;
    var title = $"{Utility.GetText_Tipo(atto)} {atto.NAtto}";

    if (!atto.IsBozza)
    {
        title += $" - {atto.GetLegislatura()}";
    }

    ViewBag.Title = title;

    PersonaDto currentUser = null;

    if (HttpContext.Current.User.Identity.IsAuthenticated)
    {
        var authCookie1 = Request.Cookies["PRCookies1"];
        var authCookie2 = Request.Cookies["PRCookies2"];
        var authCookie3 = Request.Cookies["PRCookies3"];
        if (authCookie1 != null && authCookie2 != null && authCookie3 != null)
        {
            if (!string.IsNullOrEmpty(authCookie1.Value) && !string.IsNullOrEmpty(authCookie2.Value) && !string.IsNullOrEmpty(authCookie3.Value))
            {
                var authenticationTicket1 = FormsAuthentication.Decrypt(authCookie1.Value);
                var authenticationTicket2 = FormsAuthentication.Decrypt(authCookie2.Value);
                var authenticationTicket3 = FormsAuthentication.Decrypt(authCookie3.Value);
                var data = JsonConvert.DeserializeObject<PersonaDto>(string.Format("{0}{1}{2}", authenticationTicket1.UserData, authenticationTicket2.UserData, authenticationTicket3.UserData));

                currentUser = data;
            }
        }
    }
    var modeFromCache = HttpContext.Current.Cache.Get($"{CacheHelper.CLIENT_MODE}_{currentUser.UID_persona.ToString()}");
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewBag.Title</title>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">

    @Styles.Render("~/Content/css")
    @*Import Trumbowyg plugins style...*@
    <link href="~/Content/editor/plugins/table/ui/trumbowyg.table.min.css" rel="stylesheet"/>

    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    @Scripts.Render("~/bundles/lib")
    @Scripts.Render("~/bundles/logic")
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
    <script src="~/Scripts/moment.js"></script>
</head>
<body>
<script>
		$(document).ready(function () {
			$('#btnSearch').hide();
		});
	</script>
<div class="row" style="margin-bottom: unset !important">
    <div class="col s12">
        <a class="btn-floating waves-effect waves-light grey header-back" onclick="window.close()">
            <i class="material-icons">close</i>
        </a>
    </div>
</div>
<div class="row">
<div class="col s12">
<div class="card">
<div class="card-action grey lighten-4 center">
    <div class="chip @PortaleRegione.Client.Helpers.Utility.GetCSS_StatoDASI(atto.IDStato) white-text" style="min-width: unset; position: absolute; right: 10px; top: -18px;">@Utility.GetText_StatoDASI(atto.IDStato)</div>
    <h6>
        <b>
            <span>@Html.Raw(atto.gruppi_politici.nome_gruppo)</span>
        </b>
    </h6>
</div>
@if (atto.Firmabile
     || atto.Presentabile
     || atto.Eliminabile
     || atto.Ritirabile
     || atto.Modificabile
     || (atto.Invito_Abilitato
         && Convert.ToInt16(modeFromCache) != (int)ClientModeEnum.TRATTAZIONE))
{
    <div class="card-action grey lighten-4 center" style="border-top: unset">
        <div class="row" style="margin: 0 !important">
            <div class="col s12" style="margin-top: 5px">
                @if (atto.Firmabile)
                {
                    <div class="btn chip hoverable green center white-text" onclick="RevealFirmaDepositoDASI('@atto.UIDAtto', @Html.Raw((int)ActionEnum.FIRMA))">
                        <i class="icon material-icons">gavel</i> Firma
                    </div>
                }
                @if (atto.Presentabile)
                {
                    <div class="btn chip hoverable purple center white-text" onclick="RevealFirmaDepositoDASI('@atto.UIDAtto', @Html.Raw((int)ActionEnum.DEPOSITA))">
                        <i class="icon material-icons">lock</i> Deposita
                    </div>
                }
                @if (atto.Modificabile)
                {
                    <div class="btn chip hoverable blue center white-text" onclick="go('@Url.Action("Modifica", new { id = atto.UIDAtto })')">
                        <i class="icon material-icons">edit</i> Modifica
                    </div>
                }
                @if (atto.Invito_Abilitato)
                {
                    <div class="btn chip hoverable amber center" onclick="NotificaADASI('@atto.UIDAtto', @atto.Tipo)">
                        <i class="icon material-icons">share</i> Invita
                    </div>
                }
                @if (atto.Eliminabile)
                {
                    <div class="btn chip hoverable red center white-text" onclick="ConfirmActionDASI('@atto.UIDAtto', '', @Html.Raw((int)ActionEnum.ELIMINA))">
                        <i class="icon material-icons">delete</i> Elimina
                    </div>
                }
                @if (atto.Ritirabile)
                {
                    <div class="btn chip hoverable red white-text center" onclick="ConfirmActionDASI('@atto.UIDAtto', '', @Html.Raw((int)ActionEnum.RITIRA))">
                        <i class="icon material-icons">settings_backup_restore</i> Ritira Atto
                    </div>
                }
            </div>
        </div>
    </div>
}
<div class="card-content">
@*### IQT ###*@

@if (atto.Tipo == (int)TipoAttoEnum.IQT)
{
    if (string.IsNullOrEmpty(Model.Atto.DataRichiestaIscrizioneSeduta)
        && (atto.UIDPersonaProponente == Model.CurrentUser.UID_persona
            || ((Model.CurrentUser.IsCapoGruppo
                 || Model.CurrentUser.IsResponsabileSegreteriaPolitica)
                && Model.CurrentUser.Gruppo.id_gruppo == atto.id_gruppo)))
    {
        <div class="row">
            <div class="col s12 center">
                <div class="">
                    <span class="black-text">
                        <a class="btn-flat pink-text tooltipped"
                           data-tooltip="Iscrizione in seduta"
                           onclick="RichiediIscrizioneSedutaDASI('@Html.Raw(Model.Atto.UIDAtto)', '@Html.Raw(Model.Atto.Display)', @Html.Raw(Model.Atto.Tipo), @Html.Raw(Model.Atto.TipoMOZ))">
                            Iscrizione in seduta
                            <i class="material-icons right pink-text">assignment_turned_in</i>
                        </a>
                    </span>
                </div>
            </div>
        </div>
    }
    else if (!string.IsNullOrEmpty(Model.Atto.DataRichiestaIscrizioneSeduta))
    {
        <br/>
        <label>
            Richiesta iscrizione alla seduta del
        </label>
        <span>
            <b>@Model.Atto.DataRichiestaIscrizioneSeduta</b>
        </span>
        if (atto.IDStato >= (int)StatiAttoEnum.PRESENTATO)
        {
            // ignored
        }
        else if (atto.UIDPersonaProponente == Model.CurrentUser.UID_persona
                 || ((Model.CurrentUser.IsCapoGruppo
                      || Model.CurrentUser.IsResponsabileSegreteriaPolitica)
                     && Model.CurrentUser.Gruppo.id_gruppo == atto.id_gruppo))
        {
            <div class="btn chip hoverable red center white-text" onclick="RimuoviRichiestaIscrizioneDASI('@Model.Atto.UIDAtto', '@Html.Raw(Model.Atto.Display)')">
                <i class="icon material-icons">close</i> Rimuovi richiesta
            </div>
        }
    }
}

@*### MOZ e ODG ###*@


@if (atto.Tipo == (int)TipoAttoEnum.MOZ && atto.TipoMOZ == (int)TipoMOZEnum.URGENTE && !string.IsNullOrEmpty(atto.DataPresentazione_MOZ_URGENTE))
{
    <label>Richiesta di mozione urgente effettuata il </label>
    <span>
        <b>@atto.DataPresentazione_MOZ_URGENTE</b>
    </span>
    if (Model.Atto.Tipo == (int)TipoAttoEnum.MOZ
        && (Model.CurrentUser.IsCapoGruppo
            || Model.CurrentUser.IsResponsabileSegreteriaPolitica)
        && Model.CurrentUser.Gruppo.id_gruppo == atto.id_gruppo)
    {
        <div class="btn chip hoverable red center white-text" onclick="DeclassaMozione('@atto.UIDAtto', '@atto.Display', 1)">
            <i class="icon material-icons">close</i> Rimuovi urgenza
        </div>
    }
}
else if (atto.Tipo == (int)TipoAttoEnum.MOZ && atto.TipoMOZ == (int)TipoMOZEnum.ABBINATA && !string.IsNullOrEmpty(atto.DataPresentazione_MOZ_ABBINATA))
{
    <label>Richiesta di mozione abbinata effettuata il </label>
    <span>
        <b>@atto.DataPresentazione_MOZ_ABBINATA</b>
    </span>
    if (Model.Atto.Tipo == (int)TipoAttoEnum.MOZ
        && (Model.CurrentUser.IsCapoGruppo
            || Model.CurrentUser.IsResponsabileSegreteriaPolitica)
        && Model.CurrentUser.Gruppo.id_gruppo == atto.id_gruppo)
    {
        <div class="btn chip hoverable red center white-text" onclick="DeclassaMozione('@atto.UIDAtto', '@atto.Display', 2)">
            <i class="icon material-icons">close</i> Rimuovi abbinamento
        </div>
    }
}
@if (atto.Tipo == (int)TipoAttoEnum.MOZ
     && atto.TipoMOZ == (int)TipoMOZEnum.ORDINARIA
     && (atto.IDStato == (int)StatiAttoEnum.PRESENTATO
         || atto.IDStato == (int)StatiAttoEnum.IN_TRATTAZIONE)
     && (Model.CurrentUser.IsCapoGruppo
         || Model.CurrentUser.IsResponsabileSegreteriaPolitica)
     && Model.CurrentUser.Gruppo.id_gruppo == atto.id_gruppo)
{
    <div class="row">
        <div class="col s12 center">
            <div class="">
                <span class="black-text">
                    <a class="btn-flat red-text tooltipped"
                       data-tooltip="Proponi urgenza"
                       onclick="ProponiUrgenzaDASI('@Html.Raw(atto.UIDAtto)', '@Html.Raw(atto.Display)')">
                        Proponi urgenza
                        <i class="material-icons right red-text">priority_high</i>
                    </a>
                    <a class="btn-flat orange-text tooltipped"
                       data-tooltip="Proponi abbinamento"
                       onclick="ProponiAbbinataDASI('@Html.Raw(atto.UIDAtto)', '@Html.Raw(atto.Display)')">
                        Proponi abbinamento
                        <i class="material-icons right orange-text">insert_link</i>
                    </a>
                </span>
            </div>
        </div>
    </div>
}

@if ((atto.Tipo == (int)TipoAttoEnum.MOZ && (atto.IDStato == (int)StatiAttoEnum.PRESENTATO || atto.IDStato == (int)StatiAttoEnum.IN_TRATTAZIONE))
     || atto.Tipo == (int)TipoAttoEnum.ODG)
{
    if (string.IsNullOrEmpty(Model.Atto.DataRichiestaIscrizioneSeduta)
        && (Model.CurrentUser.IsCapoGruppo
            || Model.CurrentUser.IsResponsabileSegreteriaPolitica)
        && Model.CurrentUser.Gruppo.id_gruppo == atto.id_gruppo)
    {
        <div class="row">
            <div class="col s12 center">
                <div class="">
                    <span class="black-text">
                        <a class="btn-flat pink-text tooltipped"
                           data-tooltip="Iscrizione in seduta"
                           onclick="RichiediIscrizioneSedutaDASI('@Html.Raw(Model.Atto.UIDAtto)', '@Html.Raw(Model.Atto.Display)', @Html.Raw(Model.Atto.Tipo), @Html.Raw(Model.Atto.TipoMOZ))">
                            Iscrizione in seduta
                            <i class="material-icons right pink-text">assignment_turned_in</i>
                        </a>
                    </span>
                </div>
            </div>
        </div>
    }
    else if (!string.IsNullOrEmpty(Model.Atto.DataRichiestaIscrizioneSeduta))
    {
        <br/>
        if (Model.Atto.Tipo == (int)TipoAttoEnum.MOZ)
        {
            <label>
                Richiesta iscrizione alla seduta del
            </label>
            <span>
                <b>@Model.Atto.DataRichiestaIscrizioneSeduta</b>
            </span>
        }
        else if (Model.Atto.Tipo == (int)TipoAttoEnum.ODG)
        {
            <label>
                Iscrizione per la seduta del
            </label>
            <span>
                <b>@Model.Atto.DataRichiestaIscrizioneSeduta</b>
            </span>
        }

        if (Model.Atto.Tipo == (int)TipoAttoEnum.MOZ
            && (Model.CurrentUser.IsCapoGruppo
                || Model.CurrentUser.IsResponsabileSegreteriaPolitica)
            && Model.CurrentUser.Gruppo.id_gruppo == atto.id_gruppo)
        {
            <div class="btn chip hoverable red center white-text"
                 onclick="RimuoviRichiestaIscrizioneDASI('@Model.Atto.UIDAtto', '@Html.Raw(Model.Atto.Display)')">
                <i class="icon material-icons">close</i> Rimuovi richiesta
            </div>
        }
    }
}

@if (atto.Tipo == (int)TipoAttoEnum.MOZ && atto.TipoMOZ == (int)TipoMOZEnum.ORDINARIA && !string.IsNullOrEmpty(atto.DataPresentazione_MOZ))
{
    <br/>
    <label>Richiesta di iscrizione effettuata il </label>
    <span>
        <b>@atto.DataPresentazione_MOZ</b>
    </span>
}

@if (atto.DataIscrizioneSeduta.HasValue)
{
    var textSeduta = $"{atto.Seduta.Data_seduta:dd/MM/yyyy}";
    var tooltipSeduta = $"Iscritto dal {atto.DataIscrizioneSeduta.Value:dd/MM/yyyy HH:mm:ss}";
    <br/>
    <label>Iscritto alla seduta del </label>
    <span class="tooltipped" data-tooltip="@tooltipSeduta">
        <b>@textSeduta</b>
    </span>
}

@* NOTA PUBBLICA + GRUPPO + PROPONENTE *@
<div class="row">
    <div class="col s6 left">
        @if (atto.UIDPersonaModifica.HasValue && atto.IDStato < (int)StatiAttoEnum.PRESENTATO)
        {
            <label style="font-size: small !important">Ultima modifica: </label>
            <br/>
            <b>[@atto.DataModifica.Value.ToString("dd/MM/yyyy HH:mm")] @atto.PersonaModifica.DisplayName</b>
        }
        @if (!string.IsNullOrEmpty(atto.Note_Pubbliche))
        {
            <div class="green-text">
                <p style="padding-top: 10px">
                    <b>Nota ufficio dei lavori assembleari: </b>
                    @Html.Raw(atto.Note_Pubbliche)
                </p>
            </div>
        }
    </div>
    <div class="col s6 right-align">
        <label style="font-size: small !important">Proponente: </label>
        <br/>
        <b>@atto.PersonaProponente.DisplayName</b>
    </div>
</div>

@* BODY *@
<div class="row">
    <div class="col s12 center bodyEMClass">
        @Html.Raw(atto.BodyAtto)
    </div>
</div>
@* FIRME *@
<div class="row" id="pnlStandardFirme">
    <div class="col s12">
        @if (atto.Tipo == (int)TipoAttoEnum.IQT
             || atto.Tipo == (int)TipoAttoEnum.MOZ)
        {
            if ((atto.FirmeAnte.Any()
                 && Model.Atto.UIDPersonaProponente == Model.CurrentUser.UID_persona)
                || (Model.CurrentUser.IsResponsabileSegreteriaPolitica && Model.CurrentUser.Gruppo.id_gruppo == atto.id_gruppo
                    && Model.Atto.IDStato < (int)StatiAttoEnum.PRESENTATO)
                || Model.CurrentUser.IsSegreteriaAssemblea)
            {
                <a class="btn-flat pink-text" onclick="$('#pnlStandardFirme').hide();$('#pnlPrioritaFirme').show();">
                    Visualizza priorita
                    <i class="material-icons right pink-text">low_priority</i>
                </a>
                <br/>
            }
        }

        @Html.Raw(atto.Firme)

        @if (!string.IsNullOrEmpty(atto.DataPresentazione))
        {
            var testoDeposito = "Atto presentato";

            <label class="black-text">
                <b>@testoDeposito il @Html.Raw(atto.DataPresentazione)</b>
            </label>
        }

        @if (!string.IsNullOrEmpty(atto.Firme_dopo_deposito))
        {
            @Html.Raw(atto.Firme_dopo_deposito)
        }
    </div>
</div>
@if (atto.Tipo == (int)TipoAttoEnum.IQT
     || atto.Tipo == (int)TipoAttoEnum.MOZ)
{
    if (Model.Atto.UIDPersonaProponente == Model.CurrentUser.UID_persona
        || Model.CurrentUser.IsSegreteriaAssemblea
        || (Model.CurrentUser.IsResponsabileSegreteriaPolitica && Model.CurrentUser.Gruppo.id_gruppo == atto.id_gruppo))
    {
							@* FIRME PRIORITA' *@
        <div class="row" id="pnlPrioritaFirme" style="display: none;">
            <div class="col s12">
                <a class="btn-flat pink-text" onclick="$('#pnlPrioritaFirme').hide();$('#pnlStandardFirme').show();">
                    Visualizza griglia
                    <i class="material-icons right pink-text">grid_on</i>
                </a>
                <br/>

                <ul class="collapsible expandable">
                    @{
                        var firmeGroup = new List<AttiFirmeDto>();
                        firmeGroup.AddRange(atto.FirmeAnte);
                        firmeGroup.AddRange(atto.FirmePost);
                    }
                    @foreach (var firme in firmeGroup)
                    {
                        <li>
                            @if (firme.Prioritario)
                            {
                                <div class="collapsible-header valign-wrapper">
                                    @if (atto.UIDPersonaProponente != firme.UID_persona)
                                    {
                                        <a class="btn-floating white secondary-content tooltipped" data-tooltip="Aggiungi/rimuovi priorità firmatario"
                                           onclick="CambiaPrioritaFirma(this, '@firme.UIDAtto', '@firme.UID_persona');">
                                            <i class="material-icons black-text" style="margin-left: 5px;">star</i>
                                        </a>
                                    }
                                    @firme.FirmaCert

                                </div>
                            }
                            else
                            {
                                <div class="collapsible-header valign-wrapper">
                                    @if (string.IsNullOrEmpty(firme.Data_ritirofirma))
                                    {
                                        <a class="btn-floating white secondary-content tooltipped" data-tooltip="Aggiungi/rimuovi priorità firmatario"
                                           onclick="CambiaPrioritaFirma(this, '@firme.UIDAtto', '@firme.UID_persona');">
                                            <i class="material-icons" style="margin-left: 5px;">star_border</i>
                                        </a>
                                        @firme.FirmaCert
                                    }
                                    else
                                    {
                                        <del>@firme.FirmaCert</del>
                                    }
                                </div>
                            }
                        </li>
                    }
                </ul>

            </div>
        </div>
    }
}

@* INVITI *@
@if (!string.IsNullOrEmpty(atto.Destinatari))
{
    <div class="row">
        <div class="col s12">
            <h5>Invitati</h5>
            <hr/>
            @Html.Raw(atto.Destinatari)
        </div>
    </div>
}

@* NOTE RISERVATE *@
@if (!string.IsNullOrEmpty(atto.Note_Private) &&
     (User.IsInRole(RuoliExt.Amministratore_PEM)
      || User.IsInRole(RuoliExt.Segreteria_Assemblea)))
{
    <div class="row">
        <div class="col s12 red-text">
            <p>
                <b>Nota riservata:</b>
                @Html.Raw(atto.Note_Private)
            </p>
        </div>
    </div>
}
</div>
</div>
</div>
</div>

<div class="fixed-action-btn">
    @if (Model.CurrentUser.UID_persona == atto.UIDPersonaProponente)
    {
        <a class="btn-floating btn-large white black-text tooltipped"
           data-position="left"
           data-tooltip="Stampa"
           data-url="@Url.Action("Download", "DASI", new { id = atto.UIDAtto })"
           data-url-privacy="@Url.Action("DownloadWithPrivacy", "DASI", new { id = atto.UIDAtto })"
           onclick="StampaUOLA(this)"
           style="margin-right: 15px;">
            <i class="material-icons">print</i>
        </a>
    }
    else
    {
        <a class="btn-floating btn-large white black-text tooltipped"
           data-position="left"
           data-tooltip="Stampa"
           target="_blank"
           href="@Url.Action("DownloadWithPrivacy", "DASI", new { id = atto.UIDAtto })"
           style="margin-right: 15px;">
            <i class="material-icons">print</i>
        </a>
    }
</div>

@Html.Partial("_InvitoPanel", atto)

@{
    Html.RenderPartial("_ProponiMozioneUrgenteModal");
    Html.RenderPartial("_ProponiMozioneAbbinataModal");
    Html.RenderPartial("_RichiestaIscrizioneASedutaModal", false);
}
<script>
    var sedute = [];
	var seduteMOZU = [];

    var templateSeduteAttive = "<li class='collection-item'><div><p><label><input name='gruppoSeduteAttive' type='radio' value='{VALUE}' {CHECKED}/><span>{TEXT}</span></label></p></div></li>";
    $(window).on("load",
        async function() {
            if (sedute.length == 0) {
                var data = await GetSeduteAttive();
                sedute = data.Results;
            }
			if (seduteMOZU.length == 0) {
				var data = await GetSeduteAttiveMOZU();
				seduteMOZU = data.Results;
			}
        });

    function CambiaPrioritaFirma(ctrl, uidAtto, uidPersona) {

        var body = {};
        body.UIDAtto = uidAtto;
        body.UID_persona = uidPersona;

        var url = "@Url.Action("CambiaPrioritaFirma", "DASI")";
        $.ajax({
            url: url,
            type: "POST",
            data: JSON.stringify(body),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            beforeSend: function() {
                console.log("RICHIESTA INVIATA");
            },
            success: function(response, status, xhr) {
                if (response.message) {
                    swal({
                        title: "Azione non permessa",
                        text: response.message,
                        icon: "error"
                    });
                    return;
                }
                var elem = $(ctrl).find('i');
                if (elem.text() == "star") {
                    elem.text("star_border");
                    elem.removeClass("black-text");
                } else {
                    elem.text("star");
                    elem.addClass("black-text");
                }
            },
            error: function(xhr, status, error) {
                console.error("Errore nella richiesta: " + status + ". Motivo: " + error);
            },
            complete: function() {
                console.log("OK");
            },
            cache: false,
            processData: false
        });
    }
    function DeclassaMozione(uidAtto, nome, tipo) {
        var nome_atto = nome;
    var azione = "l'urgenza";
    if (tipo == 2) {
        azione ="l'abbinamento";
    }
        swal("Verrà rimosso dall'atto " + nome_atto + " " + azione + ". Sei sicuro?",
            {
                buttons: {
                    cancel: "Annulla",
                    confirm: {
                        className: "red white-text",
                        title: "Rimuovi urgenza/abbinamento",
                        value: true
                    }
                }
            }).then((value) => {
            if (value == true) {
                var url = '@Url.Action("DeclassaMozione", "DASI")';
                var mozs = [];
                mozs.push(uidAtto);
                $.ajax({
                    url: url,
                    type: "POST",
                    data: JSON.stringify(mozs),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json"
                }).done(function(data) {
					if (data.message) {
						swal({
							title: "Errore",
							text: data.message,
							icon: "error"
						});
					}else
                    {
                        location.reload();
                    }

                }).fail(function(err) {
                    console.log("error", err);
                    Error(err);
                });
            }
        });
    }

	function RevealFirmaDepositoDASI(id, action) {

		var text = "";
		var button = "";
		if (action == 3) {
			text = "Inserisci il PIN per firmare";
			button = "Firma";
		} else if (action == 4) {
			text = "Inserisci il PIN per presentare";
			button = "Presenta";
		}

		swal(text,
			{
				content: {
					element: "input",
					attributes: { placeholder: "******", className: "password" }
				},
				icon: "info",
				buttons: { cancel: "Annulla", confirm: button }
			})
			.then((value) => {
				if (value == null || value == "")
					return;

				$.ajax({
					url: baseUrl + "/dasi/azioni?id=" + id + "&azione=" + action + "&pin=" + value,
					method: "GET"
				}).done(function (data) {
					console.log('esito', data.message)
					if (data.message) {
						var typeMessage = "error";
						var message = data.message;
						var str = data.message;
						var pos = str.indexOf("OK");
						if (pos > 0) {
							typeMessage = "success";
						}
						pos = str.indexOf("?!?");
						if (pos > 0) {
							typeMessage = "info";
							message = "Proposta di firma inviata al proponente";
						}

						swal({
							title: "Esito " + button,
							text: message,
							icon: typeMessage,
							button: "OK"
						}).then(() => {
							if (data.message.includes("OK") || data.message.includes("?!?")) {
                                window.opener.postMessage("aggiornaPadre", "@AppSettingsConfiguration.URL_CLIENT");
								location.reload();
							}
						});
					}
				}).fail(function (err) {
					console.log("error", err);
					Error(err);
				});
			});
	}

	function ConfirmActionDASI(id, name, action) {

		$("#attoActionDisplayName").empty();
		$("#attoActionDisplayName").append(name);
		$("#attoActionMessage").empty();

		if (action == 1) {
			$("#btnConfermaActionDASI").text("ELIMINA");
			$("#attoActionMessage").append("Stai per eliminare l'atto selezionato. Sei sicuro?");
		} else if (action == 2) {
			$("#btnConfermaActionDASI").text("RITIRA");
			$("#attoActionMessage").append("Stai per ritirare l'atto selezionato. Sei sicuro?");
		}
		$("#btnConfermaActionDASI").on("click",
			function () {
				$.ajax({
					url: baseUrl + "/dasi/azioni?id=" + id + "&azione=" + action,
					method: "GET"
				}).done(function (data) {

					$("#modalActionDASI").modal("close");
					$("#btnConfermaActionDASI").off("click");

					if (data.message) {
						swal({
							title: "Errore",
							text: data.message,
							icon: "error"
						});
					} else {
                        window.opener.postMessage("aggiornaPadre", "@AppSettingsConfiguration.URL_CLIENT");
						window.close();
					}
				}).fail(function (err) {
					console.log("error", err);
					Error(err);
				});
			});
		$("#modalActionDASI").modal("open");
	}

	function RitiraFirmaDASI(id) {
		swal("Inserisci il pin per ritirare la firma",
			{
				content: {
					element: "input",
					attributes: { placeholder: "******", className: "password" }
				},
				icon: "warning",
				buttons: { cancel: "Annulla", confirm: "Ritira" }
			})
			.then((value) => {
				if (value == null || value == "")
					return;
				$.ajax({
					url: baseUrl + "/dasi/ritiro-firma?id=" + id + "&pin=" + value,
					method: "GET"
				}).done(function (data) {
					var typeMessage = "error";
					var str = data.message;
					var pos = str.indexOf("OK");
					if (pos > 0) {
						typeMessage = "success";
					}
					pos = str.indexOf("INFO");
					if (pos > 0) {
						typeMessage = "info";
						data.message = data.message.replace("INFO: ", "");
					}
					swal({
						title: "Esito ritiro firma",
						text: data.message,
						icon: typeMessage,
						button: "OK"
					}).then(() => {
						location.reload();
                        window.opener.postMessage("aggiornaPadre", "@AppSettingsConfiguration.URL_CLIENT");
					});
				}).fail(function (err) {
					console.log("error", err);
					Error(err);
				});
			});
	}

	function EliminaFirmaDASI(id) {

		swal("Inserisci il pin per eliminare la firma",
			{
				content: {
					element: "input",
					attributes: { placeholder: "******", className: "password" }
				},
				icon: "warning",
				buttons: { cancel: "Annulla", confirm: "Elimina" }
			})
			.then((value) => {
				if (value == null || value == "")
					return;
				$.ajax({
					url: baseUrl + "/dasi/elimina-firma?id=" + id + "&pin=" + value,
					method: "GET"
				}).done(function (data) {
					if (data.message) {
						var typeMessage = "error";
						var str = data.message;
						var pos = str.indexOf("OK");
						if (pos > 0) {
							typeMessage = "success";
						}
						swal({
							title: "Esito ritiro firma",
							text: data.message,
							icon: typeMessage,
							button: "OK"
						}).then(() => {
							location.reload();
                            window.opener.postMessage("aggiornaPadre", "@AppSettingsConfiguration.URL_CLIENT");
						});
					} else {
						location.reload();
                        window.opener.postMessage("aggiornaPadre", "@AppSettingsConfiguration.URL_CLIENT");
					}
				}).fail(function (err) {
					console.log("error", err);
					Error(err);
				});
			});
	}
</script>

<div id="modalActionDASI" class="modal" style="height: unset !important">
    <div class="modal-content">
        <h5 id="attoActionDisplayName"></h5>
        <p id="attoActionMessage"></p>
        <div class="modal-footer" style="position: unset !important;">
            <button type="button" class="btn modal-close grey">Annulla</button>
            <a id="btnConfermaActionDASI" class="btn red" href="#">Elimina</a>
        </div>
    </div>
</div>

</body>
</html>