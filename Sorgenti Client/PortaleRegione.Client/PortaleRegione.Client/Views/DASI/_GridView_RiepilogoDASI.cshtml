@using PortaleRegione.Client.Helpers
@using PortaleRegione.DTO.Enum
@model PortaleRegione.DTO.Model.RiepilogoDASIModel

@{
    Html.RenderPartial("_PaginationBar", Model.Data.Paging);
    Html.RenderPartial("_Command_RiepilogoDASI", Model);
}

@if (!Model.Data.Results.Any())
{
    <div class="row">
        <div class="col s12">
            <div class="card-panel panel-warning center">
                <span class="center">
                    @{
                        var require_my_sign = Convert.ToBoolean(HttpUtility.ParseQueryString(Request.Url.Query).Get("require_my_sign"));
                        if (require_my_sign)
                        {
                            <p>Non ci sono atti dove è richiesta la tua firma</p>
                        }
                        else
                        {
                            <p>Non ci sono atti al momento</p>
                        }
                    }
                </span>
            </div>
        </div>
    </div>
}
else
{
    <table class="responsive-table highlight">
        <thead>
        <tr>
        <th width="5" class="center">
            
        </th>
            <th width="150">Atto</th>
            <th>Tipo</th>
            <th>Oggetto</th>
            <th width="150">Firmatari</th>
            <th width="150">Stato</th>
            @if (Model.ClientMode == ClientModeEnum.GRUPPI)
            {
                if (Model.Stato != StatiAttoEnum.BOZZA)
                {
                    <th>Seduta</th>
                }
            }
            <th width="100"></th>
        </tr>
        </thead>

        <tbody>
        @foreach (var item in Model.Data.Results)
        {
            <tr>
                <td>
                    <p>
                        <label>
                            <input type="checkbox" id="chk_Atto_@item.UIDAtto" onclick="AbilitaComandiMassivi_DASI('@item.UIDAtto');"/>
                            <span></span>
                        </label>
                    </p>
                </td>
                <td>
                    <div class="chip @Html.Raw(Utility.GetCSS_TipoDASI(item.Tipo))">
                        @{
                            var title = $"{PortaleRegione.Common.Utility.GetText_TipoDASI(item.Tipo)} ";
                            title += item.NAtto;
                        }
                        @Html.Raw(title)
                    </div>
                </td>
                <td>
                    <span class="@Utility.GetText_TipoRispostaCommissioneCSSTooltipDASI(item)" data-tooltip="@Utility.GetText_TipoRispostaCommissioneTooltipDASI(item)">
                        @Utility.GetText_TipoRispostaDASI(item.IDTipo_Risposta)
                    </span>
                </td>
                <td>@Html.Raw(item.Oggetto)</td>
                <td>
                    @{
                        var codice_gruppo = item.gruppi_politici.codice_gruppo;

                        var proponente = $"{item.PersonaProponente.DisplayName} ({codice_gruppo})";
                    }
                    @if (!item.Firmato_Dal_Proponente)
                    {
                        <span class="grey-text tooltipped" data-tooltip="Il Proponente non ha ancora firmato">
                            @Html.Raw(proponente)
                        </span>
                    }
                    else
                    {
                        <b>
                            @Html.Raw(proponente)
                        </b>
                    }

                    @if (item.ConteggioFirme > 1)
                    {
                        <br/>
                        <a class='chip tooltipped blue white-text' data-position='left' data-tooltip='@item.Firme' style="min-width: unset">
                            + @Html.Raw(item.ConteggioFirme - 1) <i class='icon material-icons right' style="margin-left: unset">group</i>
                        </a>
                    }
                </td>
                <td class="@Html.Raw(Utility.GetCSS_StatoDASI(item.IDStato))">
                    @Html.Raw(PortaleRegione.Common.Utility.GetText_StatoDASI(item.IDStato))
                </td>
                @if (Model.ClientMode == ClientModeEnum.GRUPPI)
                {
                    if (item.IDStato != (int) StatiAttoEnum.BOZZA && item.UIDSeduta.HasValue)
                    {
                        var textSeduta = $"Seduta del {item.Seduta.Data_seduta.Value:dd/MM/yyyy}";
                        var tooltipSeduta = $"Iscritto dal {item.DataIscrizioneSeduta.Value:dd/MM/yyyy HH:mm:ss}";
                        <td>
                            <div class="chip badgeSeduta tooltipped" data-tooltip="@tooltipSeduta">
                                @textSeduta
                            </div>
                        </td>
                    }
                    else if (item.IDStato != (int) StatiAttoEnum.BOZZA)
                    {
                        <td>
                        </td>
                    }
                }
                <td class="center">
                    @if (Model.ClientMode == ClientModeEnum.GRUPPI)
                    {
                        if (item.IDStato == (int) StatiAttoEnum.BOZZA)
                        {
                        @*<a class="amber-text tooltipped" data-tooltip="Invita">
                    <i class="icon material-icons">send</i>
                </a>*@
                            if (item.Firmabile)
                            {
                                <a class="green-text tooltipped" data-tooltip="Firma" onclick="RevealFirmaDepositoDASI('@item.UIDAtto', @Html.Raw((int) ActionEnum.FIRMA))">
                                    <i class="icon material-icons">gavel</i>
                                </a>
                            }
                            if (item.Presentabile)
                            {
                                <a class="purple-text tooltipped" data-tooltip="Presenta" onclick="RevealFirmaDepositoDASI('@item.UIDAtto', @Html.Raw((int) ActionEnum.DEPOSITA))">
                                    <i class="material-icons">lock</i>
                                </a>
                            }
                        }

                        if (item.Eliminabile)
                        {
                            <a class="red-text tooltipped" data-tooltip="Elimina atto" onclick="ConfirmActionDASI('@item.UIDAtto', '@Html.Raw(title)', @Html.Raw((int) ActionEnum.ELIMINA))">
                                <i class="material-icons">close</i>
                            </a>
                        }
                        if (item.Ritirabile)
                        {
                            <a class="red-text tooltipped" data-tooltip="Ritira atto" onclick="ConfirmActionDASI('@item.UIDAtto', '@Html.Raw(title)', @Html.Raw((int) ActionEnum.RITIRA))">
                                <i class="material-icons">close</i>
                            </a>
                        }
                    }

                    <a class="black-text tooltipped" data-tooltip="Visualizza" onclick="go('@Url.Action("ViewAtto", "DASI", new {id = item.UIDAtto})')">
                        <i class="icon material-icons">chevron_right</i>
                    </a>
                </td>
            </tr>
        }
        </tbody>
    </table>
}