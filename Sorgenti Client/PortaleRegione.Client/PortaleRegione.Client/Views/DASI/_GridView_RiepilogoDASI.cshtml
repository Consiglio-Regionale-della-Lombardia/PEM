@using PortaleRegione.Client.Controllers
@using PortaleRegione.Common
@using PortaleRegione.DTO.Enum
@model PortaleRegione.DTO.Model.RiepilogoDASIModel

@{
    Html.RenderPartial("_PaginationBar", Model.Data.Paging);
    Html.RenderPartial("_Command_RiepilogoDASI", Model);
}

@if (!Model.Data.Results.Any())
{
    <div class="row">
        <div class="col s12">
            <div class="card-panel panel-warning center">
                <span class="center">
                    @{
                        var require_my_sign = Convert.ToBoolean(HttpUtility.ParseQueryString(Request.Url.Query).Get("require_my_sign"));
                        if (require_my_sign)
                        {
                            <p>Non ci sono atti dove è richiesta la tua firma</p>
                        }
                        else
                        {
                            <p>Non ci sono atti al momento</p>
                        }
                    }
                </span>
            </div>
        </div>
    </div>
}
else
{
    <table class="responsive-table highlight">
        <thead>
        <tr>
            <th></th>
            <th>Atto</th>
            <th>Tipo</th>
            <th>Oggetto</th>
            <th>Firmatari</th>
            <th>Stato</th>
            @if (Model.ClientMode == ClientModeEnum.GRUPPI)
            {
                <th>Seduta</th>
            }
            <th></th>
        </tr>
        </thead>

        <tbody>
        @foreach (var item in Model.Data.Results)
        {
            <tr>
                <td style="width: 1%;">
                    <p>
                        <label>
                            <input type="checkbox" id="chk_Atto_@item.UIDAtto" onclick="AbilitaComandiMassivi_DASI('@item.UIDAtto');"/>
                            <span></span>
                        </label>
                    </p>
                </td>
                <td style="width: @Html.Raw(item.IDStato!= (int) StatiAttoEnum.BOZZA? "3":"6")%;">
                    @{
                        var title = $"{Utility.GetText_TipoDASI(item.Tipo)} ";
                        title += item.NAtto;
                    }
                    <div id="atto_@item.UIDAtto" class="chip hoverable @Html.Raw(PortaleRegione.Client.Helpers.Utility.GetCSS_TipoDASI(item.Tipo))" data-nome-atto="@title" onclick="go('@Url.Action("ViewAtto", "DASI", new {id = item.UIDAtto})')">
                        @Html.Raw(title)
                    </div>
                </td>
                <td style="width: 8%;">
                    <span class="@PortaleRegione.Client.Helpers.Utility.GetText_TipoRispostaCommissioneCSSTooltipDASI(item)" data-tooltip="@PortaleRegione.Client.Helpers.Utility.GetText_TipoRispostaCommissioneTooltipDASI(item)">
                        @Utility.GetText_TipoRispostaDASI(item.IDTipo_Risposta)
                    </span>
                </td>
                <td style="width: 18%;">
                    @if (string.IsNullOrEmpty(item.Oggetto_Modificato))
                    {
                        @Html.Raw(item.Oggetto)
                    }
                    else
                    {
                        @Html.Raw(item.Oggetto_Modificato)
                    }
                </td>
                <td style="width: 10%;">
                    @{
                        var codice_gruppo = item.gruppi_politici.codice_gruppo;

                        var proponente = $"{item.PersonaProponente.DisplayName} ({codice_gruppo})";
                    }
                    @if (!item.Firmato_Dal_Proponente)
                    {
                        <span class="grey-text tooltipped" data-tooltip="Il Proponente non ha ancora firmato">
                            @Html.Raw(proponente)
                        </span>
                    }
                    else
                    {
                        <b>
                            @Html.Raw(proponente)
                        </b>
                    }

                    @if (item.ConteggioFirme > 1)
                    {
                        <br/>
                        <a class='chip tooltipped blue white-text' data-position='left' data-tooltip='@item.Firme' style="min-width: unset">
                            + @Html.Raw(item.ConteggioFirme - 1) <i class='icon material-icons right' style="margin-left: unset">group</i>
                        </a>
                    }
                </td>
                @{
                    var tooltipStato = "Non ancora presentato";
                    if (item.IDStato >= (int) StatiAttoEnum.PRESENTATO)
                    {
                        tooltipStato = $"Presentato il {item.DataPresentazione}";
                    }
                }
                <td style="width: 6%;" class="@Html.Raw(PortaleRegione.Client.Helpers.Utility.GetCSS_StatoDASI(item.IDStato)) tooltipped" data-tooltip="@tooltipStato" title="@tooltipStato">
                    @Html.Raw(Utility.GetText_StatoDASI(item.IDStato))
                </td>

                @if (Model.ClientMode == ClientModeEnum.GRUPPI)
                {
                    <td style="width: 9%;">
                        @if (!string.IsNullOrEmpty(item.DataRichiestaIscrizioneSeduta) && !item.UIDSeduta.HasValue)
                        {
                            var textSeduta = $"Seduta del {item.DataRichiestaIscrizioneSeduta}";
                            var tooltipSeduta = "Richiesta in attesa di elaborazione";

                            <div class="chip badgeDISABLED tooltipped" data-tooltip="@tooltipSeduta">
                                @textSeduta
                                <i class="material-icons tiny red-text tooltipped" data-tooltip="Rimuovi richiesta" onclick="RimuoviRichiestaIscrizioneDASI('@item.UIDAtto', '@Html.Raw(title)')">close</i>
                            </div>
                        }
                        else if (item.IDStato != (int) StatiAttoEnum.BOZZA && item.UIDSeduta.HasValue)
                        {
                            var textSeduta = $"Seduta del {item.Seduta.Data_seduta:dd/MM/yyyy}";
                            var tooltipSeduta = $"Iscritto dal {item.DataIscrizioneSeduta.Value:dd/MM/yyyy HH:mm:ss}";
                            <div class="chip badgeSeduta tooltipped" data-tooltip="@tooltipSeduta">
                                @textSeduta
                            </div>
                        }
                        else if (item.IDStato > (int) StatiAttoEnum.BOZZA && item.IDStato != (int) StatiAttoEnum.RITIRATO)
                        {
                            if ((item.Tipo is (int)TipoAttoEnum.IQT 
                                 && (Model.CurrentUser.IsCapoGruppo 
                                 || item.UIDPersonaPrimaFirma.Value == Model.CurrentUser.UID_persona))
                                || (item.Tipo is (int)TipoAttoEnum.MOZ 
                                 && Model.CurrentUser.IsCapoGruppo)
                                || (item.Tipo is (int)TipoAttoEnum.ODG 
                                 && Model.CurrentUser.IsCapoGruppo))
                            {
                                <a class="btn-flat blue-text" title="Proponi iscrizione a seduta" onclick="RichiediIscrizioneSedutaDASI('@Html.Raw(item.UIDAtto)', '@Html.Raw(title)')">
                                    <i class="material-icons right">chevron_right</i>
                                    Proponi iscrizione
                                </a>
                            }
                        }
                        else if (item.IDStato != (int) StatiAttoEnum.BOZZA)
                        {
                        }
                    </td>
                }
                <td class="center" style="width: 5%;">
                    @if (Model.ClientMode == ClientModeEnum.GRUPPI)
                    {
                        if (item.IDStato == (int) StatiAttoEnum.BOZZA)
                        {
                            @*<a class="amber-text tooltipped" data-tooltip="Invita">
                        <i class="icon material-icons">send</i>
                    </a>*@
                            if (item.Firmabile)
                            {
                                <a class="green-text tooltipped" data-tooltip="Firma" onclick="RevealFirmaDepositoDASI('@item.UIDAtto', @Html.Raw((int) ActionEnum.FIRMA))">
                                    <i class="icon material-icons">gavel</i>
                                </a>
                            }
                            if (item.Presentabile)
                            {
                                <a class="purple-text tooltipped" data-tooltip="Presenta" onclick="RevealFirmaDepositoDASI('@item.UIDAtto', @Html.Raw((int) ActionEnum.DEPOSITA))">
                                    <i class="material-icons">lock</i>
                                </a>
                            }
                        }

                        if (item.Eliminabile)
                        {
                            <a class="red-text tooltipped" data-tooltip="Elimina atto" onclick="ConfirmActionDASI('@item.UIDAtto', '@Html.Raw(title)', @Html.Raw((int) ActionEnum.ELIMINA))">
                                <i class="material-icons">close</i>
                            </a>
                        }
                        if (item.Ritirabile)
                        {
                            <a class="red-text tooltipped" data-tooltip="Ritira atto" onclick="ConfirmActionDASI('@item.UIDAtto', '@Html.Raw(title)', @Html.Raw((int) ActionEnum.RITIRA))">
                                <i class="material-icons">close</i>
                            </a>
                        }
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
}