@using PortaleRegione.Common
@using PortaleRegione.DTO.Enum
@model PortaleRegione.DTO.Model.RiepilogoDASIModel

@{
    Html.RenderPartial("_PaginationBar", Model.Data.Paging);
    Html.RenderPartial("_Command_RiepilogoDASI", Model);
}

@if (!Model.Data.Results.Any())
{
    <div class="row">
        <div class="col s12">
            <div class="card-panel panel-warning center">
                <span class="center">
                    @{
                        var require_my_sign = Convert.ToBoolean(HttpUtility.ParseQueryString(Request.Url.Query).Get("require_my_sign"));
                        if (require_my_sign)
                        {
                            <p>Non ci sono atti dove è richiesta la tua firma</p>
                        }
                        else
                        {
                            <p>Non ci sono atti al momento</p>
                        }
                    }
                </span>
            </div>
        </div>
    </div>
}
else
{
    <ul id="gridView" class="collapsible expandable">
    @foreach (var item in Model.Data.Results)
    {
        var title = $"{Utility.GetText_Tipo(item)} ";
        title += item.NAtto;

        <li class="active badgeBody">
        <div class="collapsible-header @Html.Raw(PortaleRegione.Client.Helpers.Utility.GetCSS_TipoDASI(item.Tipo))" tabindex="0">
            <div class="col s10 valign-wrapper">
                <p>
                    <label>
                        <input type="checkbox" id="chk_Atto_@item.UIDAtto" onclick="AbilitaComandiMassivi_DASI('@item.UIDAtto');" />
                        <span>@title</span>
                    </label>
                </p>
                @if (item.PresentatoOltreITermini)
                {
                    <i class="close material-icons red-text tooltipped icon_info_grid" data-position="bottom" data-tooltip="Depositato oltre i termini">warning</i>
                }
                @if (item.TipoMOZ == (int)TipoMOZEnum.URGENTE)
                {
                    <i class="close material-icons red-text tooltipped icon_info_grid" data-position="bottom" data-tooltip="Proposta di urgenza">priority_high</i>
                }
                @if (item.TipoMOZ == (int)TipoMOZEnum.CENSURA)
                {
                    <i class="close material-icons purple-text tooltipped icon_info_grid" data-position="bottom" data-tooltip="Proposta di censura">speaker_notes_off</i>
                }
                @if (item.TipoMOZ == (int)TipoMOZEnum.SFIDUCIA)
                {
                    <i class="close material-icons red-text tooltipped icon_info_grid" data-position="bottom" data-tooltip="Proposta di sfiducia">thumb_down</i>
                }
                @if (item.TipoMOZ == (int)TipoMOZEnum.ABBINATA)
                {
                    <i class="close material-icons orange-text tooltipped icon_info_grid" data-position="bottom" data-tooltip="Proposta di abbinata">insert_link</i>
                    <a class="blue-text" style="text-decoration: underline;" onclick="go('@Url.Action("ViewAtto", "DASI", new {id = item.UID_MOZ_Abbinata})')">@item.MOZ_Abbinata</a>
                }
                @if (item.Tipo == (int)TipoAttoEnum.ODG)
                {
                    <i class="close material-icons orange-text icon_info_grid">insert_link</i>
                    <label class="blue-text">@item.ODG_Atto_PEM</label>
                }
                @if (item.Non_Passaggio_In_Esame)
                {
                    <i class="close material-icons red-text tooltipped icon_info_grid" data-position="bottom" data-tooltip="Ordine del giorno di NON passaggio in esame">new_releases</i>
                }
            </div>
            
            <div class="col s2 valign-wrapper">
                @{
                    var tooltipStato = "Non ancora depositato";
                    if (item.IDStato >= (int)StatiAttoEnum.PRESENTATO)
                    {
                        tooltipStato = $"Depositato il {item.DataPresentazione}";
                    }
                }
                @if (Model.Stato != StatiAttoEnum.BOZZA)
                {
                    <span class="@Html.Raw(PortaleRegione.Client.Helpers.Utility.GetCSS_StatoDASI(item.IDStato)) tooltipped" data-tooltip="@tooltipStato" title="@tooltipStato">
                        @Html.Raw(Utility.GetText_StatoDASI(item.IDStato))
                    </span>
                }
            </div>

            @*COMANDI*@
            <div class="col s2 right-align" style="margin-top: 15px">
                @if (Model.ClientMode == ClientModeEnum.GRUPPI)
                {
                    if (item.Tipo != (int)TipoAttoEnum.ITL 
                        && item.Tipo != (int)TipoAttoEnum.ITR)
                    {
                        <a class='dropdown-trigger' href='#' data-target='dropdown_@item.UIDAtto'>
                            <i class="icon material-icons black-text">settings</i>
                        </a>

                        <!-- Dropdown Structure -->
                        <ul id='dropdown_@item.UIDAtto' class='dropdown-content' style="max-width: 300px">
                            @if (item.Tipo == (int)TipoAttoEnum.MOZ && item.TipoMOZ == (int)TipoMOZEnum.ORDINARIA)
                            {
                                <li>
                                    <a onclick="ProponiUrgenzaDASI('@Html.Raw(item.UIDAtto)', '@Html.Raw(title)')">
                                        Proponi urgenza
                                    </a>
                                </li>
                                <li>
                                    <a onclick="ProponiAbbinataDASI('@Html.Raw(item.UIDAtto)', '@Html.Raw(title)')">
                                        Proponi abbinamento
                                    </a>
                                </li>
                            }

                            @if ((item.IDStato > (int)StatiAttoEnum.BOZZA
                                  || item.Tipo is (int)TipoAttoEnum.ODG
                                  || item.Tipo is (int)TipoAttoEnum.MOZ
                                  || item.Tipo is (int)TipoAttoEnum.IQT)
                                 && item.IDStato != (int)StatiAttoEnum.CHIUSO)
                            {
                                if ((item.Tipo is (int)TipoAttoEnum.IQT
                                     && (Model.CurrentUser.IsCapoGruppo
                                         || item.UIDPersonaProponente.HasValue && item.UIDPersonaProponente.Value == Model.CurrentUser.UID_persona))
                                    || (item.Tipo is (int)TipoAttoEnum.MOZ
                                        && Model.CurrentUser.IsCapoGruppo)
                                    || (item.Tipo is (int)TipoAttoEnum.ODG
                                        && Model.CurrentUser.IsCapoGruppo))
                                {
                                    <li>
                                        <a onclick="RichiediIscrizioneSedutaDASI('@Html.Raw(item.UIDAtto)', '@Html.Raw(title)')">
                                            Proponi iscrizione
                                        </a>
                                    </li>
                                }
                            }
                        </ul>
                    }

                    if (item.IDStato >= (int)StatiAttoEnum.PRESENTATO)
                    {
                        <a class="blue-text tooltipped" data-tooltip="Vai alla banca dati in internet" onclick="goToGeasi('@Utility.GetText_Tipo(item.Tipo)', @item.NAtto, @item.Legislatura)">
                            <i class="icon material-icons">remove_red_eye</i>
                        </a>
                    }

                    if (item.IDStato == (int)StatiAttoEnum.BOZZA)
                    {
                        if (item.Firmabile)
                        {
                            <a class="green-text tooltipped" data-tooltip="Firma" onclick="RevealFirmaDepositoDASI('@item.UIDAtto', @Html.Raw((int)ActionEnum.FIRMA))">
                                <i class="icon material-icons">gavel</i>
                            </a>
                        }
                        if (item.Presentabile)
                        {
                            <a class="purple-text tooltipped" data-tooltip="Deposita" onclick="RevealFirmaDepositoDASI('@item.UIDAtto', @Html.Raw((int)ActionEnum.DEPOSITA))">
                                <i class="material-icons">lock</i>
                            </a>
                        }
                    }

                    if (item.Eliminabile)
                    {
                        <a class="red-text tooltipped" data-tooltip="Elimina atto" onclick="ConfirmActionDASI('@item.UIDAtto', '@Html.Raw(title)', @Html.Raw((int)ActionEnum.ELIMINA))">
                            <i class="material-icons">close</i>
                        </a>
                    }
                    if (item.Ritirabile)
                    {
                        <a class="red-text tooltipped" data-tooltip="Ritira atto" onclick="ConfirmActionDASI('@item.UIDAtto', '@Html.Raw(title)', @Html.Raw((int)ActionEnum.RITIRA))">
                            <i class="material-icons">close</i>
                        </a>
                    }
                }
                else
                {
                    if (item.Firmabile)
                    {
                        <a class="green-text tooltipped" data-tooltip="Firma" onclick="RevealFirmaDepositoDASI('@item.UIDAtto', @Html.Raw((int)ActionEnum.FIRMA))">
                            <i class="icon material-icons">gavel</i>
                        </a>
                    }
                }
                <a class="black-text tooltipped" data-tooltip="Entra" onclick="go('@Url.Action("ViewAtto", "DASI", new {id = item.UIDAtto})')">
                    <i class="icon material-icons">chevron_right</i>
                </a>
            </div>
        </div>
        <div class="collapsible-body" style="display: block;">
            <div class="row">
                <div class="col s6">
                    @if (item.Tipo != (int)TipoAttoEnum.MOZ && item.Tipo != (int)TipoAttoEnum.ODG)
                    {
                        <label>Tipo Risposta:</label>
                        <span class="@PortaleRegione.Client.Helpers.Utility.GetText_TipoRispostaCommissioneCSSTooltipDASI(item)" data-tooltip="@PortaleRegione.Client.Helpers.Utility.GetText_TipoRispostaCommissioneTooltipDASI(item)">
                            @Utility.GetText_TipoRispostaDASI(item.IDTipo_Risposta)
                        </span>
                    }
                </div>
                <div class="col s12">
                    <label>Oggetto:</label>
                    <span style="font-weight:normal!important">
                        @if (string.IsNullOrEmpty(item.Oggetto_Modificato))
                        {
                            @Html.Raw(item.Oggetto)
                        }
                        else
                        {
                            @Html.Raw(item.Oggetto_Modificato)
                        }
                    </span>
                </div>
                <div class="col s12 right-align">
                    @if (Model.ClientMode == ClientModeEnum.GRUPPI)
                    {
                        if (!string.IsNullOrEmpty(item.DataRichiestaIscrizioneSeduta) && !item.DataIscrizioneSeduta.HasValue)
                        {
                            var textSeduta = $"Seduta del {item.DataRichiestaIscrizioneSeduta}";
                            var tooltipSeduta = "Richiesta in attesa di elaborazione";

                            <span class="tooltipped" data-tooltip="@tooltipSeduta">
                                <i>@textSeduta</i>
                                @if (item.Tipo != (int)TipoAttoEnum.ODG)
                                {
                                    <i class="material-icons tiny red-text tooltipped" data-tooltip="Rimuovi richiesta" onclick="RimuoviRichiestaIscrizioneDASI('@item.UIDAtto', '@Html.Raw(title)')">close</i>
                                }
                            </span>
                        }
                        else if (item.DataIscrizioneSeduta.HasValue)
                        {
                            var textSeduta = $"Seduta del {item.Seduta.Data_seduta:dd/MM/yyyy}";
                            var tooltipSeduta = $"Iscritto dal {item.DataIscrizioneSeduta.Value:dd/MM/yyyy HH:mm:ss}";
                            <span class="tooltipped" data-tooltip="@tooltipSeduta">
                                <b>@textSeduta</b>
                            </span>
                        }
                        else if (item.IDStato != (int)StatiAttoEnum.BOZZA)
                        {
                        }
                    }
                </div>
                <div class="col s12 right-align">
                    @{
                        var codice_gruppo = item.gruppi_politici.codice_gruppo;

                        var proponente = $"{item.PersonaProponente.DisplayName} ({codice_gruppo})";
                    }
                    @if (!item.Firmato_Dal_Proponente)
                    {
                        <span class="grey-text tooltipped" data-tooltip="Il Proponente non ha ancora firmato">
                            @Html.Raw(proponente)
                        </span>
                    }
                    else
                    {
                        <b>
                            @Html.Raw(proponente)
                        </b>
                    }

                    @if (item.ConteggioFirme > 1)
                    {
                        <br />
                        <a class='chip tooltipped blue white-text' data-position='left' data-tooltip='@item.Firme' style="min-width: unset">
                            + @Html.Raw(item.ConteggioFirme - 1) <i class='icon material-icons right' style="margin-left: unset">group</i>
                        </a>
                    }
                </div>
            </div>

        </div>
        </li>
    }
    </ul>
}

<script>
    var instanceGridView;
    $(window).on('load',
        function() {
            var elem = document.querySelector('#gridView');
            instanceGridView = M.Collapsible.init(elem,
                {
                    accordion: false
                });
            instanceGridView.open(); 
            instanceGridView.destroy(); 
        });

    $('#expandAll').on("change", function() {
        if ($('#expandAll').is(":checked")) {
            instanceGridView.open();
        } else {
            instanceGridView.close();
        }
    });
</script>