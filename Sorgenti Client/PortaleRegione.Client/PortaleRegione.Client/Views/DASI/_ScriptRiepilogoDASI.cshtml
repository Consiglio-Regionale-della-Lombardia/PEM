@using Newtonsoft.Json
@using PortaleRegione.Client.Helpers
@using PortaleRegione.DTO.Domain
@model PortaleRegione.DTO.Model.RiepilogoDASIModel
<script>
    $('#btnSearch').on("click",
        async function() {
            openDasiSearch();
        });

    var sedute = [];
    var seduteMOZU = [];
    var templateSeduteAttive = "<li class='collection-item'><div><p><label><input name='gruppoSeduteAttive' type='radio' value='{VALUE}' {CHECKED}/><span>{TEXT}</span></label></p></div></li>";

    $(window).on('load',
        async function() {
            if (sedute.length == 0) {
                var data = await GetSeduteAttive();
                sedute = data.Results;
            }
            if (seduteMOZU.length == 0) {
                var data = await GetSeduteAttiveMOZU();
                seduteMOZU = data.Results;
            }
        });

    $(document).ready(async function() {
        setSelezionaTutti_DASI(false);
		var filters = @Html.Raw(Convert.ToInt16(Model.Data.Filters.Any()));
		if (filters == 0) {
			set_Filtri_DASI({});
		} else {
			var filtri = @Html.Raw(JsonConvert.SerializeObject(Model.Data.Filters));
			console.log("filtri", filtri);
			var filtri_cache = get_Filtri_DASI();
			var block_stato_each = false;
			var block_tipo_each = false;

			$.each(filtri,
				function(i, item) {

					if (block_stato_each == false) {
						if (item.PropertyId == '@Html.Raw(nameof(AttoDASIDto.IDStato))') {
							filtri_cache.stato = item.Value;
							set_Filtri_DASI(filtri_cache);
							block_stato_each = true;
						}
					}

					if (block_tipo_each == false) {
						if (item.PropertyId == '@Html.Raw(nameof(AttoDASIDto.Tipo))') {
							filtri_cache.tipo = item.Value;
							set_Filtri_DASI(filtri_cache);
							block_tipo_each = true;
						}
					}
				});
		}

		Filtri_DASI_CaricaNAtto("qNAtto");
		Filtri_DASI_CaricaNAtto2("qNAtto2");
		Filtri_DASI_CaricaDataPresentazioneDA("qDataPresentazioneDA");
		Filtri_DASI_CaricaDataPresentazioneA("qDataPresentazioneA");
		Filtri_DASI_CaricaDataSeduta("qDataSeduta");
		Filtri_DASI_CaricaDataIscrizioneSeduta("qDataIscrizioneSeduta");
		Filtri_DASI_CaricaOggetto("qOggetto");
		Filtri_DASI_CaricaTipoRisposta("qTipoRisposta");
		Filtri_DASI_CaricaSoloMozioniUrgenti("qTipo_Mozione_Urgente");
		await Filtri_DASI_CaricaStato("qStato");
		await Filtri_DASI_CaricaTipo("qTipo");
		await Filtri_DASI_CaricaLegislature("qLegislatura");
		await SetupFiltriProponentiDASI();

		checkSelectedDASI();
    });

    function DeclassaMozione(uidAtto) {
        var nome_atto = $('#atto_' + uidAtto).data("nome-atto");
        swal("Verranno rimosse dall'atto " + nome_atto + " urgenza/abbinamento. Sei sicuro?",
            {
                buttons: {
                    cancel: "Annulla",
                    confirm: {
                        className: "red white-text",
                        title: "Rimuovi urgenza/abbinamento",
                        value: true
                    }
                }
            }).then((value) => {
            if (value == true) {
                var url = '@Url.Action("DeclassaMozione", "DASI")';
                var mozs = [];
                mozs.push(uidAtto);
                $.ajax({
                    url: url,
                    type: "POST",
                    data: JSON.stringify(mozs),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json"
                }).done(function(result) {

                    location.reload();

                }).fail(function(err) {
                    console.log("error", err);
                    Error(err);
                });
            }
        });
    }

	$('#btnExportXLS').on("click", async function () {
		waiting(true);

		var url = $('#btnExportXLS').data("href");
		var request = {};
		var chipsData = [];
		document.querySelectorAll('#chips-container .chip').forEach(function (chip) {
			if (chip.getAttribute('data-val').indexOf("Non vuoto") !== -1) {
				chipsData.push({
					property: chip.getAttribute('data-filterby'),
					value: '',
					not_empty: true
				});
			}
			else {
				chipsData.push({
					property: chip.getAttribute('data-filterby'),
					value: chip.getAttribute('data-val')
				});
			}
		});

		try {
			request.filters = chipsData;
			request.page = 1;
			request.size = 999999;

			const savedSortColumns = JSON.parse(localStorage.getItem('selectedSortColumns')) || [];
            // Aggiungi le impostazioni di ordinamento alla richiesta
            request.sort_settings = savedSortColumns;

			// Invia la richiesta al server
			const response = await fetch(url, {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
				},
				body: JSON.stringify(request),
			});

			if (!response.ok) {
				throw new Error('Network response was not ok');
			}

			responseData = await response.json();
			if (responseData.message){
				waiting(false);
				ErrorAlert(responseData.message);
				return;
			}
			waiting(false);
			var a = document.createElement("a");
			a.href = responseData;
			document.body.appendChild(a);
			a.click();

		} catch (error) {
			waiting(false);
			console.error('Errore: ', error);
			ErrorAlert('Errore: ' + error.message);
		}
	});

	$('#btnExportZip').on("click", async function () {
		waiting(true);
		var url = $('#btnExportZip').data("href");
		var request = {};
		var chipsData = [];
		document.querySelectorAll('#chips-container .chip').forEach(function (chip) {
			if (chip.getAttribute('data-val').indexOf("Non vuoto") !== -1) {
				chipsData.push({
					property: chip.getAttribute('data-filterby'),
					value: '',
					not_empty: true
				});
			}
			else {
				chipsData.push({
					property: chip.getAttribute('data-filterby'),
					value: chip.getAttribute('data-val')
				});
			}
		});

		try {
			request.filters = chipsData;
			request.page = 1;
			request.size = 999999;

			// Invia la richiesta al server
			const response = await fetch(url, {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
				},
				body: JSON.stringify(request),
			});

			if (!response.ok) {
				throw new Error('Network response was not ok');
			}

			responseData = await response.json();
			if (responseData.message) {
				waiting(false);
				ErrorAlert(responseData.message);
				return;
			}
			waiting(false);
			var a = document.createElement("a");
			a.href = responseData;
			document.body.appendChild(a);
			a.click();

		} catch (error) {
			waiting(false);
			console.error('Errore: ', error);
			ErrorAlert('Errore: ' + error.message);
		}
	});

    window.addEventListener("message", (event) => {
	    // Controlla l'origine del messaggio per motivi di sicurezza
	    if (event.origin !== "@AppSettingsConfiguration.URL_CLIENT") { // sostituisci con il tuo dominio
		    return;
	    }

	    if (event.data === "aggiornaPadre") {
		    location.reload(); // Ricarica la pagina padre
	    }
    }, false);
</script>