@using System.Linq;
@using PortaleRegione.Client.Helpers
@using PortaleRegione.DTO.Domain
@using PortaleRegione.DTO.Enum
@model PortaleRegione.DTO.Model.RiepilogoDASIModel

@{
    var _disabled = Model.ClientMode == ClientModeEnum.TRATTAZIONE;
}
<div id="slide-dasi-DX" class="sidenav" style="overflow: auto !important">
    <ul class="collapsible">
        <li class="active">
            <div class="collapsible-header teal white-text"><i class="material-icons">search</i>Ricerca</div>
            <div class="collapsible-body">
                @using (Html.BeginForm("Filtri_Riepilogo", "DASI", FormMethod.Post, new { id = "formFiltraDASI" }))
                {
                    @Html.AntiForgeryToken()
                    var sedutaFilter = Model.Data.Filters.FirstOrDefault(item => item.PropertyId == nameof(AttoDASIDto.UIDSeduta));
                    var uidSeduta = sedutaFilter != null ? sedutaFilter.Value : Guid.Empty;
                    var tipoFilter = Model.Data.Filters.FirstOrDefault(item => item.PropertyId == nameof(AttoDASIDto.Tipo));
                    var tipo = tipoFilter != null ? Convert.ToInt16(tipoFilter.Value) : (int)Model.Tipo;
                        <input id="inputFilterReset" type="hidden" name="reset" value="0" />
                    <input id="inputFilterSeduta" type="hidden" name="UIDSeduta" value="@uidSeduta" />
                    <input id="inputFilterSeduta" type="hidden" name="Tipo" value="@tipo" />
                    <input id="inputFilterView" type="hidden" name="view" value="@((int)Model.ViewMode)" />
                    <input id="inputFilterPage" type="hidden" name="page" value="@Model.Data.Paging.Page" />
                    <input id="inputFilterSize" type="hidden" name="size" value="@Model.Data.Paging.Limit" />
                    <input type="hidden" id="hdMode" name="mode" value="@((int)Model.ClientMode)" />

                    <div class="row">
                        @if (!_disabled)
                        {
                            <div class="input-field col s12">
                                <select id="qTipo" name="filtro_tipo" onchange="filter_dasi_tipo_OnChange()">
                                </select>
                                <label>Tipo</label>
                            </div>
                        }
                        <div class="input-field col s12">
                            <select id="qStato" name="filtro_stato" onchange="filter_dasi_stato_OnChange()">
                            </select>
                            <label>Stato</label>
                        </div>
                        <div class="input-field col s12">
                            <select id="qTipoRisposta" name="filtro_tipo_risposta" onchange="filter_dasi_tipo_risposta_OnChange()">
                                <option value="" selected="selected">--</option>
                                <option value="@((int) TipoRispostaEnum.ORALE)">Orale</option>
                                <option value="@((int) TipoRispostaEnum.SCRITTO)">Scritto</option>
                                <option value="@((int) TipoRispostaEnum.COMMISSIONE)">In Commissione</option>
                            </select>
                            <label>Tipo Risposta</label>
                        </div>
                        <div class="input-field col s12">
                            <input placeholder="Lorem ipsum" id="qNAtto" name="filtro_natto" type="text" onchange="filter_dasi_natto_OnChange()">
                            <label for="qNAtto">Numero</label>
                        </div>
                        <div class="input-field col s12">
                            <input placeholder="Lorem ipsum" id="qOggetto" name="filtro_oggetto" type="text" onchange="filter_dasi_oggetto_OnChange()">
                            <label for="qOggetto">Oggetto</label>
                        </div>
                        <div class="input-field col s12">
                            <select id="qLegislatura" name="filtro_legislatura" class="form-control" onchange="filter_dasi_legislatura_OnChange()" @Html.Raw(_disabled ? "disabled=\"disabled\"" : "")></select>
                            <label>Legislatura</label>
                        </div>
                        <div class="input-field col s12 center" style="padding-top: 30px">
                            <a class="btn chip hoverable blue center white-text" style="min-width: unset !important" onclick="filtra(1)">
                                <i class="icon material-icons">search</i> Filtra
                            </a>
                            <a class="btn chip hoverable grey center white-text" style="min-width: unset !important" onclick="reset()">
                                <i class="icon material-icons">close</i> Reset
                            </a>
                        </div>
                    </div>
                }

            </div>
        </li>
        @if (HttpContext.Current.User.IsInRole(RuoliExt.Amministratore_PEM)
            || HttpContext.Current.User.IsInRole(RuoliExt.Segreteria_Assemblea))
        {
            <li>
                <div class="collapsible-header white black-text"><i class="material-icons">settings</i>Strumenti</div>
                <div class="collapsible-body">
                    <div class="row">
                        <div class="col s12">
                            <div class="collection">
                                <a id="btnExportXLS" class="collection-item" data-href="@Url.Action("EsportaXLS", "DASI")">
                                    <i class="icon material-icons left">grid_on</i>
                                    Esporta Excel
                                </a>
                                @*<a href="#!" class="collection-item">
                                        <i class="icon material-icons left">download</i>
                                        Esporta Word
                                    </a>*@
                            </div>
                        </div>
                    </div>
                </div>
            </li>
        }
    </ul>
</div>

<script>
    $(window).on('load', function () {
        /*$('#btnSearch>i').html('more_vert');*/

        $('#btnExportXLS').on("click", function () {
            var url = $('#btnExportXLS').data("href");
            $.ajax({
                url: url,
                type: "GET",
                beforeSend: function () {
                    console.log("RICHIESTA INVIATA");
                    waiting(true, "Elaborazione in corso..");
                },
                success: function (response) {
                    var blob = new Blob([s2ab(atob(response))], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
                    var link = URL.createObjectURL(blob);
                    var a = document.createElement("a");
                    a.href = link;
                    a.download = "Esportazione_DASI.xlsx";
                    document.body.appendChild(a);
                    a.click();
                },
                complete: function () {
                    console.log("OK");
                    waiting(false);
                },
                cache: false,
                contentType: false,
                processData: false
            });
        });
    });

    async function reset() {
        set_Filtri_DASI({});
        $('#inputFilterPage').val(1);
        $('#inputFilterReset').val(1);

        Filtri_DASI_CaricaNAtto("qNAtto");
        Filtri_DASI_CaricaOggetto("qOggetto");
        Filtri_DASI_CaricaTipoRisposta("qTipoRisposta");
        await Filtri_DASI_CaricaStato("qStato");
        await Filtri_DASI_CaricaTipo("qTipo");
        await Filtri_DASI_CaricaLegislature("qLegislatura");

        $('#qSoggettoDestinatarioDasi option').each(function (index, opt) {
            if ($(opt).is(":checked")) {
                $(opt).attr("selected", false);
            }
        });

        setTimeout(function () {
            $('body').removeClass('loaded');
        },
            200);
        $('#formFiltraDASI').submit();
    }

    function filtra() {
        setTimeout(function () {
            $('body').removeClass('loaded');
        },
            200);
        $('#formFiltraDASI').submit();
    }

    function filtra(page) {
        $('#inputFilterPage').val(page);
        setTimeout(function () {
            $('body').removeClass('loaded');
        },
            200);
        $('#formFiltraDASI').submit();
    }

    function filtra_Paginazione(size) {
        $('#inputFilterPage').val(1);
        $('#inputFilterSize').val(size);
        setTimeout(function () {
            $('body').removeClass('loaded');
        },
            200);
        $('#formFiltraDASI').submit();
    }

    function filtra_View(view) {
        $('#inputFilterView').val(view);
        setTimeout(function () {
            $('body').removeClass('loaded');
        },
            200);
        $('#formFiltraDASI').submit();
    }

    function openDasiSearch() {
        var elems = document.querySelector("#slide-dasi-DX");
        var instances = M.Sidenav.init(elems,
            {
                edge: "right",
                draggable: true,
                onOpenStart: function () {
                    // Menu laterale SX sotto a layer opaco
                    $("#slide-out").css("z-index", 997);
                },
                onCloseEnd: function () {
                    // Ripristino menu laterale SX
                    $("#slide-out").css("z-index", 999);
                }
            });

        instances.open();
    }
</script>