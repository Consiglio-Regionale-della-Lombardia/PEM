@using PortaleRegione.Client.Helpers
@using PortaleRegione.DTO.Domain
@using PortaleRegione.DTO.Enum
@using Utility = PortaleRegione.Common.Utility
@model PortaleRegione.DTO.Model.RiepilogoDASIModel

@{
    ViewBag.Title = "DASI";
    var classTabBozza = "";
    var classTabPresentati = "";
    var classTabTrattazione = "";
    var classTabChiusi = "";
    switch (Model.Stato)
    {
        case StatiAttoEnum.BOZZA:
            classTabBozza = "active";
            break;
        case StatiAttoEnum.PRESENTATO:
            classTabPresentati = "active";
            break;
        case StatiAttoEnum.IN_TRATTAZIONE:
            classTabTrattazione = "active";
            break;
        case StatiAttoEnum.CHIUSO:
            classTabChiusi = "active";
            break;
    }
    var url = Url.Action("Index", "Home");
    var data_seduta = "";
    if (Model.ClientMode == ClientModeEnum.TRATTAZIONE && Model.Data.Paging.Entities > 0)
    {
        var uidSeduta = Model.Data.Filters.First(item => item.PropertyId == nameof(AttoDASIDto.UIDSeduta)).Value;
        url = Url.Action("Index", "AttiTrattazione", new { id = uidSeduta });

        data_seduta = Model.Data.Results.First().Seduta.Data_seduta.ToString("dd/MM/yyyy");
    }

    var filtri_attivi = Request.Url.AbsolutePath.Contains("filtra");
    var textTitoloRicerca = filtri_attivi ? " - Ricerca" : string.Empty;

}

<div class="row" style="margin-bottom: unset !important">
    <div class="col s12">
        <a class="btn-floating waves-effect waves-light grey header-back" href="@url">
            <i class="material-icons">arrow_back</i>
        </a>
        <div class="row valign-wrapper">
            <div class="col s12">
                @if (Model.ClientMode == ClientModeEnum.GRUPPI)
                {
                    <h4>
                        <b>Riepilogo Atti Sindacato Ispettivo @textTitoloRicerca</b>
                    </h4>
                }
                else
                {
                    var tipo = Convert.ToInt16(Model.Tipo);
                    <h4>
                        <b>@Utility.GetText_Tipo(tipo) iscritte alla seduta del @data_seduta @textTitoloRicerca</b>
                    </h4>
                }
            </div>
        </div>
    </div>
</div>


@if (Model.ClientMode == ClientModeEnum.GRUPPI)
{
    <div class="row center">
        @{
            Html.RenderPartial("_CounterBar_RiepilogoDASI", Model);
        }
    </div>
}

<div id="contentTable" class="row">
    @if (Model.ClientMode == ClientModeEnum.GRUPPI)
    {
        if (string.IsNullOrEmpty(classTabPresentati)
            && string.IsNullOrEmpty(classTabBozza)
            && string.IsNullOrEmpty(classTabTrattazione)
            && string.IsNullOrEmpty(classTabChiusi))
        {
        }
        else
        {
            <div class="col s12">
                <ul class="tabs">
                    <li class="tab col l3 s12">
                        <a class="@classTabBozza" onclick="resetGridSelection();$('#qStato').val(@((int)StatiAttoEnum.BOZZA));$('#qStato').formSelect();filter_dasi_stato_OnChange();filtra();">
                            Bozza (@Model.CountBarData.BOZZE)
                        </a>
                    </li>
                    <li class="tab col l3 s12">
                        <a class="@classTabPresentati" onclick="resetGridSelection();$('#qStato').val(@((int)StatiAttoEnum.PRESENTATO));$('#qStato').formSelect();filter_dasi_stato_OnChange();filtra();">
                            Depositati (@Model.CountBarData.PRESENTATI)
                        </a>
                    </li>
                    <li class="tab col l3 s12">
                        <a class="@classTabTrattazione" onclick="resetGridSelection();$('#qStato').val(@((int)StatiAttoEnum.IN_TRATTAZIONE));$('#qStato').formSelect();filter_dasi_stato_OnChange();filtra();">
                            In Trattazione (@Model.CountBarData.IN_TRATTAZIONE)
                        </a>
                    </li>
                    <li class="tab col l3 s12">
                        <a class="@classTabChiusi" onclick="resetGridSelection();$('#qStato').val(@((int)StatiAttoEnum.CHIUSO));$('#qStato').formSelect();filter_dasi_stato_OnChange();filtra();">
                            Chiusi (@Model.CountBarData.CHIUSO)
                        </a>
                    </li>
                </ul>
            </div>
        }
    }

    <div class="col s12">
        @{
            if (Model.ViewMode == ViewModeEnum.GRID)
            {
                Html.RenderPartial("_GridView_RiepilogoDASI", Model);
            }
            else
            {
                Html.RenderPartial("_ZoomView_RiepilogoDASI", Model);
            }
        }
    </div>

</div>

@{
    Html.RenderPartial("_ProponiMozioneUrgenteModal");
    Html.RenderPartial("_ProponiMozioneAbbinataModal");
    Html.RenderPartial("_RichiestaIscrizioneASedutaModal", true);
    Html.RenderPartial("_PannelloRicerche");
    Html.RenderPartial("_ComandiDASI");
    Html.RenderPartial("_GeasiViewPartial");
    Html.RenderPartial("_ScriptRiepilogoDASI");

    Html.RenderPartial("_StampaModal");
}


<script>
	window.addEventListener("message", (event) => {
		// Controlla l'origine del messaggio per motivi di sicurezza
		if (event.origin !== "@AppSettingsConfiguration.URL_CLIENT") { // sostituisci con il tuo dominio
			return;
		}

		if (event.data === "aggiornaPadre") {
			location.reload(); // Ricarica la pagina padre
		}
	}, false);

    function RevealFirmaDepositoDASI(id, action) {

	var text = "";
	var button = "";
	if (action == 3) {
		text = "Inserisci il PIN per firmare";
		button = "Firma";
	} else if (action == 4) {
		text = "Inserisci il PIN per presentare";
		button = "Presenta";
	}

	swal(text,
		{
			content: {
				element: "input",
				attributes: { placeholder: "******", className: "password" }
			},
			icon: "info",
			buttons: { cancel: "Annulla", confirm: button }
		})
		.then((value) => {
			if (value == null || value == "")
				return;

			$.ajax({
				url: baseUrl + "/dasi/azioni?id=" + id + "&azione=" + action + "&pin=" + value,
				method: "GET"
			}).done(function (data) {
				console.log('esito', data.message)
				if (data.message) {
					var typeMessage = "error";
					var message = data.message;
					var str = data.message;
					var pos = str.indexOf("OK");
					if (pos > 0) {
						typeMessage = "success";
					}
					pos = str.indexOf("?!?");
					if (pos > 0) {
						typeMessage = "info";
						message = "Proposta di firma inviata al proponente";
					}

					swal({
						title: "Esito " + button,
						text: message,
						icon: typeMessage,
						button: "OK"
					}).then(() => {
						if (data.message.includes("OK") || data.message.includes("?!?")) {
							location.reload();
						}
					});
				}
			}).fail(function (err) {
				console.log("error", err);
				Error(err);
			});
		});
}

function ConfirmActionDASI(id, name, action) {

	$("#attoActionDisplayName").empty();
	$("#attoActionDisplayName").append(name);
	$("#attoActionMessage").empty();

	if (action == 1) {
		$("#btnConfermaActionDASI").text("ELIMINA");
		$("#attoActionMessage").append("Stai per eliminare l'atto selezionato. Sei sicuro?");
	} else if (action == 2) {
		$("#btnConfermaActionDASI").text("RITIRA");
		$("#attoActionMessage").append("Stai per ritirare l'atto selezionato. Sei sicuro?");
	}
	$("#btnConfermaActionDASI").on("click",
		function () {
			$.ajax({
				url: baseUrl + "/dasi/azioni?id=" + id + "&azione=" + action,
				method: "GET"
			}).done(function (data) {

				$("#modalActionDASI").modal("close");
				$("#btnConfermaActionDASI").off("click");

				if (data.message) {
					swal({
						title: "Errore",
						text: data.message,
						icon: "error"
					});
				} else {
					location.reload();
				}
			}).fail(function (err) {
				console.log("error", err);
				Error(err);
			});
		});
	$("#modalActionDASI").modal("open");
}
</script>

<div id="modalActionDASI" class="modal" style="height: unset !important">
    <div class="modal-content">
        <h5 id="attoActionDisplayName"></h5>
        <p id="attoActionMessage"></p>
        <div class="modal-footer" style="position: unset !important;">
            <button type="button" class="btn modal-close grey">Annulla</button>
            <a id="btnConfermaActionDASI" class="btn red" href="#">Elimina</a>
        </div>
    </div>
</div>