@using PortaleRegione.Common
@using PortaleRegione.DTO.Enum
@model PortaleRegione.DTO.Model.RiepilogoDASIModel

@{
    Html.RenderPartial("_PaginationBar", Model.Data.Paging);
    Html.RenderPartial("_Command_RiepilogoDASI", Model);
}

@if (!Model.Data.Results.Any())
{
    <div class="row">
        <div class="col s12">
            <div class="card-panel panel-warning center">
                <span class="center">
                    @{
                        var require_my_sign = Convert.ToBoolean(HttpUtility.ParseQueryString(Request.Url.Query).Get("require_my_sign"));
                        if (require_my_sign)
                        {
                            <p>Non ci sono atti dove è richiesta la tua firma</p>
                        }
                        else
                        {
                            <p>Non ci sono atti al momento</p>
                        }
                    }
                </span>
            </div>
        </div>
    </div>
}
else
{
    <table class="responsive-table highlight">
        <thead>
        <tr>
            <th class="center">
            </th>
            <th>Atto</th>
            <th>Tipo</th>
            <th>Oggetto</th>
            @*<th>Soggetto</th>*@
            <th>Firmatari</th>
            <th>Stato</th>
            @if (Model.ClientMode == ClientModeEnum.GRUPPI)
            {
                <th>Seduta</th>
            }
            <th></th>
        </tr>
        </thead>

        <tbody>
        @foreach (var item in Model.Data.Results)
        {
            <tr>
                <td style="width: 1%;">

                    <p>
                        <label>
                            <input type="checkbox" id="chk_Atto_@item.UIDAtto" onclick="AbilitaComandiMassivi_DASI('@item.UIDAtto');"/>
                            <span></span>
                        </label>
                    </p>
                </td>
                <td style="width: 7%;">
                    @{
                        var title = $"{Utility.GetText_Tipo(item)} ";
                        title += item.NAtto;
                    }

                    <div id="atto_@item.UIDAtto" class="chip hoverable @Html.Raw(PortaleRegione.Client.Helpers.Utility.GetCSS_TipoDASI(item.Tipo))" data-nome-atto="@title" onclick="go('@Url.Action("ViewAtto", "DASI", new {id = item.UIDAtto})')">
                        @Html.Raw(title)
                        @if (item.PresentatoOltreITermini)
                        {
                            <i class="close material-icons red-text tooltipped" data-position="bottom" data-tooltip="Presentato oltre i termini">warning</i>
                        }
                        @if (item.TipoMOZ == (int)TipoMOZEnum.URGENTE)
                        {
                            <i class="close material-icons red-text tooltipped" data-position="bottom" data-tooltip="Proposta di urgenza">priority_high</i>
                        }
                        @if (item.TipoMOZ == (int)TipoMOZEnum.CENSURA)
                        {
                            <i class="close material-icons purple-text tooltipped" data-position="bottom" data-tooltip="Proposta di censura">speaker_notes_off</i>
                        }
                        @if (item.TipoMOZ == (int)TipoMOZEnum.SFIDUCIA)
                        {
                            <i class="close material-icons red-text tooltipped" data-position="bottom" data-tooltip="Proposta di sfiducia">thumb_down</i>
                        }
                        @if (item.TipoMOZ == (int)TipoMOZEnum.ABBINATA)
                        {
                            <i class="close material-icons orange-text tooltipped" data-position="bottom" data-tooltip="Proposta di abbinata">insert_link</i>
                        }
                        @if (item.Non_Passaggio_In_Esame)
                        {
                            <i class="close material-icons red-text tooltipped" data-position="bottom" data-tooltip="Ordine del giorno di NON passaggio in esame">new_releases</i>
                        }
                    </div>
                    @if (item.Inviato_Al_Protocollo)
                    {
                        <i class="material-icons green-text tooltipped" data-tooltip="Inviato il @item.DataInvioAlProtocollo.Value.ToString("dd/MM/yyyy HH:mm")" style="position: absolute; margin-top: 3px;">sync</i>
                    }
                    else if(Model.ClientMode == ClientModeEnum.GRUPPI)
                    {
                        <i class="material-icons orange-text tooltipped" data-tooltip="Invia al protocollo" style="position: absolute; margin-top: 3px;" onclick="InviaAlProtocollo('@item.UIDAtto')">sync_problem</i>
                    }
                </td>
                @if (item.Tipo != (int) TipoAttoEnum.MOZ)
                {
                    <td style="width: 8%;">
                        @if (item.Tipo == (int)TipoAttoEnum.ODG)
                        {
                            <label class="black-text">@item.ODG_Atto_PEM</label>
                        }
                        else
                        {
                            <span class="@PortaleRegione.Client.Helpers.Utility.GetText_TipoRispostaCommissioneCSSTooltipDASI(item)" data-tooltip="@PortaleRegione.Client.Helpers.Utility.GetText_TipoRispostaCommissioneTooltipDASI(item)">
                                @Utility.GetText_TipoRispostaDASI(item.IDTipo_Risposta)
                            </span>
                        }
                    </td>
                }
                else if (item.TipoMOZ == (int) TipoMOZEnum.CENSURA || item.TipoMOZ == (int) TipoMOZEnum.SFIDUCIA)
                {
                    <td style="width: 8%;">
                        <span>
                            @Utility.GetText_TipoMOZDASI(item.TipoMOZ)
                        </span>
                    </td>
                }
                else
                {
                    <td style="width: 8%;">
                        <span>
                            @if (item.Tipo == (int)TipoAttoEnum.MOZ && item.TipoMOZ == (int)TipoMOZEnum.ABBINATA)
                            {
                                <a class="blue-text" style="text-decoration: underline;" onclick="go('@Url.Action("ViewAtto", "DASI", new {id = item.UID_MOZ_Abbinata})')">@item.MOZ_Abbinata</a>
                            }
                        </span>
                    </td>
                }
                <td style="width: 18%;">
                    @if (string.IsNullOrEmpty(item.Oggetto_Modificato))
                    {
                        @Html.Raw(item.Oggetto)
                    }
                    else
                    {
                        @Html.Raw(item.Oggetto_Modificato)
                    }
                </td>
                <td style="width: 10%;">
                    @{
                        var codice_gruppo = item.gruppi_politici.codice_gruppo;

                        var proponente = $"{item.PersonaProponente.DisplayName} ({codice_gruppo})";
                    }
                    @if (!item.Firmato_Dal_Proponente)
                    {
                        <span class="grey-text tooltipped" data-tooltip="Il Proponente non ha ancora firmato">
                            @Html.Raw(proponente)
                        </span>
                    }
                    else
                    {
                        <b>
                            @Html.Raw(proponente)
                        </b>
                    }

                    @if (item.ConteggioFirme > 1)
                    {
                        <br/>
                        <a class='chip tooltipped blue white-text' data-position='left' data-tooltip='@item.Firme' style="min-width: unset">
                            + @Html.Raw(item.ConteggioFirme - 1) <i class='icon material-icons right' style="margin-left: unset">group</i>
                        </a>
                    }
                </td>
                <td style="width: 6%;">
                    @{
                        var tooltipStato = "Non ancora depositato";
                        if (item.IDStato >= (int)StatiAttoEnum.PRESENTATO)
                        {
                            tooltipStato = $"Depositato il {item.DataPresentazione}";
                            if (item.IDStato == (int)StatiAttoEnum.CHIUSO)
                            {
                                var motivazione = item.IDStato_Motivazione != 1 ? "Decaduto" : "Ritirato";
                                tooltipStato += $"<br>{motivazione} il {item.DataRitiro}";
                            }
                        }
                    }

                    <span id="lblStato_@item.UIDAtto" class="@Html.Raw(PortaleRegione.Client.Helpers.Utility.GetCSS_StatoDASI(item.IDStato)) tooltipped" data-tooltip="@tooltipStato" title="@tooltipStato">
                        @Html.Raw(Utility.GetText_StatoDASI(item.IDStato))
                    </span>
                    @if (item.IDStato != (int)StatiAttoEnum.CHIUSO)
                    {
                        <a class='dropdown-trigger' href='#' data-target='dropdown_@item.UIDAtto'>
                            <i class="icon material-icons">refresh</i>
                        </a>

                        <!-- Dropdown Structure -->
                        <ul id='dropdown_@item.UIDAtto' class='dropdown-content' style="max-width: 300px">
                            <li>
                                <a class="@Html.Raw(PortaleRegione.Client.Helpers.Utility.GetCSS_StatoDASI((int) StatiAttoEnum.PRESENTATO))" onclick="CambioStatoDASI('@Html.Raw(item.UIDAtto)', @((int) StatiAttoEnum.PRESENTATO))">
                                    <i class="material-icons">lock</i> @Html.Raw(Utility.GetText_StatoDASI((int) StatiAttoEnum.PRESENTATO))
                                </a>
                            </li>
                            <li>
                                <a class="@Html.Raw(PortaleRegione.Client.Helpers.Utility.GetCSS_StatoDASI((int) StatiAttoEnum.IN_TRATTAZIONE))" onclick="CambioStatoDASI('@Html.Raw(item.UIDAtto)', @((int) StatiAttoEnum.IN_TRATTAZIONE))">
                                    <i class="material-icons">settings_input_antenna</i> @Html.Raw(Utility.GetText_StatoDASI((int) StatiAttoEnum.IN_TRATTAZIONE))
                                </a>
                            </li>
                            <li>
                                <a class="@Html.Raw(PortaleRegione.Client.Helpers.Utility.GetCSS_StatoDASI((int) StatiAttoEnum.CHIUSO))" onclick="CambioStatoDASI('@Html.Raw(item.UIDAtto)', @((int) StatiAttoEnum.CHIUSO))">
                                    <i class="material-icons">storage</i> @Html.Raw(Utility.GetText_StatoDASI((int) StatiAttoEnum.CHIUSO))
                                </a>
                            </li>
                        </ul>
                    }
                </td>
                @if (Model.ClientMode == ClientModeEnum.GRUPPI)
                {
                    <td style="width: 9%;">
                        @{
                            var textSeduta = string.Empty;
                            var tooltipSeduta = string.Empty;

                            if (item.DataIscrizioneSeduta.HasValue)
                            {
                                textSeduta = $"Seduta del {item.Seduta.Data_seduta:dd/MM/yyyy}";
                                tooltipSeduta = $"Iscritto dal {item.DataIscrizioneSeduta.Value:dd/MM/yyyy HH:mm:ss}";
                                <span class="tooltipped" data-tooltip="@tooltipSeduta" onclick="RimuoviSedutaDASI('@item.UIDAtto', '@Html.Raw(title)')">
                                    <b>@textSeduta</b>
                                    <i class="material-icons tiny red-text tooltipped" data-tooltip="Rimuovi">close</i>
                                </span>
                            }
                            else if (!string.IsNullOrEmpty(item.DataRichiestaIscrizioneSeduta) && item.IDStato == (int) StatiAttoEnum.PRESENTATO)
                            {
                                textSeduta = $"Seduta del {item.DataRichiestaIscrizioneSeduta}";
                                tooltipSeduta = "Richiesta in attesa di elaborazione";

                                <span class="tooltipped" data-tooltip="@tooltipSeduta" onclick="IscriviSedutaDASI('@item.UIDAtto', '@Html.Raw(title)')">
                                    <i>@textSeduta</i>
                                    <i class="material-icons tiny green-text tooltipped" data-tooltip="Iscrivi">check</i>
                                </span>
                            }
                            else if (string.IsNullOrEmpty(item.DataRichiestaIscrizioneSeduta) && item.IDStato == (int) StatiAttoEnum.PRESENTATO)
                            {
                                <div class="chip hoverable badgeSedutaSenzaRichiesta" onclick="IscriviSedutaDASI('@item.UIDAtto', '@Html.Raw(title)')">
                                    Iscrivi
                                </div>
                            }
                        }

                    </td>
                }
                <td class="center" style="width: 5%;">

                    <a class="blue-text tooltipped" style="margin: 2px" data-tooltip="Vai alla banca dati in internet" onclick="goToGeasi('@Utility.GetText_Tipo(item.Tipo)', @item.NAtto, @item.Legislatura)">
                        <i class="icon material-icons">remove_red_eye</i>
                    </a>
                    <a class="black-text tooltipped" style="margin: 2px" data-tooltip="Stampa" href="@Url.Action("Download", "DASI", new { id = item.UIDAtto })" target="_blank">
                        <i class="material-icons">print</i>
                    </a>
                    <a class="blue-text tooltipped" data-tooltip="Modifica" onclick="openMetaDatiDASI('@item.UIDAtto')">
                        <i class="icon material-icons">edit</i>
                    </a>
                </td>
            </tr>
        }
        </tbody>
    </table>
}