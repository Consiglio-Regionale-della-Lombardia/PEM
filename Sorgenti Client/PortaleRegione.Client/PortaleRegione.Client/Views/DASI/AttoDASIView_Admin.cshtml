@using PortaleRegione.Common
@using PortaleRegione.DTO.Domain
@using PortaleRegione.DTO.Enum
@model PortaleRegione.DTO.Model.DASIFormModel

@{
    Layout = null;
    var atto = Model.Atto;
    ViewBag.Title = $"{Utility.GetText_Tipo(atto)} {atto.NAtto} - {atto.GetLegislatura()}";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewBag.Title</title>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">

    @Styles.Render("~/Content/css")
    @*Import Trumbowyg plugins style...*@
    <link href="~/Content/editor/plugins/table/ui/trumbowyg.table.min.css" rel="stylesheet"/>

    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    @Scripts.Render("~/bundles/lib")
    @Scripts.Render("~/bundles/logic")
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
    <script src="~/Scripts/moment.js"></script>
</head>
<body>
<script>
		$(document).ready(function () {
			$('#btnSearch').hide();
		});
	</script>

<style>
	.collection-header-custom {
        background-color: #f5f5f5!important;
        font-weight: bold;
	}
</style>
<div class="row" style="left: 10px; margin-bottom: unset !important; position: absolute; top: 12px;">
    <div class="col s12">
        <a class="btn-floating waves-effect waves-light grey header-back" onclick="window.close()">
            <i class="material-icons">close</i>
        </a>

    </div>
</div>
<div class="row" style="margin-bottom: unset !important; position: absolute; right: 10px; top: 25px;">
    <div class="col s12">
        <div class="chip @PortaleRegione.Client.Helpers.Utility.GetCSS_StatoDASI(atto.IDStato) white-text" style="min-width: unset;">@Utility.GetText_StatoDASI(atto.IDStato)</div>
    </div>
</div>
<div class="row valign-wrapper">
    <div class="col s12 center">
        <h4>
            <b>@atto.gruppi_politici.nome_gruppo</b>
        </h4>
    </div>
</div>
<div class="row">
<div class="col s12">
<ul class="collapsible expandable">
<li class="active">
    <div class="collapsible-header collection-header-custom"><i class="material-icons">cloud_queue</i>Testo atto - @Html.Raw($"{atto.Display} ({atto.GetLegislatura()})")</div>
    <div class="collapsible-body">
        <div class="row">
            <div class="col s12 center bodyEMClass">
                @Html.Raw(atto.BodyAtto)
            </div>
        </div>
        <div class="row" id="pnlStandardFirme">
            <div class="col s12">
                @if (atto.Tipo == (int)TipoAttoEnum.IQT
                     || atto.Tipo == (int)TipoAttoEnum.MOZ)
                {
                    if ((atto.FirmeAnte.Any()
                         && Model.Atto.UIDPersonaProponente == Model.CurrentUser.UID_persona)
                        || (Model.CurrentUser.IsResponsabileSegreteriaPolitica && Model.CurrentUser.Gruppo.id_gruppo == atto.id_gruppo
                            && Model.Atto.IDStato < (int)StatiAttoEnum.PRESENTATO)
                        || Model.CurrentUser.IsSegreteriaAssemblea)
                    {
                        <a class="btn-flat pink-text" onclick="$('#pnlStandardFirme').hide();$('#pnlPrioritaFirme').show();">
                            Visualizza priorita
                            <i class="material-icons right pink-text">low_priority</i>
                        </a>
                        <br/>
                    }
                }

                @Html.Raw(atto.Firme)

                @if (!string.IsNullOrEmpty(atto.DataPresentazione))
                {
                    var testoDeposito = "Atto presentato";

                    <label class="black-text">
                        <b>@testoDeposito il @Html.Raw(atto.DataPresentazione)</b>
                    </label>
                }

                @if (!string.IsNullOrEmpty(atto.Firme_dopo_deposito))
                {
                    @Html.Raw(atto.Firme_dopo_deposito)
                }
            </div>
        </div>
        @if (atto.Tipo == (int)TipoAttoEnum.IQT
             || atto.Tipo == (int)TipoAttoEnum.MOZ)
        {
            if (Model.Atto.UIDPersonaProponente == Model.CurrentUser.UID_persona
                || Model.CurrentUser.IsSegreteriaAssemblea
                || (Model.CurrentUser.IsResponsabileSegreteriaPolitica && Model.CurrentUser.Gruppo.id_gruppo == atto.id_gruppo))
            {
				@* FIRME PRIORITA' *@
                <div class="row" id="pnlPrioritaFirme" style="display: none;">
                    <div class="col s12">
                        <a class="btn-flat pink-text" onclick="$('#pnlPrioritaFirme').hide();$('#pnlStandardFirme').show();">
                            Visualizza griglia
                            <i class="material-icons right pink-text">grid_on</i>
                        </a>
                        <br/>

                        <ul class="collapsible expandable">
                            @{
                                var firmeGroup = new List<AttiFirmeDto>();
                                firmeGroup.AddRange(atto.FirmeAnte);
                                firmeGroup.AddRange(atto.FirmePost);
                            }
                            @foreach (var firme in firmeGroup)
                            {
                                <li>
                                    @if (firme.Prioritario)
                                    {
                                        <div class="collapsible-header valign-wrapper">
                                            @if (atto.UIDPersonaProponente != firme.UID_persona)
                                            {
                                                <a class="btn-floating white secondary-content tooltipped" data-tooltip="Aggiungi/rimuovi priorità firmatario"
                                                   onclick="CambiaPrioritaFirma(this, '@firme.UIDAtto', '@firme.UID_persona');">
                                                    <i class="material-icons black-text" style="margin-left: 5px;">star</i>
                                                </a>
                                            }
                                            @firme.FirmaCert

                                        </div>
                                    }
                                    else
                                    {
                                        <div class="collapsible-header valign-wrapper">
                                            @if (string.IsNullOrEmpty(firme.Data_ritirofirma))
                                            {
                                                <a class="btn-floating white secondary-content tooltipped" data-tooltip="Aggiungi/rimuovi priorità firmatario"
                                                   onclick="CambiaPrioritaFirma(this, '@firme.UIDAtto', '@firme.UID_persona');">
                                                    <i class="material-icons" style="margin-left: 5px;">star_border</i>
                                                </a>
                                                @firme.FirmaCert
                                            }
                                            else
                                            {
                                                <del>@firme.FirmaCert</del>
                                            }
                                        </div>
                                    }
                                </li>
                            }
                        </ul>

                    </div>
                </div>
            }
        }
    </div>
</li>
<li>
    <div class="collapsible-header collection-header-custom"><i class="material-icons">insert_drive_file</i>Informazioni generali</div>
    <div class="collapsible-body">
        <div class="row">
            <div class="input-field col s12 m12 l4">
                @Html.TextBox("txtTipoAtto", atto.DisplayTipo)
                @Html.LabelFor(s => s.Atto.Tipo)
            </div>
            <div class="input-field col s12 m12 l4">
                @Html.TextBoxFor(model => model.Atto.NAtto, new { @class = "form-control" })
                @Html.LabelFor(s => s.Atto.NAtto)
            </div>
            <div class="input-field col s12 m12 l4">
                @Html.TextBoxFor(model => model.Atto.Protocollo, new { @class = "form-control" })
                @Html.LabelFor(s => s.Atto.Protocollo)
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12 m12 l4">
                @Html.TextBox("txtStatoAtto", atto.DisplayStato, new { @class = "form-control" })
                @Html.LabelFor(s => s.Atto.IDStato)
            </div>
            <div class="input-field col s12 m12 l4">
                @Html.LabelFor(s => s.Atto.DataAnnunzio, new { @class = "active" })
                @Html.TextBoxFor(s => s.Atto.DataAnnunzio, "{0:s}", new { @class = "form-control", type = "datetime-local" })
            </div>
            <div class="input-field col s12 m12 l4">
                @Html.TextBoxFor(model => model.Atto.CodiceMateria, new { @class = "form-control" })
                @Html.LabelFor(s => s.Atto.CodiceMateria)
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12">
                @Html.TextBoxFor(model => model.Atto.Oggetto, new { @class = "form-control" })
                @Html.LabelFor(s => s.Atto.Oggetto)
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12 m12 l4">
                @Html.TextBox("txtAreaPoliticaAtto", atto.DisplayAreaPolitica, new { @class = "form-control" })
                @Html.LabelFor(s => s.Atto.AreaPolitica)
            </div>
            <div class="input-field col s12 m12 l4">
                @Html.TextBox("txtTipoRispostaAtto", atto.DisplayTipoRispostaRichiesta, new { @class = "form-control" })
                @Html.LabelFor(s => s.Atto.IDTipo_Risposta)
            </div>
            <div class="input-field col s6 m6 l2">
                <p>
                    <label>
                        <input type="checkbox" value="true" @Html.Raw((Model.Atto.Pubblicato ? "checked=\"checked\"" : ""))/>
                        <span>Pubblicato</span>
                    </label>
                </p>
            </div>
            <div class="input-field col s6 m6 l2">
                <p>
                    <label>
                        <input type="checkbox" value="true" @Html.Raw((Model.Atto.Sollecito ? "checked=\"checked\"" : ""))/>
                        <span>Sollecito</span>
                    </label>
                </p>
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12">
                @if (atto.Documenti.Any())
                {
                    if (atto.Documenti.Any(d => d.TipoEnum == TipoDocumentoEnum.AGGIUNTIVO))
                    {
                        <h6>
                            <b>Documenti aggiuntivi</b>
                        </h6>
                        <hr/>
                        <ul class="collection">
                            @foreach (var doc in atto.Documenti.Where(d => d.TipoEnum == TipoDocumentoEnum.AGGIUNTIVO))
                            {
                                <li class="collection-item">
                                    <a href="@doc.Link" target="_blank">@doc.Titolo</a>
                                </li>
                            }
                        </ul>
                    }
                }
            </div>
        </div>
    </div>
</li>
<li>
    <div class="collapsible-header collection-header-custom"><i class="material-icons">event_note</i>Trattazione</div>
    <div class="collapsible-body">

        @if (!atto.Risposte.Any())
        {
            <div class="card-panel panel-warning center">
                <span class="center">
                    <p>Nessuna risposta</p>
                </span>
            </div>
        }
        else
        {
            <table>
                <thead>
                <tr>
                    <th>Tipo risposta fornita</th>
                    <th>Data risposta</th>
                    <th>Tipo organo</th>
                    <th>Organo</th>
                    <th>Data trasmissione</th>
                    <th>Data trattazione</th>
                </tr>
                </thead>

                <tbody>
                @foreach (var risposta in atto.Risposte)
                {
                    <tr>
                        <td>@Html.Raw(risposta.DisplayTipo)</td>
                        <td>@Html.Raw((risposta.Data.HasValue) ? risposta.Data.Value.ToString("dd/MM/yyyy HH:mm") : "")</td>
                        <td>@Html.Raw(risposta.DisplayTipoOrgano)</td>
                        <td>@Html.Raw(risposta.DescrizioneOrgano)</td>
                        <td>@Html.Raw((risposta.DataTrasmissione.HasValue) ? risposta.DataTrasmissione.Value.ToString("dd/MM/yyyy HH:mm") : "")</td>
                        <td>@Html.Raw((risposta.DataTrattazione.HasValue) ? risposta.DataTrattazione.Value.ToString("dd/MM/yyyy HH:mm") : "")</td>
                    </tr>
                }
                </tbody>
            </table>
        }

        @if (atto.Documenti.Any())
        {
            if (atto.Documenti.Any(d => d.TipoEnum == TipoDocumentoEnum.RISPOSTA))
            {
                <h6>
                    <b>Documenti risposte</b>
                </h6>
                <hr/>
                <ul class="collection">
                    @foreach (var doc in atto.Documenti.Where(d => d.TipoEnum == TipoDocumentoEnum.RISPOSTA))
                    {
                        <li class="collection-item">
                            <a href="@doc.Link" target="_blank">@doc.Titolo</a>
                        </li>
                    }
                </ul>
            }
        }
    </div>
</li>
@if (atto.Tipo == (int)TipoAttoEnum.MOZ
     || atto.Tipo == (int)TipoAttoEnum.IQT
     || atto.Tipo == (int)TipoAttoEnum.ODG
     || atto.Tipo == (int)TipoAttoEnum.RIS)
{
    <li>
        <div class="collapsible-header collection-header-custom"><i class="material-icons">network_check</i>Monitoraggio</div>
        <div class="collapsible-body">
            <div class="row">
                <div class="input-field col s12 m12 l6">
                    @Html.TextBoxFor(model => model.Atto.AreaTematica, new { @class = "form-control" })
                    @Html.LabelFor(s => s.Atto.AreaTematica)
                </div>
                <div class="input-field col s12 m12 l6">
                    @Html.TextBoxFor(model => model.Atto.AltriSoggetti, new { @class = "form-control" })
                    @Html.LabelFor(s => s.Atto.AltriSoggetti)
                </div>
            </div>
            <div class="row">
                <div class="input-field col s12">

                    @if (!atto.Monitoraggi.Any())
                    {
                        <div class="card-panel panel-warning center">
                            <span class="center">
                                <p>Nessuna monitoraggio</p>
                            </span>
                        </div>
                    }
                    else
                    {
                        <table>
                            <thead>
                            <tr>
                                <th>Tipo organo monitorato</th>
                                <th>Organo monitorato</th>
                            </tr>
                            </thead>

                            <tbody>
                            @foreach (var monitoraggio in atto.Monitoraggi)
                            {
                                <tr>
                                    <td>@Html.Raw(monitoraggio.DisplayTipoOrgano)</td>
                                    <td>@Html.Raw(monitoraggio.DescrizioneOrgano)</td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    }

                    @if (atto.Documenti.Any())
                    {
                        if (atto.Documenti.Any(d => d.TipoEnum == TipoDocumentoEnum.MONITORAGGIO))
                        {
                            <h6>
                                <b>Documenti monitoraggio</b>
                            </h6>
                            <hr/>
                            <ul class="collection">
                                @foreach (var doc in atto.Documenti.Where(d => d.TipoEnum == TipoDocumentoEnum.MONITORAGGIO))
                                {
                                    <li class="collection-item">
                                        <a href="@doc.Link" target="_blank">@doc.Titolo</a>
                                    </li>
                                }
                            </ul>
                        }
                    }
                </div>
            </div>
        </div>
    </li>
}
<li>
    <div class="collapsible-header collection-header-custom"><i class="material-icons">perm_scan_wifi</i>Chiusura iter</div>
    <div class="collapsible-body">
        <div class="row">
            <div class="input-field col s12 m12 l4">
                @Html.TextBox("txtTipoChiusura", atto.DisplayTipoChiusuraIter, new { @class = "form-control" })
                @Html.LabelFor(s => s.Atto.TipoChiusuraIter)
            </div>
            <div class="input-field col s12 m12 l4">
                @Html.LabelFor(s => s.Atto.DataChiusuraIter, new { @class = "active" })
                @Html.TextBoxFor(s => s.Atto.DataChiusuraIter, "{0:s}", new { @class = "form-control", type = "datetime-local" })
            </div>
            <div class="input-field col s12 m12 l4">
                @Html.TextBoxFor(model => model.Atto.DisplayTipoVotazioneIter, new { @class = "form-control" })
                @Html.LabelFor(s => s.Atto.TipoVotazioneIter)
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12 m12 l8">
                <div class="row">
                    <div class="input-field col s12 m12 l4">
                        <label>DCR</label>
                        @Html.TextBoxFor(model => model.Atto.DCRL, new { @class = "form-control" })
                    </div>
                    <div class="input-field col s12 m12 l4">
                        <label> </label>
                        @Html.TextBoxFor(model => model.Atto.DCR, new { @class = "form-control" })
                    </div>
                    <div class="input-field col s12 m12 l4">
                        <label> </label>
                        @Html.TextBoxFor(model => model.Atto.DCRC, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="input-field col s12 m12 l4">
                <p>
                    <label>
                        <input type="checkbox" value="true" @Html.Raw((Model.Atto.Emendato ? "checked=\"checked\"" : ""))/>
                        <span>Emendato</span>
                    </label>
                </p>
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12 m12 l12">
                @if (atto.Documenti.Any())
                {
                    if (atto.Documenti.Any(d => d.TipoEnum == TipoDocumentoEnum.CHIUSURA_ITER))
                    {
                        <h6>
                            <b>Documenti di chiusura iter</b>
                        </h6>
                        <hr/>
                        <ul class="collection">
                            @foreach (var doc in atto.Documenti.Where(d => d.TipoEnum == TipoDocumentoEnum.CHIUSURA_ITER))
                            {
                                <li class="collection-item">
                                    <a href="@doc.Link" target="_blank">@doc.Titolo</a>
                                </li>
                            }
                        </ul>
                    }
                }
            </div>
        </div>
    </div>
</li>
<li>
    <div class="collapsible-header collection-header-custom"><i class="material-icons">comment</i>Note</div>
    <div class="collapsible-body">
        @if (!atto.Note.Any())
        {
            <div class="card-panel panel-warning center">
                <span class="center">
                    <p>Nessuna nota</p>
                </span>
            </div>
        }
        else
        {
            <table>
                <thead>
                <tr>
                    <th>Tipo nota</th>
                    <th>Nota</th>
                    <th>Utente</th>
                </tr>
                </thead>

                <tbody>
                @foreach (var nota in atto.Note)
                {
                    <tr>
                        <td>@Html.Raw(nota.Tipo)</td>
                        <td>@Html.Raw(nota.Nota)</td>
                        <td>@Html.Raw(nota.Persona.DisplayName)</td>
                    </tr>
                }
                </tbody>
            </table>
        }

    </div>
</li>
<li>
    <div class="collapsible-header collection-header-custom"><i class="material-icons">local_printshop</i>Stampe</div>
    <div class="collapsible-body">
        <span>Lorem ipsum dolor sit amet.</span>
    </div>
</li>
</ul>
</div>
</div>

<div class="fixed-action-btn">
    @if (Model.CurrentUser.UID_persona == atto.UIDPersonaProponente)
    {
        <a class="btn-floating btn-large white black-text tooltipped"
           data-position="left"
           data-tooltip="Stampa"
           data-url="@Url.Action("Download", "DASI", new { id = atto.UIDAtto })"
           data-url-privacy="@Url.Action("DownloadWithPrivacy", "DASI", new { id = atto.UIDAtto })"
           onclick="StampaUOLA(this)"
           style="margin-right: 15px;">
            <i class="material-icons">print</i>
        </a>
    }
    else
    {
        <a class="btn-floating btn-large white black-text tooltipped"
           data-position="left"
           data-tooltip="Stampa"
           target="_blank"
           href="@Url.Action("DownloadWithPrivacy", "DASI", new { id = atto.UIDAtto })"
           style="margin-right: 15px;">
            <i class="material-icons">print</i>
        </a>
    }
</div>


<script>
	document.addEventListener('DOMContentLoaded', async function () {
	    var elem = document.querySelector('.collapsible.expandable');
	    var instance = M.Collapsible.init(elem, {
		    accordion: false
	    });
    });

    function CambiaPrioritaFirma(ctrl, uidAtto, uidPersona) {

        var body = {};
        body.UIDAtto = uidAtto;
        body.UID_persona = uidPersona;

        var url = "@Url.Action("CambiaPrioritaFirma", "DASI")";
        $.ajax({
            url: url,
            type: "POST",
            data: JSON.stringify(body),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            beforeSend: function() {
                console.log("RICHIESTA INVIATA");
                waiting(true, "Elaborazione in corso..");
            },
            success: function(response, status, xhr) {
                if (response.message) {
                    swal({
                        title: "Azione non permessa",
                        text: response.message,
                        icon: "error"
                    });
                    return;
                }
                var elem = $(ctrl).find('i');
                if (elem.text() == "star") {
                    elem.text("star_border");
                    elem.removeClass("black-text");
                } else {
                    elem.text("star");
                    elem.addClass("black-text");
                }
            },
            error: function(xhr, status, error) {
                console.error("Errore nella richiesta: " + status + ". Motivo: " + error);
                waiting(false);
            },
            complete: function() {
                console.log("OK");
                waiting(false);
            },
            cache: false,
            processData: false
        });
    }
	
</script>
</body>
</html>