@using PortaleRegione.DTO.Enum
@model PortaleRegione.DTO.Response.BaseResponse<PortaleRegione.DTO.Domain.PersonaDto>

@{
    ViewBag.Title = "Amministrazione";
}

@{
    string q = "";
    foreach (var key in Context.Request.QueryString.AllKeys)
    {
        if (Equals(key, "q"))
        {
            q = Context.Request.QueryString.Get("q");
            break;
        }
    }
}

<div class="row">
    <div class="col s12">
        <h5>
            <b>@ViewBag.Title</b>
        </h5>
    </div>
</div>

@{
    Html.RenderPartial("_PaginationBar", Model.Paging);
}

<div id="utentiTable" class="row">

    @if (!Model.Results.Any())
    {
        <div class="row">
            <div class="col s12">
                <div class="card-panel panel-warning center">
                    <span class="center">
                        Non ci sono sedute al momento
                    </span>
                </div>
            </div>
        </div>
    }

    @foreach (var persona in Model.Results)
    {
        var colorPin = "";
        var messaggio = "";
        switch (persona.Stato_Pin)
        {
            case StatoPinEnum.VALIDO:
                {
                    messaggio = "Pin valido";
                    colorPin = "green";
                    break;
                }
            case StatoPinEnum.RESET:
                {
                    messaggio = "Pin da resettare";
                    colorPin = "orange";
                    break;
                }
            case StatoPinEnum.NESSUNO:
                {
                    messaggio = "Nessun pin impostato";
                    colorPin = "red";
                    break;
                }
        }
        <div class="col l6 m6 s12">
            <div class="card hoverable" title="@persona.DisplayName">
                <div class="card-action grey lighten-4 center">
                    <div class="row valign-wrapper" style="margin: 0 !important; padding: 0 !important">
                        <div class="col s6 left-align">
                            <div class="chip white-text @colorPin" style="min-width: unset">@messaggio</div>
                        </div>
                        <div class="col s6 right-align">
                            <a class="hoverable center black-text" onclick="openResetPin('@persona.UID_persona', '@persona.DisplayName')" title="RESET pin">
                                <i class="material-icons">lock</i>
                            </a>
                            <a class="hoverable center black-text" onclick="openResetPassword('@persona.UID_persona', '@persona.DisplayName')" title="RESET password">
                                <i class="material-icons">vpn_key</i>
                            </a>
                            <a class="hoverable center black-text" onclick="go('@Url.Action("ViewUtente", "AdminPanel", new {id = persona.UID_persona})')" title="Modifica @persona.UID_persona">
                                <i class="material-icons">chevron_right</i>
                            </a>
                        </div>
                    </div>
                </div>
                <div class="card-content" onclick="">
                    <div class="row valign-wrapper" style="margin:unset!important">
                        <div class="col s3 center">
                            <img class="responsive-img circle" style="width: 80px;height: 80px;" src='http://intranet.consiglio.regione.lombardia.it/GC/foto/@persona.foto'>
                        </div>
                        <div class="col s9">
                            <h5 class="card-title truncate">
                                <span>@persona.DisplayName</span>
                            </h5>
                            <p>
                                @persona.userAD
                            </p>
                            <p>
                                @{
                                    var gruppi = "--";
                                    if (!string.IsNullOrEmpty(persona.Gruppi))
                                    {
                                        gruppi = persona.Gruppi;
                                    }
                                }
                                <b>Gruppi A.D. PEM:</b> @gruppi

                                @if (!string.IsNullOrEmpty(persona.GruppiAD))
                                {
                                    <i class="material-icons tiny activator">add</i>
                                }
                            </p>
                        </div>
                    </div>
                </div>
                <div class="card-reveal">
                    <span class="card-title grey-text text-darken-4">Altri Gruppi A.D.<i class="material-icons right">close</i></span>
                    <p>
                        @persona.GruppiAD
                    </p>
                </div>
            </div>
        </div>
    }
</div>

<div id="slide-out-DX" class="sidenav">
    <div class="row">
        <div class="col s12">
        @using (Html.BeginForm("SearchUsers", "AdminPanel", FormMethod.Post, new {id = "formSearchUsers"}))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="page" value="@Model.Paging.Page"/>
            <input type="hidden" name="size" value="@Model.Paging.Limit"/>

            <div class="form-group">
                <label>Ricerca per persona</label>
                <input id="txtQ" type="text" name="q" class="form-control" placeholder="Cerca" value="@q"/>
            </div>
        }
        </div>
    </div>
    <div class="row">
        <div class="col s12 center">
            <a class="btn chip blue white-text" style="min-width: unset" onclick="$('#formSearchUsers').submit();">Cerca</a>
            <a href="@Url.Action("RiepilogoUtenti")" class="btn chip grey white-text" style="min-width: unset">Reset</a>
        </div>
    </div>
</div>

<input type="hidden" id="hdPersonaUID" />

<div id="modalResetPin" class="modal">
    <div class="modal-content">
        <h5>Attenzione</h5>
        <p>Sei sicuro di voler resettare il pin di <b id="txtDisplayNamePersonaPin"></b>?</p>
        <div class="form-group">
            <label>Inserisci nuovo pin</label>
            <input type="text" id="txtResetPin" />
        </div>
        <div class="modal-footer">
            <button type="button" class="btn modal-close grey">Annulla</button>
            <a id="btnResetPin" class="btn red" href="#">RESET PIN</a>
        </div>
    </div>
</div>

<div id="modalResetPassword" class="modal">
    <div class="modal-content">
        <h5>Attenzione</h5>
        <p>Sei sicuro di voler resettare la password di <b id="txtDisplayNamePersonaPassword"></b>?</p>
        <div class="form-group">
            <label>Inserisci nuova password</label>
            <input type="text" id="txtResetPassword" />
        </div>
        <div class="form-group">
            <label>Conferma password</label>
            <input type="text" id="txtResetPassword_Confirm" />
        </div>
        <div class="modal-footer">
            <button type="button" class="btn modal-close grey">Annulla</button>
            <a id="btnResetPassword" class="btn red" href="#">RESET PASSWORD</a>
        </div>
    </div>
</div>

<script>

    $('#btnResetPin').click(function() {
        $('#btnResetPin').attr("disabled", true);
        var pin = {
            new_value: $('#txtResetPin').val(),
            persona_UId: $('#hdPersonaUID').val()
        }
        $.ajax({
            url: '@Url.Action("ResetPin", "AdminPanel")',
            type: "POST",
            data: JSON.stringify(pin),
            contentType: "application/json; charset=utf-8",
            dataType: "json"
        }).done(async function(data) {
            if (data.message) {
                ErrorAlert(data.message);
                $('#btnResetPin').attr("disabled", false);
                return;
            }
            SuccessModal("Reset pin effettuato correttamente", $('#modalResetPin'));
            $('#btnResetPin').attr("disabled", false);
        }).fail(function(err) {
            $('#btnResetPin').attr("disabled", false);
            console.log("error", err);
            ErrorAlert(err);
        });
    });

    $('#btnResetPassword').click(function() {
        if ($('#txtResetPassword').val() != $('#txtResetPassword_Confirm').val()) {
            swal({
                title: "Attenzione",
                text: "Le password non coincidono",
                icon: "warning",
                button: {
                    confirm: "Ok"
                }
            });
            return;
        }
        $('#btnResetPassword').attr("disabled", true);
        var password = {
            new_value: $('#txtResetPassword').val(),
            persona_UId: $('#hdPersonaUID').val()
        }
        $.ajax({
            url: '@Url.Action("ResetPassword", "AdminPanel")',
            type: "POST",
            data: JSON.stringify(password),
            contentType: "application/json; charset=utf-8",
            dataType: "json"
        }).done(function(data) {
            if (data.message) {
                ErrorAlert(data.message);
                $('#btnResetPassword').attr("disabled", false);
                return;
            }
            SuccessModal("Reset password effettuato correttamente", $('#modalResetPassword'));
            $('#btnResetPassword').attr("disabled", false);
        }).fail(function(err) {
            $('#btnResetPassword').attr("disabled", false);
            console.log("error", err);
            ErrorAlert(err);
        });
    });


    function openResetPin(id, displayName) {
        $('#btnResetPin').attr("disabled", false);
        $('#hdPersonaUID').val(id);
        $('#txtDisplayNamePersonaPin').text(displayName);
        $('#modalResetPin').modal('open');
    }
    function openResetPassword(id, displayName) {
        $('#btnResetPassword').attr("disabled", false);
        $('#hdPersonaUID').val(id);
        $('#txtDisplayNamePersonaPassword').text(displayName);
        $('#modalResetPassword').modal('open');
    }

    $(document).ready(function () {
        //Reset_ClientMode();
    });
</script>