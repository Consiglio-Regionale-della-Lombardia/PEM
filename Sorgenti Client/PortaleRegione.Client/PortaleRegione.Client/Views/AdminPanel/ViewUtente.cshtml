@model PortaleRegione.Client.Models.ViewUtenteModel

@{
    var disable_fields = true;
    if (Model.Persona.UID_persona == Guid.Empty)
    {
        ViewBag.Title = "Nuovo utente";
        disable_fields = false;
    }
    else
    {
        ViewBag.Title = Model.Persona.DisplayName;
        disable_fields = Model.Persona.No_Cons == 0;
    }
    var backUrl = Url.Action("RiepilogoUtenti");
}

<script>
    $(document).ready(function() {
        $('#btnSearch').hide();
    });
</script>

<div class="row">
    <div class="col l1 s2">
        <a class="btn-floating waves-effect waves-light grey header-back" onclick="go('@backUrl')">
            <i class="material-icons">arrow_back</i>
        </a>
    </div>
    <div class="col l11 s10">
        <h5>
            <b>
                <span>@ViewBag.Title</span>
            </b>
        </h5>
    </div>
</div>
<div class="row">
    <div class="col s12">
        @using (Html.BeginForm("SalvaPersona", "AdminPanel", FormMethod.Post, new { id = "formPersona" }))
        {
            @Html.AntiForgeryToken()
            <input name="Persona.id_persona" type="hidden" value="@Model.Persona.id_persona"/>

            <div class="form-group">
                @Html.LabelFor(s => s.Persona.UID_persona)
                @Html.TextBoxFor(s => s.Persona.UID_persona, new
                {
                    @class = "form-control",
                    @readonly = true
                })
            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.Persona.cognome)
                @if (disable_fields)
                {
                    @Html.TextBoxFor(s => s.Persona.cognome, new { @class = "form-control", @readonly = true })
                }
                else
                {
                    @Html.TextBoxFor(s => s.Persona.cognome, new { @class = "form-control" })
                }
            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.Persona.nome)
                @if (disable_fields)
                {
                    @Html.TextBoxFor(s => s.Persona.nome, new { @class = "form-control", @readonly = true })
                }
                else
                {
                    @Html.TextBoxFor(s => s.Persona.nome, new { @class = "form-control" })
                }
            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.Persona.email)
                @if (disable_fields)
                {
                    @Html.TextBoxFor(s => s.Persona.email, new { @class = "form-control", @readonly = true })
                }
                else
                {
                    @Html.TextBoxFor(s => s.Persona.email, new { @class = "form-control" })
                }
            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.Persona.foto)
                @if (disable_fields)
                {
                    @Html.TextBoxFor(s => s.Persona.foto, new { @class = "form-control", @readonly = true })
                }
                else
                {
                    @Html.TextBoxFor(s => s.Persona.foto, new
                    {
                        @class = "form-control"
                    })
                }
            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.Persona.userAD)
                @Html.TextBoxFor(s => s.Persona.userAD, new { @class = "form-control" })
            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.Persona.id_gruppo_politico_rif)
                <select id="ddlRiferimentoGruppo">
                    <option value="0">--</option>
                    @foreach (var gruppo in Model.GruppiInDB)
                    {
                        if (Model.Persona.id_gruppo_politico_rif == gruppo.id)
                        {
                            <option value="@gruppo.id" selected="selected">@gruppo.descr</option>
                        }
                        else
                        {
                            <option value="@gruppo.id">@gruppo.descr</option>
                        }
                    }
                </select>
            </div>

            <div class="form-group">
                <p>
                    <label>
                        <input id="No_Cons" name="No_Cons" type="checkbox" value="true" disabled="disabled"
                               @Html.Raw(Convert.ToBoolean(Model.Persona.No_Cons) ? "" : "checked=\"checked\"")>
                        <span>@Html.LabelFor(s => s.Persona.No_Cons)</span>
                    </label>
                </p>
            </div>

            var notifica_Firma = Model.Persona.notifica_firma.HasValue ? Model.Persona.notifica_firma.Value : false;

            <div class="form-group">
                <p>
                    <label>
                        <input id="notifica_firma" name="notifica_firma" type="checkbox" value="true"
                               @Html.Raw(notifica_Firma ? "checked=\"checked\"" : "")>
                        <span>@Html.LabelFor(s => s.Persona.notifica_firma)</span>
                    </label>
                </p>
            </div>

            var notifica_Deposito = Model.Persona.notifica_deposito.HasValue ? Model.Persona.notifica_deposito.Value : false;

            <div class="form-group">
                <p>
                    <label>
                        <input id="notifica_deposito" name="notifica_deposito" type="checkbox" value="true"
                               @Html.Raw(notifica_Deposito ? "checked=\"checked\"" : "")>
                        <span>@Html.LabelFor(s => s.Persona.notifica_deposito)</span>
                    </label>
                </p>
            </div>

            var attivo = Model.Persona.attivo.HasValue ? Model.Persona.attivo.Value : false;

            <div class="form-group">
                <p>
                    <label>
                        <input id="attivo" name="attivo" type="checkbox" value="true"
                               @Html.Raw(attivo ? "checked=\"checked\"" : "")>
                        <span>@Html.LabelFor(s => s.Persona.attivo)</span>
                    </label>
                </p>
            </div>

            var eliminato = Model.Persona.deleted.HasValue ? Model.Persona.deleted.Value : false;

            <div class="form-group">
                <p>
                    <label>
                        <input id="deleted" name="deleted" type="checkbox" value="true" disabled="disabled"
                               @Html.Raw(eliminato ? "checked=\"checked\"" : "")>
                        <span>@Html.LabelFor(s => s.Persona.deleted)</span>
                    </label>
                </p>
            </div>
            <div class="row">
                @foreach (var gruppiAD in Model.GruppiAD)
                {
                    var classCss = gruppiAD.IsRuolo ? "light-blue lighten-5" : "lime lighten-5";
                    <div class="col s3">
                        <div class="card @classCss">
                            <div class="card-content">
                                <p>
                                    <label>
                                        <input id="gruppiAD" name="gruppiAD" type="checkbox" value="true" data-name="@gruppiAD.GruppoAD"
                                               @Html.Raw(gruppiAD.Membro ? "checked=\"checked\"" : "")>
                                        <span></span>
                                    </label>
                                </p>
                                <p class="truncate">@gruppiAD.GruppoAD</p>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }

        <div class="row">
            <div class="col s12">
                @using (Html.BeginForm("EliminaPersona", "AdminPanel", FormMethod.Post, new { id = "formElimina" }
                    ))
                {
                    @Html.AntiForgeryToken()
                    <a class="btn chip hoverable red center white-text" id="btnElimina" style="width: 255px;">
                        <i class="icon material-icons">close</i> Elimina
                    </a>
                }
            </div>
        </div>
        @if (Model.CurrentUser.IsAmministratoreGiunta || Model.CurrentUser.IsAmministratorePEM)
        {
            <div class="fixed-action-btn">
                <button id="btnSalvaUtente" class="btn-floating btn-large blue">
                    <i class="large material-icons">save</i>
                </button>
            </div>
        }
    </div>
</div>

<script>
    $("#btnSalvaUtente").on("click",
        function() {
            waiting(true);
            $('#formPersona').submit();
        });

    $("#formPersona").submit(function(e) {
        e.preventDefault();
    }).validate({
        submitHandler: function(form) {

            var groups = $('input[name="gruppiAD"]');

            var selected_groups = [];
            $.each(groups,
                function(index, item) {
                    selected_groups.push({
                        gruppoAd: $(item).data('name'),
                        membro: $(item).is(":checked")
                    });
                });
            var gruppo_riferimento = $("#ddlRiferimentoGruppo").children("option:selected");
            var id_gruppo_politico_rif = 0;
            $.each(gruppo_riferimento,
                function(index, item) {
                    id_gruppo_politico_rif = $(item).val();
                });
            var form_data = {
                uid_persona: $('input[name="Persona.UID_persona"]').val(),
                id_persona: $('input[name="Persona.id_persona"]').val(),
                nome: $('input[name="Persona.nome"]').val(),
                cognome: $('input[name="Persona.cognome"]').val(),
                email: $('input[name="Persona.email"]').val(),
                foto: $('input[name="Persona.foto"]').val(),
                userAd: $('input[name="Persona.userAD"]').val(),
                notifica_firma: $('input[name="notifica_firma"]').is(":checked"),
                notifica_deposito: $('input[name="notifica_deposito"]').is(":checked"),
                attivo: $('input[name="attivo"]').is(":checked"),
                deleted: $('input[name="deleted"]').is(":checked"),
                no_cons: $('input[name="No_Cons"]').is(":checked") ? 0 : 1,
                gruppiAd: selected_groups,
                id_gruppo_politico_rif: id_gruppo_politico_rif
            };

            //submit via ajax
            $.ajax({
                    url: '@Url.Action("SalvaPersona", "AdminPanel")',
                    type: "POST",
                    data: JSON.stringify(form_data),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json"
                }).done(function(dataResult) {
                    waiting(false);
                    if (dataResult.message)
                        swal({
                            title: "Errore",
                            text: dataResult.message,
                            icon: "error"
                        });
                    else {
                        if ($('input[name="Persona.UID_persona"]').val() == "@Html.Raw(Guid.Empty)") {
                            go(dataResult);
                        } else {
                            SuccessAlert("Profilo salvato correttamente");
                        }
                    }
                })
                .fail(function(err) {
                    console.log("error", err);
                    Error(err);
                });

            return false; //This doesn't prevent the form from submitting.
        }
    });

    $("#btnElimina").on("click",
        function() {
            waiting(true);
            $('#formElimina').submit();
        });

    $("#formElimina").submit(function(e) {
        e.preventDefault();
    }).validate({
        submitHandler: function(form) {
            
            //submit via ajax
            $.ajax({
                    url: '@Url.Action("EliminaPersona", "AdminPanel")' + "?id=@Html.Raw(Model.Persona.UID_persona)",
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json"
                }).done(function(dataResult) {
                    waiting(false);
                    if (dataResult.message)
                        swal({
                            title: "Errore",
                            text: dataResult.message,
                            icon: "error"
                        });
                    else {
                        if ($('input[name="Persona.UID_persona"]').val() == "@Html.Raw(Guid.Empty)") {
                            go(dataResult);
                        } else {
                            location.reload();
                        }
                    }
                })
                .fail(function(err) {
                    console.log("error", err);
                    Error(err);
                });

            return false; //This doesn't prevent the form from submitting.
        }
    });
</script>