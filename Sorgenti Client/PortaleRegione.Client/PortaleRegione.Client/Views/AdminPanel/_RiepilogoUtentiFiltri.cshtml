@using PortaleRegione.DTO.Domain
@using PortaleRegione.DTO.Enum
@model PortaleRegione.DTO.Response.BaseResponse<PortaleRegione.DTO.Domain.PersonaDto>
    
<div id="slide-out-DX" class="sidenav sidenav-search" style="overflow: auto !important">
    <div class="row">
        <div class="col s12">
            @using (Html.BeginForm("SearchUsers", "AdminPanel", FormMethod.Post, new { id = "formSearchUsers" }))
            {
                @Html.AntiForgeryToken()
                <input type="hidden" id="inputFilterPage" name="page" value="@Model.Paging.Page" />
                <input type="hidden" id="inputFilterSize" name="size" value="@Model.Paging.Limit" />

                <div class="form-group">
                    <label>Ricerca per persona</label>
                    <input id="txtQ" type="text" name="q" class="form-control" placeholder="Cerca" value="@Html.Raw(Model.Filters.Any(f => f.PropertyId == nameof(PersonaDto.cognome)) ? Model.Filters.First(f => f.PropertyId == nameof(PersonaDto.cognome)).Value : "")" />
                </div>
                <div class="form-group">
                    <label>Ruoli</label>
                    <select id="filter_ruoli" name="ruoli" class="form-control" multiple="multiple">
                        <option value="">--</option>
                        <option value="@((int)RuoliIntEnum.Amministratore_PEM)">Amministratore PEM</option>
                        <option value="@((int)RuoliIntEnum.Presidente_Regione)">Presidente della Regione Lombardia</option>
                        <option value="@((int)RuoliIntEnum.Amministratore_Giunta)">Amministratore Giunta</option>
                        <option value="@((int)RuoliIntEnum.Assessore_Sottosegretario_Giunta)">Assessore/Sottosegretario Giunta</option>
                        <option value="@((int)RuoliIntEnum.Segreteria_Assemblea)">Segreteria dell'Assemblea</option>
                        <option value="@((int)RuoliIntEnum.Consigliere_Regionale)">Consigliere</option>
                        <option value="@((int)RuoliIntEnum.Responsabile_Segreteria_Politica)">Responsabile di segreteria Politica</option>
                        <option value="@((int)RuoliIntEnum.Responsabile_Segreteria_Giunta)">Responsabile di segreteria Giunta</option>
                        <option value="@((int)RuoliIntEnum.Segreteria_Giunta_Regionale)">Segreteria Giunta</option>
                        <option value="@((int)RuoliIntEnum.Segreteria_Politica)">Segreteria Politica</option>
                        <option value="@((int)RuoliIntEnum.Utente)">Utente</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Gruppi</label>
                    <select id="filter_gruppi" name="gruppi" class="form-control" multiple="multiple">
                        <option value="">--</option>
                    </select>
                </div>
                <div class="form-group">
                    <p>
                        <label>
                            <input type="checkbox" name="no_cons" @Html.Raw(Model.Filters.Any(f => f.PropertyId == nameof(PersonaDto.No_Cons)) ? "checked='checked'" : "") />
                            <span>Solo non consiglieri</span>
                        </label>
                    </p>
                </div>
                <div class="form-group">
                    <label>Legislatura</label>
                    <select id="filter_legislature" name="legislatura" class="form-control" multiple="multiple"></select>
                </div>
            }
        </div>
    </div>
    <div class="row">
        <div class="col s12 center">
            <a class="btn chip blue white-text" style="min-width: unset" onclick="filtra();">Cerca</a>
            <a href="@Url.Action("RiepilogoUtenti")" class="btn chip grey white-text" style="min-width: unset">Reset</a>
        </div>
    </div>
</div>