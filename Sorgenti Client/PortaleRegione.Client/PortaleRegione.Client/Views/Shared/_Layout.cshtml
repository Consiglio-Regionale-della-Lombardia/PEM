@using Newtonsoft.Json
@using PortaleRegione.Client.Helpers
@using PortaleRegione.DTO.Domain
@using PortaleRegione.DTO.Enum
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Portale @Html.Raw(AppSettingsConfiguration.Title)</title>
    
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">

    @Styles.Render("~/Content/css")
    @*Import Trumbowyg plugins style...*@
    <link href="~/Content/editor/plugins/table/ui/trumbowyg.table.min.css" rel="stylesheet" />

    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    @Scripts.Render("~/bundles/lib")
    @Scripts.Render("~/bundles/logic")
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
    <script src="~/Scripts/moment.js"></script>
    
    @{
        PersonaDto currentUser = null;

        if (HttpContext.Current.User.Identity.IsAuthenticated)
        {
            var authCookie1 = Request.Cookies["PRCookies1"];
            var authCookie2 = Request.Cookies["PRCookies2"];
            var authCookie3 = Request.Cookies["PRCookies3"];
            if (authCookie1 != null && authCookie2 != null && authCookie3 != null)
            {
                if (!string.IsNullOrEmpty(authCookie1.Value) && !string.IsNullOrEmpty(authCookie2.Value) && !string.IsNullOrEmpty(authCookie3.Value))
                {
                    var authenticationTicket1 = FormsAuthentication.Decrypt(authCookie1.Value);
                    var authenticationTicket2 = FormsAuthentication.Decrypt(authCookie2.Value);
                    var authenticationTicket3 = FormsAuthentication.Decrypt(authCookie3.Value);
                    var data = JsonConvert.DeserializeObject<PersonaDto>(string.Format("{0}{1}{2}", authenticationTicket1.UserData, authenticationTicket2.UserData, authenticationTicket3.UserData));

                    currentUser = data;
                }
            }
        }
    }
    

<script>
        baseUrl = '@Html.Raw(AppSettingsConfiguration.URL_CLIENT)';
        AggiornaPosizioneTemi(baseUrl);
	    var cssTheme = gruppi_theme;
        @{
            if (currentUser == null)
            {
                @Html.Raw("var modeFromCache = " + (int)ClientModeEnum.GRUPPI)
            }
            else
            {
                var clientModeFromCache = HttpContext.Current.Cache.Get($"{CacheHelper.CLIENT_MODE}_{currentUser.UID_persona.ToString()}");
                if (clientModeFromCache == null)
                {
                    @Html.Raw("var modeFromCache = " + (int)ClientModeEnum.GRUPPI)
                }
                else
                {
                    @Html.Raw("var modeFromCache = " + clientModeFromCache);
                }
            }
        }
	    
	    var mode = modeFromCache;
        if (mode == 2) {
            cssTheme = trattazione_theme;
        } else {
            cssTheme = gruppi_theme;
        }

        var cssId = 'client-mode-theme'; // you could encode the css path itself to generate id..
        if (!document.getElementById(cssId)) {
            var head = document.getElementsByTagName('head')[0];
            var link = document.createElement('link');
            link.id = cssId;
            link.rel = 'stylesheet';
            link.type = 'text/css';
            link.href = cssTheme;
            link.media = 'all';
            head.appendChild(link);
        }
</script>
</head>
<body>
<div id="loader-wrapper">
    <div id="loader"></div>
    <div class="loader-section section-left"></div>
    <div class="loader-section section-right"></div>
</div>

<div id="waiting" class="modal" style="height: 120px">
    <div class="modal-content center">
        <div class="preloader-wrapper active">
            <div class="spinner-layer spinner-blue-only">
                <div class="circle-clipper left">
                    <div class="circle"></div>
                </div>
                <div class="gap-patch">
                    <div class="circle"></div>
                </div>
                <div class="circle-clipper right">
                    <div class="circle"></div>
                </div>
            </div>
        </div>

        <div id="waiting_info_message"></div>
    </div>
</div>

@Html.Partial("_NavigationBar")

<main>
    @Html.Partial("_SXNavigationBar")
    @RenderBody()
</main>

@if (AppSettingsConfiguration.IsDebugMode)
{
    <div id="pnlAccount" class="sidenav" style="overflow: auto !important">
        <div class="row">
            <div class="col s12">
                <h5>Account</h5>
                <hr/>
                <div class="card horizontal">
                    <div class="card-stacked">
                        <div class="card-content">
                            <p>UOLA</p>
                        </div>
                        <div class="card-action">
                            <a class="btn-flat blue-text"
                               onclick="go('@Url.Action("CambiaUtente", "Autenticazione", new { id = new Guid("ac98da99-862d-4cff-90e7-d5b324aaa7ae") })')" title="Entra">
                                <i class="material-icons right">lock_open</i>
                                Entra
                            </a>
                        </div>
                    </div>
                </div>
                <div class="card horizontal">
                    <div class="card-stacked">
                        <div class="card-content">
                            <p>Consigliere Capogruppo (PD)</p>
                        </div>
                        <div class="card-action">
                            <a class="btn-flat blue-text"
                               onclick="go('@Url.Action("CambiaUtente", "Autenticazione", new { id = new Guid("8870e6d1-fe1b-4038-a185-d8f26cb07044") })')" title="Entra">
                                <i class="material-icons right">lock_open</i>
                                Entra
                            </a>
                        </div>
                    </div>
                </div>
                <div class="card horizontal">
                    <div class="card-stacked">
                        <div class="card-content">
                            <p>Consigliere (M5S)</p>
                        </div>
                        <div class="card-action">
                            <a class="btn-flat blue-text"
                               onclick="go('@Url.Action("CambiaUtente", "Autenticazione", new { id = new Guid("3e77df9c-9e3c-e811-910f-00155d4d0224") })')" title="Entra">
                                <i class="material-icons right">lock_open</i>
                                Entra
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}



@RenderSection("scripts", false)

<script>
    $('.trumbowyg').trumbowyg({
		semantic: true, // Usa tag semantici validi
		tagsToKeep: ['b', 'i', 'u', 'strong', 'em'], // Specifica i tag consentiti
		removeformatPasted: true, // Rimuovi formattazioni strane durante il paste
        lang: 'it',
        btns: [
            ['viewHTML'],
            ['formatting'],
            ['strong', 'em', 'del'],
            ['justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull'],
            ['unorderedList', 'orderedList'],
            ['indent', 'outdent'],
            ['table'],
            ['link'],
            ['fontfamily'],
            ['fontsize'],
            ['removeformat'],
            ['fullscreen']
        ],
        plugins: {
            fontfamily: {
                fontList: [
                    { name: 'Arial', family: 'Arial, Helvetica, sans-serif' },
                    { name: 'Open Sans', family: '\'Open Sans\', sans-serif' }
                ]
            }
        }
    });
    var devPanelCounter = 0;
    $("body").on("keyup",
        function(event) {
            // Cancel the default action, if needed
            event.preventDefault();
            if (event.keyCode !== 83 && devPanelCounter > 0) {
                devPanelCounter = 0;
            }
            if (event.keyCode === 83) {
                if (devPanelCounter === 2) {
                    var elems = document.querySelector("#pnlAccount");
                    var instances = M.Sidenav.init(elems,
                        {
                            edge: "right",
                            draggable: true,
                            onOpenStart: function() {
                                // Menu laterale SX sotto a layer opaco
                                $("#slide-out").css("z-index", 997);
                            },
                            onCloseEnd: function() {
                                // Ripristino menu laterale SX
                                $("#slide-out").css("z-index", 999);
                                devPanelCounter = 0;
                            }
                        });

                    instances.open();
                } else {
                    @if (AppSettingsConfiguration.IsDebugMode)
                    {
                        @Html.Raw("devPanelCounter = devPanelCounter + 1;")
                        ;
                        ;
                    }
                }

            }
            // Number 13 is the "Enter" key on the keyboard
            if (event.keyCode === 27) {
                // Trigger the button element with a click
                swal({
                        title: "Ops!",
                        text: "Hai premuto il tasto 'ESC'. Vuoi uscire dal portale?",
                        icon: "warning",
                        buttons: { cancel: "Annulla", confirm: "Esci" },
                        dangerMode: true,
                    })
                    .then((willDelete) => {
                        if (!willDelete) return;
                        logout();
                    });
            }
        });
</script>
</body>
</html>