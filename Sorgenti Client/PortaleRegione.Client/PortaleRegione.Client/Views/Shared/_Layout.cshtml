@using System.Configuration
@using PortaleRegione.Client.Helpers
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Portale @Html.Raw(AppSettingsConfiguration.Title)</title>
    
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="manifest" href="/site.webmanifest">

    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">

    @Styles.Render("~/Content/css")

    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    @Scripts.Render("~/bundles/lib")
    @Scripts.Render("~/bundles/logic")
    <script src="~/Content/editor/trumbowyg.min.js"></script>
    <link rel="stylesheet" href="~/Content/editor/ui/trumbowyg.min.css">
    <script src="~/Scripts/moment.js"></script>

    <script>
        baseUrl = '@Html.Raw(ConfigurationManager.AppSettings["URL_CLIENT"])';
        AggiornaPosizioneTemi(baseUrl);
        var cssTheme = "";
        var modeFromCache = @Html.Raw(HttpContext.Current.Cache.Get(CacheHelper.CLIENT_MODE));
        var mode = getClientMode();
        if (mode != modeFromCache) {
            setClientMode(modeFromCache);
            mode = modeFromCache;
        }
        if (mode == 2) {
            cssTheme = trattazione_theme;
        } else {
            cssTheme = gruppi_theme;
        }

        var cssId = 'client-mode-theme'; // you could encode the css path itself to generate id..
        if (!document.getElementById(cssId)) {
            var head = document.getElementsByTagName('head')[0];
            var link = document.createElement('link');
            link.id = cssId;
            link.rel = 'stylesheet';
            link.type = 'text/css';
            link.href = cssTheme;
            link.media = 'all';
            head.appendChild(link);
        }
    </script>
</head>
<body>
<div id="loader-wrapper">
    <div id="loader"></div>
    <div class="loader-section section-left"></div>
    <div class="loader-section section-right"></div>
</div>

<div id="waiting" class="modal">
    <div class="modal-content center">
        <div class="preloader-wrapper active">
            <div class="spinner-layer spinner-blue-only">
                <div class="circle-clipper left">
                    <div class="circle"></div>
                </div>
                <div class="gap-patch">
                    <div class="circle"></div>
                </div>
                <div class="circle-clipper right">
                    <div class="circle"></div>
                </div>
            </div>
        </div>

        <h6 id="waiting_info_message"></h6>
    </div>
</div>

@Html.Partial("_NavigationBar")

<main>
    @Html.Partial("_SXNavigationBar")
    @RenderBody()
</main>

<div id="modalAction" class="modal" style="height: unset!important">
    <div class="modal-content">
        <h5 id="emActionDisplayName"></h5>
        <p id="emActionMessage"></p>
        <div class="modal-footer" style="position: unset!important;">
            <button type="button" class="btn modal-close grey">Annulla</button>
            <a id="btnConfermaAction" class="btn red" href="#">Elimina</a>
        </div>
    </div>
</div>
<div id="modalActionDASI" class="modal" style="height: unset!important">
    <div class="modal-content">
        <h5 id="attoActionDisplayName"></h5>
        <p id="attoActionMessage"></p>
        <div class="modal-footer" style="position: unset!important;">
            <button type="button" class="btn modal-close grey">Annulla</button>
            <a id="btnConfermaActionDASI" class="btn red" href="#">Elimina</a>
        </div>
    </div>
</div>

@if (HttpContext.Current.IsDebuggingEnabled) {
    <div id="pnlAccount" class="sidenav" style="overflow: auto !important">
        <div class="row">
            <div class="col s12">
                <h5>Account</h5>
                <hr/>
                <div class="card horizontal">
                    <div class="card-stacked">
                        <div class="card-content">
                            <p>UOLA</p>
                        </div>
                        <div class="card-action">
                            <a class="btn-flat blue-text"
                               onclick="go('@Url.Action("CambiaUtente", "Autenticazione", new {id=new Guid("ac98da99-862d-4cff-90e7-d5b324aaa7ae")})')" title="Entra">
                                <i class="material-icons right">lock_open</i>
                                Entra
                            </a>
                        </div>
                    </div>
                </div>
                <div class="card horizontal">
                    <div class="card-stacked">
                        <div class="card-content">
                            <p>Pizzul (PD)</p>
                        </div>
                        <div class="card-action">
                            <a class="btn-flat blue-text"
                               onclick="go('@Url.Action("CambiaUtente", "Autenticazione", new {id=new Guid("8870e6d1-fe1b-4038-a185-d8f26cb07044")})')" title="Entra">
                                <i class="material-icons right">lock_open</i>
                                Entra
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}



@RenderSection("scripts", false)

<script>
    $('.trumbowyg').trumbowyg();
    var devPanelCounter = 0;
    $("body").on("keyup",
        function(event) {
            // Cancel the default action, if needed
            event.preventDefault();
            if (event.keyCode === 83) {
                if (devPanelCounter === 2) {
                    var elems = document.querySelector("#pnlAccount");
                    var instances = M.Sidenav.init(elems,
                        {
                            edge: "right",
                            draggable: true,
                            onOpenStart: function() {
                                // Menu laterale SX sotto a layer opaco
                                $("#slide-out").css("z-index", 997);
                            },
                            onCloseEnd: function() {
                                // Ripristino menu laterale SX
                                $("#slide-out").css("z-index", 999);
                                devPanelCounter = 0;
                            }
                        });

                    instances.open();
                } else {
                    devPanelCounter = devPanelCounter + 1;
                }
                
            }
            // Number 13 is the "Enter" key on the keyboard
            if (event.keyCode === 27) {
                // Trigger the button element with a click
                swal({
                        title: "Ops!",
                        text: "Hai premuto il tasto 'ESC'. Vuoi uscire dal portale?",
                        icon: "warning",
                        buttons: { cancel: "Annulla", confirm: "Esci" },
                        dangerMode: true,
                    })
                    .then((willDelete) => {
                        if (!willDelete) return;
                        logout();
                    });
            }
        });
</script>
</body>
</html>