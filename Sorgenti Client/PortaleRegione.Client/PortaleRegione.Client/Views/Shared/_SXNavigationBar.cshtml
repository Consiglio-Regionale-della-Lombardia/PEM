@using Newtonsoft.Json
@using PortaleRegione.DTO.Domain
@using PortaleRegione.DTO.Enum
@using PortaleRegione.DTO.Model
@{
    PersonaDto persona = null;
    IEnumerable<RuoliDto> ruoli = new List<RuoliDto>();
    IEnumerable<KeyValueDto> gruppiAdmin = new List<KeyValueDto>();
    GruppiDto gruppo = null;
    var currentRole = RuoliIntEnum.Utente;
    var carica = string.Empty;

    if (HttpContext.Current.User.Identity.IsAuthenticated)
    {
        var authCookie1 = Request.Cookies["PRCookies1"];
        var authCookie2 = Request.Cookies["PRCookies2"];
        var authCookie3 = Request.Cookies["PRCookies3"];
        if (authCookie1 != null && authCookie2 != null && authCookie3 != null)
        {
            if (!string.IsNullOrEmpty(authCookie1.Value) && !string.IsNullOrEmpty(authCookie2.Value) && !string.IsNullOrEmpty(authCookie3.Value))
            {
                var authenticationTicket1 = FormsAuthentication.Decrypt(authCookie1.Value);
                var authenticationTicket2 = FormsAuthentication.Decrypt(authCookie2.Value);
                var authenticationTicket3 = FormsAuthentication.Decrypt(authCookie3.Value);
                var data = JsonConvert.DeserializeObject<PersonaDto>(string.Format("{0}{1}{2}", authenticationTicket1.UserData, authenticationTicket2.UserData, authenticationTicket3.UserData));

                persona = data;
                currentRole = data.CurrentRole;
                ruoli = data.Ruoli;
                gruppo = data.Gruppo;
                carica = data.IsGiunta ? data.Carica : string.Empty;
                if (HttpContext.Current.User.IsInRole(RuoliExt.Amministratore_PEM))
                {
                    var gCookie1 = Request.Cookies["GCookies1"];
                    var gCookie2 = Request.Cookies["GCookies2"];
                    var gCookie3 = Request.Cookies["GCookies3"];

                    if (!string.IsNullOrEmpty(gCookie1.Value) && !string.IsNullOrEmpty(gCookie2.Value) && !string.IsNullOrEmpty(gCookie3.Value))
                    {
                        var gTicket1 = FormsAuthentication.Decrypt(gCookie1.Value);
                        var gTicket2 = FormsAuthentication.Decrypt(gCookie2.Value);
                        var gTicket3 = FormsAuthentication.Decrypt(gCookie3.Value);
                        var gData = JsonConvert.DeserializeObject<IEnumerable<KeyValueDto>>($"{gTicket1.UserData}{gTicket2.UserData}{gTicket3.UserData}");
                        if (gData != null)
                        {
                            gruppiAdmin = gData;
                        }
                    }
                }
            }
        }
    }
}

<div id="slide-out" class="sidenav sidenav-fixed">
    @if (!string.IsNullOrEmpty(carica))
    {
        <div class="row green darken-3 center" style="margin: 0 !important">
            <div class="col s12">
                <label class="white-text" style="padding: 10px">@carica</label>
            </div>
        </div>
    }
    <ul class="collapsible collapsible-accordion" style="margin: 0">
        <li>
            <div class="user-view" style="padding: 10px">
                <div class="row valign-wrapper" style="margin-bottom: unset !important; margin-top: unset !important">
                    <div class="col s1 center">
                        <a class="dropdown-trigger waves-effect black-text" data-target="ddlSubMenu" style="margin-top: 15px">
                            <i class="material-icons">more_vert</i>
                        </a>
                        <ul class="dropdown-content" id="ddlSubMenu">
                            <li>
                                <a onclick="CambioPin()">
                                    <i class="material-icons">settings</i>Reimposta Pin
                                </a>
                            </li>
                            <li>
                                <a href="@Url.Action("Index", "VideoTutorial")">
                                    <i class="material-icons">music_video</i>Video Tutorial
                                </a>
                            </li>
                            <li>
                                <a class="red-text" onclick="logout()">
                                    <i class="material-icons red-text">exit_to_app</i> Esci
                                </a>
                            </li>
                        </ul>
                    </div>
                    <div class="col s3 center">
                        <img class="responsive-img circle" style="height: 50px; width: 50px;" src="http://intranet.consiglio.regione.lombardia.it/GC/foto/@persona.foto">
                    </div>
                    <div class="col s8" style="padding-left: 0">
                        <h6 class="black-text">
                            <b>@persona.DisplayName</b>
                        </h6>
                    </div>
                </div>
                <div class="row" style="margin-bottom: unset !important; margin-top: unset !important;">
                    <div class="col s12">
                        @if (ruoli.Any())
                        {
                            var testo = string.Empty;
                            var ruoliDto = ruoli.SingleOrDefault(r => r.IDruolo == (int) currentRole);

                            if (ruoliDto != null)
                            {
                                testo = ruoliDto.Ruolo;
                            }
                            else
                            {
                                testo = "Responsabile Segreteria Politica";
                            }

                            var triggerClass = "";
                            var iconClassSwapRuoli = "";
                            if (ruoli.Count() > 1)
                            {
                                //Aggiungo la classe solo se ho un drop down da aprire, altrimenti materialize va in errore
                                triggerClass = "dropdown-trigger";
                                iconClassSwapRuoli = "<i class='material-icons tiny'>swap_horiz</i>";
                                <ul id='ddlCambioRuolo' class='dropdown-content'>
                                    @foreach (var ruolo in ruoli)
                                    {
                                        if (ruolo.IDruolo != (int) currentRole)
                                        {
                                            <li>
                                                <a style="overflow: hidden; text-overflow: ellipsis;" href="@Url.Action("CambioRuolo", "Autenticazione", new {ruolo = ruolo.IDruolo, returnUrl = Request.Url})">@ruolo.Ruolo</a>
                                            </li>
                                        }
                                    }
                                </ul>
                            }

                            <a class='@triggerClass truncate chip black-text' style="background-color: unset; min-width: unset;" href='#' data-target='ddlCambioRuolo'>
                                @testo @Html.Raw(iconClassSwapRuoli)
                            </a>
                        }
                    </div>
                    <div class="col s12" style="margin-top: -15px">
                        @{
                            var testoGruppo = gruppo == null ? "Sconosciuto" : gruppo.codice_gruppo;
                            if (persona.IsGiunta)
                            {
                                testoGruppo = "Giunta";
                            }
                            var triggerClassGruppi = "";
                            var iconClassSwapGruppi = "";
                            if (gruppiAdmin.Any())
                            {
                                triggerClassGruppi = "dropdown-trigger";
                                iconClassSwapGruppi = "<i class='material-icons tiny'>swap_horiz</i>";
                                <ul id='ddlCambioGruppo' class='dropdown-content'>
                                    @foreach (var gruppiDto in gruppiAdmin)
                                    {
                                        <li>
                                            <a class="truncate" style="height: unset !important; padding: 0 20px 0 20px !important;"
                                               href="@Url.Action("CambioGruppo", "Autenticazione", new {gruppo = gruppiDto.id, returnUrl = Request.Url})">
                                                <label class="active">(@gruppiDto.sigla)</label> @gruppiDto.descr
                                            </a>
                                        </li>
                                    }
                                </ul>
                            }

                            if (currentRole != RuoliIntEnum.Segreteria_Assemblea)
                            {
                                <a class='@triggerClassGruppi chip truncate black-text' style="background-color: unset; min-width: unset;" href='#' data-target='ddlCambioGruppo'>
                                    @testoGruppo @Html.Raw(iconClassSwapGruppi)
                                </a>
                            }
                        }
                    </div>
                </div>
            </div>
        </li>
        <li class="menuItem_Home bold" style="margin-top: -8px">
            <a class="waves-effect" href="@Url.Action("Index", "Home")"><i class="material-icons">home</i>Home</a>
        </li>
        <li class="menuItem_PEM bold">
            <a class="waves-effect" href="@Url.Action("RiepilogoSedute", "PEM")"><i class="material-icons">event</i>PEM</a>
        </li>
        @if (persona.IsConsigliereRegionale
            || persona.IsSegreteriaAssemblea
            || persona.IsSegreteriaPolitica
            || persona.IsResponsabileSegreteriaPolitica)
        {
            <li class="menuItem_DASI bold">
                <a class="waves-effect" href="@Url.Action("RiepilogoDASI", "DASI")"><i class="material-icons">event</i>DASI</a>
            </li>
        }
        <li class="menuItem_Notifiche bold">
            <a class="waves-effect" href="@Url.Action("RiepilogoNotifiche", "Notifiche", new {is_inviate = false, archivio = false})">
                <i class="material-icons">email</i>Notifiche
                <div id="counterNotifiche" class="chip pink white-text right" style="margin-top: 8px; min-width: unset;"></div>
            </a>
        </li>
        <li class="menuItem_Stampe bold">
            <a class="waves-effect" href="@Url.Action("Index", "Stampe")"><i class="material-icons">print</i>Stampe</a>
        </li>
        @if (currentRole == RuoliIntEnum.Amministratore_PEM || currentRole == RuoliIntEnum.Amministratore_Giunta || persona.IsCapoGruppo || persona.IsResponsabileSegreteriaPolitica)
        {
            <li class="menuItem_Amministrazione_Utenti bold">
                <a class="waves-effect purple-text" href="@Url.Action("RiepilogoUtenti", "AdminPanel")"><i class="material-icons purple-text">person</i>Utenti</a>
            </li>
        }
        @if (currentRole == RuoliIntEnum.Amministratore_PEM)
        {
            <li class="menuItem_Amministrazione_Gruppi bold">
                <a class="waves-effect purple-text" href="@Url.Action("RiepilogoGruppi", "AdminPanel")"><i class="material-icons purple-text">group</i>Gruppi</a>
            </li>
        }

        <li class="menuItem_Trattazione bold">
            <a class="waves-effect blue-text" href="#!" onclick="AbilitaTrattazione()"><i class="material-icons blue-text">settings_input_antenna</i>Entra in Aula</a>
        </li>

        <li class="menuTrattazione itemSeduteAttive bold">
            <a class="collapsible-header waves-effect"><i class="material-icons">event</i>Sedute Attive</a>
            <div class="collapsible-body" style="display: block;">
                <ul id="lstSeduteAttive">
                </ul>
            </div>
        </li>
        <li class="menuTrattazione itemArchivio bold">
            <a class="waves-effect" href="@Url.Action("Archivio", "AttiTrattazione")"><i class="material-icons">chevron_right</i>Tutte le sedute</a>
        </li>
        <li class="menuTrattazione itemStampe bold">
            <a class="waves-effect" href="@Url.Action("Index", "Stampe")"><i class="material-icons">print</i>Stampe</a>
        </li>
        <li class="menuTrattazione itemAreaGruppi bold">
            <a class="waves-effect red-text" href="#!" onclick="AbilitaTrattazione()"><i class="material-icons red-text">exit_to_app</i>Esci dall' Aula</a>
        </li>
    </ul>
</div>

@using (Html.BeginForm("Logout", "Autenticazione", FormMethod.Post, new {id = "formLogout"}))
{
    @Html.AntiForgeryToken()
}

<script>
    $(window).on('load', async function() {
        var url = '@Request.Url';
        if (url.includes("notifiche")) {
            $('.menuItem_Notifiche').addClass("active");
        } else if (url.includes("stampe")) {
            $('.menuItem_Stampe').addClass("active");
            $('.itemStampe').addClass("active");
        } else if (url.includes("adminpanel")) {
            $('.menuItem_Amministrazione').addClass("active");
        } else if (url.includes("riepilogodasi")) {
            $('.menuItem_DASI').addClass("active");
        } else if (url.includes("attitrattazione/archivio")) {
            $('.itemArchivio').addClass("active");
        } else if (url.includes("attitrattazione/view")) {
            $('.itemSeduteAttive').addClass("active");
        } else if (url.includes("pem") || url.includes("atti") || url.includes("emendamenti")) {
            $('.menuItem_PEM').addClass("active");
        } else if (url.includes("cruscotto")) {
            $('.menuItem_Cruscotto').addClass("active");
        } else {
            $('.menuItem_Home').addClass("active");
        }
        var mode = getClientMode();
        if (mode == 2) {
            $('#pnlLogout').hide();
            $('li[class*="menuItem"]').hide();
            var data = await GetSeduteAttive();
            var seduteAttive = data.Results;
            var url = '@Html.Raw(Url.Action("Index", "AttiTrattazione"))';
            $.each(seduteAttive,
                function(i, item) {
                    var resultDate = GetFormattedDate(item.Data_seduta);
                    var text = "Seduta del " + resultDate;
                    $('#lstSeduteAttive').append(templateSXSeduteAttive
                        .replace("{TEXT}", text)
                        .replace("{URL}", url + "?id=" + item.UIDSeduta));
                });
        } else {
            $('li[class*="menuTrattazione"]').hide();
            $('#pnlLogout').show();
        }
        await LoadCounterNotifiche();
    });

    function LoadCounterNotifiche() {
        return new Promise(async function(resolve, reject) {
            $.ajax({
                url: '@Url.Action("CounterRiepilogoNotifiche", "Notifiche")',
                type: "GET"
            }).done(function(result) {
                if (result == 0) {
                    $('#counterNotifiche').hide();
                } else if (result > 0) {
                    $('#counterNotifiche').html(result + " nuove");
                    $('#counterNotifiche').show();
                }
            }).fail(function(err) {
                console.log("error", err);
                Error(err);
            });
        });
    }

    function CambioPin() {
        swal("Inserisci vecchio pin",
                {
                    content: {
                        element: "input",
                        attributes: { placeholder: "******", className: "password" }
                    },
                    buttons: { cancel: "Annulla", confirm: "Verifica" }
                })
            .then((value) => {
                if (value == null || value == "")
                    return;
                var url_check = '@Html.Raw(Url.Action("CheckPin", "Persone"))';
                var check_request = {
                    vecchio_pin: value,
                    cambio: true
                };
                $.ajax({
                    url: url_check,
                    type: "POST",
                    data: check_request
                }).done(function(result) {
                    if (result.message) {
                        swal({
                            title: "Errore",
                            text: result.message,
                            icon: "error"
                        });
                        return;
                    }
                    swal("Inserisci nuovo pin",
                            {
                                content: {
                                    element: "input",
                                    attributes: { placeholder: "******", className: "password" }
                                },
                                buttons: { cancel: "Annulla", confirm: "Inserisci" }
                            })
                        .then((pin) => {
                            if (pin == null || pin == "")
                                return;
                            swal("Conferma nuovo pin",
                                    {
                                        content: {
                                            element: "input",
                                            attributes: { placeholder: "******", className: "password" }
                                        },
                                        buttons: { cancel: "Annulla", confirm: "Conferma" }
                                    })
                                .then((pin2) => {
                                    if (pin2 == null || pin2 == "")
                                        return;
                                    if (pin != pin2) {
                                        swal({
                                            title: "Errore",
                                            text: "I pin sono diversi, ripetere la procedura",
                                            icon: "error"
                                        });
                                        return;
                                    } else {
                                        var url = '@Html.Raw(Url.Action("SalvaPin", "Persone"))';
                                        var request = {
                                            vecchio_pin: value,
                                            nuovo_pin: pin2,
                                            conferma_pin: pin
                                        };
                                        $.ajax({
                                            url: url,
                                            type: "POST",
                                            data: request
                                        }).done(function(result2) {
                                            M.toast({ html: 'Il Pin è stato cambiato', classes: 'rounded' });
                                        }).fail(function(err) {
                                            console.log("error", err);
                                            Error(err);
                                        });
                                    }
                                });
                        });

                }).fail(function(err) {
                    console.log("error", err);
                    Error(err);
                });
            });
    }

    function logout() {
        setClientMode(1);
        $('#formLogout').submit();
    }

    var templateSXSeduteAttive = "<li><a href='{URL}'>{TEXT}</a></li>";
</script>