@using PortaleRegione.DTO.Enum
@model PortaleRegione.Client.Models.AttiViewModel

<script>
    var chipInstance;
    $(window).on("load", async function() {
        $('#btnCrea').hide();
        $('#btnSearch').hide();
        var elems = document.querySelector('#autocompleteRelatori');

        var autocompleteDataOptions = {
            data: [
                @foreach (var persona in Model.Relatori)
                {
                    if (!string.IsNullOrEmpty(persona.DisplayName))
                    {
                        @Html.Raw("{ tag: '" + persona.DisplayName + "', id: '" + persona.UID_persona + "'}, ")
                    }
                }
            ],
            limit: 10,
            minLength: 1
        };

        chipInstance = M.Chips.init(elems,
            {
                autocompleteOptions: autocompleteDataOptions,
                data: [
                    @if (Model.Atto.Relatori != null && Model.Atto.Relatori.Any())
                    {
                        foreach (var relatoriDto in Model.Atto.Relatori)
                        {
                            @Html.Raw("{ tag: '" + relatoriDto.DisplayName + "', id: '" + relatoriDto.UID_persona + "'}, ")
                        }
                    }
                ],
                onChipAdd: function(e, chip) {
                },
                onChipSelect: function(e, chip) {
                },
                onChipDelete: function(e, chip) {
                }
            });
        await GetArticoliAtto($('#Atto_UIDAtto').val());

        var tipi = await GetTipiPEM();
        if (tipi.length > 0) {
            var select = $("#Atto_Tipo");
            select.empty();
            $.each(tipi,
                function(index, item) {
                    if (item.IDTipoAtto != @Html.Raw((int) TipoAttoEnum.TUTTI)) {
                        if (item.IDTipoAtto == @Html.Raw((int) TipoAttoEnum.ALTRO)) {
                            item.Tipo_Atto = "ALTRO";
                        }
                        var template = "";
                        if (item.IDTipoAtto == @Html.Raw(Model.Atto.IDTipoAtto)) {
                            template = "<option selected=\"selected\"></option>";
                        } else {
                            template = "<option></option>";
                        }
                        select.append($(template).val(item.IDTipoAtto).html(item.Tipo_Atto));
                    }
                });

            var elems = document.querySelectorAll("#Atto_Tipo");
            M.FormSelect.init(elems, null);
        }

        $("#btnSave").on("click",
            function() {
                $("#btnSave").off("click");
                setTimeout(function() {
                        $('body').removeClass('loaded');
                    },
                    200);
                $('#formAtto').submit();
            });

        $("#formAtto").submit(function (e) {
            e.preventDefault();
        }).validate({
            submitHandler: function (form) {
                var doc;
                var inputsAtto = $('input[name=DocAtto]');
                if (inputsAtto.length != 0) {
                    var inputFileAtto = inputsAtto[0];
                    if (!inputFileAtto.files) {
                        alert("This browser doesn't seem to support the `files` property of file inputs.");
                    }
                    if (inputFileAtto.files.length > 0)
                        doc = inputFileAtto.files[0];
                }

                var form_data = new FormData();
                form_data.append("NAtto", $('input[name="Atto.NAtto"]').val());
                form_data.append("Data_apertura", $('input[name="Atto.Data_apertura"]').val());
                form_data.append("Data_chiusura", $('input[name="Atto.Data_chiusura"]').val());
                form_data.append("DocAtto", doc);
                form_data.append("IDTipoAtto", $('select[id="Atto_Tipo"]').children("option:selected").val());
                form_data.append("Note", $('#Atto_Note').val());
                form_data.append("Notifica_deposito_differita", $('input[name="Atto.Notifica_deposito_differita"]').is(":checked"));
                form_data.append("Oggetto", $('#Atto_Oggetto').val());
                form_data.append("UIDAssessoreRiferimento", $('select[name="Atto.UIDAssessoreRiferimento"]').children("option:selected").val());
                form_data.append("UIDAtto", $('input[name="Atto.UIDAtto"]').val());
                form_data.append("UIDSeduta", $('input[name="Atto.UIDSeduta"]').val());
                form_data.append("VIS_Mis_Prog", $('input[name="Atto.VIS_Mis_Prog"]').is(":checked"));
                form_data.append("Emendabile", $('input[name="Atto.Emendabile"]').is(":checked"));

                //submit via ajax
                $.ajax({
                    url: baseUrl + "/atti/salva",
                    type: "POST",
                    data: form_data,
                    processData: false,
                    contentType: false
                }).done(function (dataResult) {
                    if (dataResult.message) {
                        swal({
                            title: "Errore",
                            text: dataResult.message,
                            icon: "error"
                        });
                    }
                    else {
                        var relatori = chipInstance.getData();

                        var newRelatori = [];
                        $.each(relatori,
                            function (index, item) {
                                newRelatori.push(item.id);
                            });
                        $.ajax({
                            url: baseUrl + "/atti/relatori",
                            type: "POST",
                            data: JSON.stringify({
                                id: dataResult.entity.UIDAtto,
                                persone: newRelatori
                            }),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json"
                        }).done(function (data) {
                            M.toast({ html: 'Salvataggio completato', classes: 'rounded' });

                        }).fail(function (err) {
                            console.log("ERROR - RELATORI", err);
                        });
                    }
                })
                    .fail(function (err) {
                        console.log("error", err);
                        Error(err);
                    });

                return false; //This doesn't prevent the form from submitting.
            }
        });
    });

    

    
</script>