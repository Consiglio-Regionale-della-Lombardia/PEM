@using PortaleRegione.DTO.Domain
@model  PortaleRegione.DTO.Model.EmendamentiFormModel

@{
    var displayAtto = string.Format("{0} {1}", Model.Atto.TIPI_ATTO.Tipo_Atto, Model.Atto.NAtto);
    var isNew = Model.Emendamento.UIDEM == Guid.Empty;
    var tipo_descrizione = Model.Emendamento.Rif_UIDEM.HasValue ? "sub-emendamento" : "emendamento";
    ViewBag.Title = isNew ? string.Format("{0} - Nuovo {1}", displayAtto, tipo_descrizione) : string.Format("{0} - Modifica {1}", displayAtto, tipo_descrizione);

    var backUrl = isNew ? Url.Action("RiepilogoEmendamenti", new { id = Model.Atto.UIDAtto }) : Url.Action("ViewEmendamento", new { id = Model.Emendamento.UIDEM });
}
<script>
    $(document).ready(function () {
        $('#btnSearch').hide();
    });
</script>

<div class="row">
    <div class="col l1 s2">
        <a class="btn-floating waves-effect waves-light grey header-back" onclick="go('@backUrl')">
            <i class="material-icons">arrow_back</i>
        </a>
    </div>
    <div class="col l11 s10">
        <h5>
            <b>
                <span>@ViewBag.Title</span>
                <input id="hfIsNew" type="hidden" value="@isNew" />
            </b>
        </h5>
    </div>
</div>

<div class="card">
    <div class="card-content">
        <div class="row">
            <div class="col s12 center">
                <h5>
                    <b>
                        <span>@Html.Raw(Model.Emendamento.N_EM)</span>
                    </b>
                </h5>
            </div>
        </div>
        <div class="row">
            <div class="col s12">
                @using (Html.BeginForm("SalvaEmendamento", "Emendamenti", FormMethod.Post, new { id = "formEmendamento" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.HiddenFor(m => m.Emendamento.UIDAtto)
                    @Html.HiddenFor(m => m.Emendamento.UIDEM)
                    @Html.HiddenFor(m => m.Emendamento.UIDPersonaCreazione)
                    @Html.HiddenFor(m => m.Emendamento.idRuoloCreazione)
                    @Html.HiddenFor(m => m.Emendamento.Progressivo)
                    @Html.HiddenFor(m => m.Emendamento.SubProgressivo)
                    @Html.HiddenFor(m => m.Emendamento.Rif_UIDEM)
                    @Html.HiddenFor(m => m.Emendamento.IDStato)
                    @Html.HiddenFor(m => m.Emendamento.id_gruppo)
                    @Html.HiddenFor(m => m.Emendamento.DataCreazione)
                    @Html.HiddenFor(m => m.Emendamento.DataModifica)
                    @Html.HiddenFor(m => m.Emendamento.UIDPersonaModifica)
                    @Html.HiddenFor(m => m.Emendamento.UID_QRCode)

                    <div class="row">
                        <div class="col s12 form-group">
                            <label>Proponente: </label>
                            <label class="black-text" style="margin-left: 20px">
                                <input id="chkProponentiConsiglieri" name="Proponenti" type="radio" onchange="Proponenti_OnChange(1)" checked />
                                <span>Consiglieri</span>
                            </label>
                            <label class="black-text" style="margin-left: 20px">
                                <input id="chkProponentiAssessori" name="Proponenti" type="radio" onchange="Proponenti_OnChange(2)" />
                                <span>Assessori</span>
                            </label>
                            <div id="pnlProponentiConsiglieri" style="margin-top: 20px">
                                @Html.DropDownListFor(m => m.Emendamento.UIDPersonaProponente, new SelectList(Model.ListaConsiglieri, "UID_persona", "DisplayName_GruppoCode_EX"), "Seleziona proponente consigliere", new { @class = "form-control", id = "selectProponentiConsiglieri", onchange = "OnProponenteChange()" })
                            </div>
                            <div id="pnlProponentiAssessori" style="display: none; margin-top: 20px">
                                @Html.DropDownListFor(m => m.Emendamento.UIDPersonaProponente, new SelectList(Model.ListaAssessori, "UID_persona", "DisplayName"), "Seleziona proponente assessore", new { @class = "form-control", id = "selectProponentiAssessori", onchange = "OnProponenteChange()" })
                            </div>
                        </div>
                    </div>
                    @Html.Partial("_MetaDatiPanel", Model)
                    <div class="form-group">
                        @Html.LabelFor(s => s.Emendamento.TestoEM_originale)
                        @Html.TextAreaFor(model => model.Emendamento.TestoEM_originale, new { @class = "form-control trumbowyg" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(s => s.Emendamento.TestoREL_originale)
                        @Html.TextAreaFor(model => model.Emendamento.TestoREL_originale, new { @class = "form-control trumbowyg" })
                    </div>

                    @Html.Partial("_DocsPanel", Model)
                }
                <div class="fixed-action-btn">
                    <button class="btn-floating btn-large blue" id="btnSave">
                        <i class="large material-icons">save</i>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@{
    var effetti_finanziari_visible = "0";
    if (!string.IsNullOrEmpty(Model.Emendamento.PATH_AllegatoTecnico))
    {
        effetti_finanziari_visible = "1";
    }
}

@Html.Partial("_EMFormScript")
<script>
    $(document).ready(function() {
        EffettiFinanziari_OnChange(@effetti_finanziari_visible);
        PartiTestoEmendamento_OnChange(@Model.Emendamento.IDParte);
        TestoEmendamento_TipoEM(@Model.Emendamento.IDTipo_EM);
        InitEffettiFinanziari(@Model.Emendamento.EffettiFinanziari);
    });

    var old_text = "";
    function OnProponenteChange() {
        var proponente;
        if ($('input[name="Emendamento.UIDPersonaProponente"]').val())
            proponente = $('input[name="Emendamento.UIDPersonaProponente"]').text();
        else {
            if ($('#chkProponentiConsiglieri').is(":checked"))
                proponente = $('select[id="selectProponentiConsiglieri"]').children("option:selected").text();
            else if ($('#chkProponentiAssessori').is(":checked"))
                proponente = $('select[id="selectProponentiConsiglieri"]').children("option:selected").text();
            else
                proponente = $('select[id="Emendamento_UIDPersonaProponente"]').children("option:selected").text();
        }

        var container_testo_em = $("#Emendamento_TestoEM_originale").parent();
        var editor_test_em = $(container_testo_em).find(".trumbowyg-editor");
        if (old_text == "") {
            old_text = editor_test_em.html();
        }
        if (editor_test_em.html().length > old_text.length) {
            editor_test_em.html(old_text + ' ' + proponente);
        } else {
            editor_test_em.html(editor_test_em.html() + ' ' + proponente);
        }
    }
</script>

