@using PortaleRegione.Common
@model  PortaleRegione.DTO.Model.EmendamentiFormModel

@{
    var displayAtto = $"{PortaleRegione.Common.Utility.GetText_Tipo(Model.Atto.IDTipoAtto)} {Model.Atto.NAtto}";
    var isNew = Model.Emendamento.UIDEM == Guid.Empty;
    var tipo_descrizione = Model.Emendamento.Rif_UIDEM.HasValue ? "sub-emendamento" : "emendamento";
    ViewBag.Title = isNew ? string.Format("{0} - Nuovo {1}", displayAtto, tipo_descrizione) : string.Format("{0} - Modifica {1}", displayAtto, tipo_descrizione);

    var backUrl = isNew ? Url.Action("RiepilogoEmendamenti", new { id = Model.Atto.UIDAtto }) : Url.Action("ViewEmendamento", new { id = Model.Emendamento.UIDEM });
}

<div class="row">
    <div class="col l1 s2">
        <a class="btn-floating waves-effect waves-light grey header-back" onclick="go('@backUrl')">
            <i class="material-icons">arrow_back</i>
        </a>
    </div>
    <div class="col l11 s10">
        <h5>
            <b>
                <span>@ViewBag.Title</span>
                <input id="hfIsNew" type="hidden" value="@isNew"/>
            </b>
        </h5>
    </div>
</div>

@if (isNew)
{
    <div class="row">
        <div class="col l6 right-align">
            <label class="black-text" style="margin-left: 20px">
                <input id="viewWizard" type="radio" name="switchView" onchange="SwitchView(1)" value="1" checked="checked"/>
                <span>
                    Inserimento guidato
                </span>
            </label>
        </div>
        <div class="col l6 left-align">
            <label class="black-text" style="margin-left: 20px">
                <input id="viewManual" type="radio" name="switchView" onchange="SwitchView(0)" value="0"/>
                <span>
                    Inserimento manuale
                </span>
            </label>
        </div>
    </div>
}

<div id="pnlTestiAtto" class="card" style="display: @Html.Raw(isNew?"block": "none")">
    <div class="card-content">
        <table id="tableTesti" class="tableTesti">
            <tr>
                <td colspan="2" style="text-align: center; font-weight: bold;">
                    @Utility.GetText_Tipo(Model.Atto.IDTipoAtto)
                    @Model.Atto.NAtto
                </td>
            </tr>
            <tr>
                <td colspan="2" style="text-align: center">
                    @Model.Atto.Oggetto
                </td>
            </tr>
        </table>
    </div>
</div>


<div id="pnlFormEM" class="card" style="display: @Html.Raw(isNew?"none": "block");">
    <div class="card-content">
        <div class="row">
            <div class="col s12 center">
                <h5>
                    <b>
                        <span>@Html.Raw(Model.Emendamento.N_EM)</span>
                    </b>
                </h5>
            </div>
        </div>
        <div class="row">
            <div class="col s12 form-group">
                <label>Proponente: </label>
                <h6 style="font-size: small;">
                    @Html.Raw(Model.Emendamento.PersonaProponente.DisplayName)
                </h6>
            </div>
        </div>
        <div class="row">
            <div class="col s12">
                @using (Html.BeginForm("SalvaEmendamento", "Emendamenti", FormMethod.Post, new { id = "formEmendamento" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.HiddenFor(m => m.Emendamento.UIDAtto)
                    @Html.HiddenFor(m => m.Emendamento.UIDEM)
                    @Html.HiddenFor(m => m.Emendamento.UIDPersonaProponente)
                    @Html.HiddenFor(m => m.Emendamento.UIDPersonaCreazione)
                    @Html.HiddenFor(m => m.Emendamento.idRuoloCreazione)
                    @Html.HiddenFor(m => m.Emendamento.Progressivo)
                    @Html.HiddenFor(m => m.Emendamento.SubProgressivo)
                    @Html.HiddenFor(m => m.Emendamento.Rif_UIDEM)
                    @Html.HiddenFor(m => m.Emendamento.IDStato)
                    @Html.HiddenFor(m => m.Emendamento.id_gruppo)
                    @Html.HiddenFor(m => m.Emendamento.DataCreazione)
                    @Html.HiddenFor(m => m.Emendamento.DataModifica)
                    @Html.HiddenFor(m => m.Emendamento.UIDPersonaModifica)
                    @Html.HiddenFor(m => m.Emendamento.UID_QRCode)

                    @Html.Partial("_MetaDatiPanel", Model)
                    <div class="form-group">
                        @Html.LabelFor(s => s.Emendamento.TestoEM_originale)
                        @Html.TextAreaFor(model => model.Emendamento.TestoEM_originale, new { @class = "form-control trumbowyg" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(s => s.Emendamento.TestoREL_originale)
                        @Html.TextAreaFor(model => model.Emendamento.TestoREL_originale, new { @class = "form-control trumbowyg" })
                    </div>

                    @Html.Partial("_DocsPanel", Model)
                    @Html.Partial("_TagsPanel", Model)
                }

                <div class="fixed-action-btn">
                    <button class="btn-floating btn-large blue" id="btnSave" type="button" alt="Salva emendamento">
                        <i class="large material-icons">save</i>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@{
    var effetti_finanziari_visible = Model.Emendamento.EffettiFinanziari;
}

@Html.Partial("_EMFormScript")

<script>
    $(document).ready(function() {
        EffettiFinanziari_OnChange(@effetti_finanziari_visible);
        PartiTestoEmendamento_OnChange(@Model.Emendamento.IDParte);
        InitEffettiFinanziari(@Model.Emendamento.EffettiFinanziari);
    });
</script>

@if (isNew && (!Model.Emendamento.Rif_UIDEM.HasValue || Model.Emendamento.Rif_UIDEM == Guid.Empty))
{
    <script>
        $(document).ready(function() {
            TestoEmendamento_TipoEM(@Model.Emendamento.IDTipo_EM, false);
        });
    </script>
}
else
{
    <script>
        $(document).ready(function() {
            TestoEmendamento_TipoEM(@Model.Emendamento.IDTipo_EM, true);
        });
    </script>
}