@using PortaleRegione.DTO.Enum
@model PortaleRegione.DTO.Model.CommandRiepilogoEMModel
@{
    var port = "";
    if (Request.Url.Port > 0)
    {
        port = string.Format(":{0}", Request.Url.Port);
    }

    var atto = Request.Form["atto"];
    var ordineFromCache = HttpContext.Current.Cache.Get("OrdinamentoEM");
    var ordinePagina = HttpUtility.ParseQueryString(Request.Url.Query).Get("ordine");
    var ordinePaginaEnum = 1;
    var mode = HttpUtility.ParseQueryString(Request.Url.Query).Get("mode");
    if (string.IsNullOrEmpty(mode))
    {
        mode = "1";
    }
    var url = string.Format("{0}://{1}{2}{3}", Request.Url.Scheme, Request.Url.Host, port, Request.Url.AbsolutePath);
    if (url.Contains("filtra"))
    {
        url = Url.Action("RiepilogoEmendamenti", "Emendamenti", new {id = atto, mode, ordine = ordinePaginaEnum});
    }
    else
    {
        url += string.Format("?mode={0}", mode);

        if (!string.IsNullOrEmpty(ordinePagina))
        {
            ordinePaginaEnum = Convert.ToInt16(ordinePagina);
        }
        else if (ordineFromCache != null)
        {
            ordinePaginaEnum = Convert.ToInt16(ordineFromCache);
        }
        if (ordinePaginaEnum != 0)
        {
            url += string.Format("&ordine={0}", ordinePaginaEnum);
        }
    }

    if (Model.view == "zoom")
    {
        url += "&view=grid";
    }
    else if (Model.view == "grid")
    {
        url += "&view=zoom";
    }


    var require_my_sign = Convert.ToBoolean(HttpUtility.ParseQueryString(Request.Url.Query).Get("require_my_sign"));

}
<div class="row valign-wrapper">
    <div class="col s3 left">
        <label>
            <input type="checkbox" id="checkAll"/>
            <span for="checkAll">Seleziona tutti</span>
        </label>
    </div>
    <div class="col s5 left">
        @if ((User.IsInRole(RuoliExt.Consigliere_Regionale) || User.IsInRole(RuoliExt.Assessore_Sottosegretario_Giunta)) && mode == ((int)ClientModeEnum.GRUPPI).ToString())
        {
            <label>
                <input type="checkbox" id="checkAllMy" onchange="filtraEM_RichiestaFirma(this.checked)" @Html.Raw(require_my_sign ? "checked=\"checked\"" : "")/>
                <span for="checkAllMy">Visualizza solo gli EM/SUBEM per i quali è richiesta la mia firma</span>
            </label>
        }
    </div>
    <div class="col s6">
        <div class="right">
            @if (!string.IsNullOrEmpty(Model.Atto.LinkFascicoloPresentazione) && Model.Atto.OrdinePresentazione == true)
            {
                <a class="blue-text tooltipped" href="@Model.Atto.LinkFascicoloPresentazione" data-position="bottom" data-tooltip="Scarica fascicolo presentazione" target="">
                    <i class="material-icons">file_download</i>
                </a>
            }
        @if (!string.IsNullOrEmpty(Model.Atto.LinkFascicoloVotazione) && Model.Atto.OrdineVotazione == true)
        {
            <a class="blue-text tooltipped" href="@Model.Atto.LinkFascicoloVotazione" data-position="bottom" data-tooltip="Scarica fascicolo votazione" target="">
                <i class="material-icons">file_download</i>
            </a>
        }
            <a class="blue-text tooltipped" onclick="ConfirmStampa()" data-tooltip="Stampa" data-position="left">
                <i class="material-icons">print</i>
            </a>
            @{
                var text = "";
                var icon = "";

                if (Model.view == "zoom")
                {
                    text = "Visualizza EM in griglia";
                    icon = "developer_board";
                }
                else if (Model.view == "grid")
                {
                    text = "Visualizza EM in preview";
                    icon = "desktop_windows";
                }
            }

            <a class="blue-text tooltipped" onclick="go('@url')" data-tooltip="@text" data-position="left">
                <i class="icon material-icons">@icon</i>
            </a>
        </div>
    </div>
</div>

<script>
    function filtraEM_RichiestaFirma(enable) {
        if (enable) {
            go('@Url.Action("RiepilogoEmendamenti", "Emendamenti", new {require_my_sign = true})');
        } else {
            go('@Url.Action("RiepilogoEmendamenti", "Emendamenti", new {require_my_sign = false})');
        }
    }

    $("#checkAll").click(function() {
        setSelezionaTutti(this.checked);
        setListaEmendamenti([]);
        $('input[id^="chk_EM_"]').not(this).prop('checked', this.checked);
        AbilitaComandiMassivi(null);
    });
</script>