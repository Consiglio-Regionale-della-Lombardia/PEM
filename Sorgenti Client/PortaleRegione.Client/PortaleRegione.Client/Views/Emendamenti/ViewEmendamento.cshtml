@using PortaleRegione.DTO.Enum
@using PortaleRegione.DTO.Model
@model PortaleRegione.DTO.Domain.EmendamentiDto

@{
    var displayAtto = string.Format("{0} {1}", Model.ATTI.TIPI_ATTO.Tipo_Atto, Model.ATTI.NAtto);
    ViewBag.Title = string.Format("{0}", displayAtto);

    var ordineFromCache = HttpContext.Current.Cache.Get("OrdinamentoEM");
    var viewFromCache = HttpContext.Current.Cache.Get("ViewMode");
    var pageFromCache = HttpContext.Current.Cache.Get("Page");
    var sizeFromCache = HttpContext.Current.Cache.Get("Size");
    object objParams = null;
    objParams = new
    {
        id = Model.UIDAtto,
        page= pageFromCache,
        size = sizeFromCache,
        ordine = ordineFromCache,
        view = viewFromCache
    };
    var backUrl = Url.Action("RiepilogoEmendamenti", objParams);

    var gruppoText = "";
    if (Model.id_gruppo >= 10000)
    {
        gruppoText = "Giunta regionale";
    }
    else
    {
        gruppoText = Model.gruppi_politici.nome_gruppo;
    }
}

<script>
    $(document).ready(function() {
        $('#btnSearch').hide();
    });
</script>

<div class="row">
    <div class="col l1 s2">
        <a class="btn-floating waves-effect waves-light grey header-back" onclick="go('@backUrl')">
            <i class="material-icons">arrow_back</i>
        </a>
    </div>
    <div class="col l11 s10">
        <h5>
            <b>
                <span>@ViewBag.Title</span>
            </b>
        </h5>
    </div>
</div>
<div class="row">
    <div class="col s12">
        <div class="card">
            <div class="card-action grey lighten-4 center">
                <div class="chip @Model.STATI_EM.CssClass white-text" style="position: absolute;right: 10px;top: 18px;min-width: unset">@Model.STATI_EM.Stato</div>
                <h6>
                    <b>
                        <span>@Html.Raw(gruppoText)</span>
                    </b>
                </h6>
            </div>
            @if (Model.Firmabile || Model.Depositabile || Model.Eliminabile || Model.Ritirabile || Model.Modificabile)
            {
                <div class="card-action grey lighten-4 center" style="border-top: unset">
                    <div class="row" style="margin: 0 !important">
                        <div class="col s12" style="margin-top: 5px">
                            @if (Model.Firmabile)
                            {
                                <div class="btn chip hoverable green center white-text" onclick="RevealFirmaDeposito('@Model.UIDEM', @Html.Raw((int) ActionEnum.FIRMA))">
                                    <i class="icon material-icons">gavel</i> Firma
                                </div>
                            }
                            @if (Model.Depositabile)
                            {
                                <div class="btn chip hoverable purple center white-text" onclick="RevealFirmaDeposito('@Model.UIDEM', @Html.Raw((int) ActionEnum.DEPOSITA))">
                                    <i class="icon material-icons">lock</i> Presenta
                                </div>
                            }
                            @if (Model.Modificabile)
                            {
                                <div class="btn chip hoverable blue center white-text" onclick="go('@Url.Action("ModificaEmendamento", new {id = Model.UIDEM})')">
                                    <i class="icon material-icons">edit</i> Modifica
                                </div>
                            }
                            @if (Model.Invito_Abilitato)
                            {
                                <div class="btn chip hoverable amber center" onclick="NotificaA('@Model.UIDAtto', @((int) TipoDestinatarioNotificaEnum.CONSIGLIERI))">
                                    <i class="icon material-icons">share</i> Invita
                                </div>
                            }
                            @if (Model.Eliminabile)
                            {
                                <div class="btn chip hoverable red center white-text" onclick="ConfirmAction('@Model.UIDEM', '@Model.N_EM.Replace(" all\'", " -")', @Html.Raw((int) ActionEnum.ELIMINA))">
                                    <i class="icon material-icons">delete</i> Elimina
                                </div>
                            }
                            @if (Model.Ritirabile)
                            {
                                <div class="btn chip hoverable brown lighten-3 center" onclick="ConfirmAction('@Model.UIDEM', '@Model.N_EM.Replace(" all\'", " -")', @Html.Raw((int) ActionEnum.RITIRA))">
                                    <i class="icon material-icons">settings_backup_restore</i> Ritira
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
            <div class="card-content">
                @* NOTA PUBBLICA + GRUPPO + PROPONENTE *@
                <div class="row">
                    <div class="col s6 left">
                        @if (Model.UIDPersonaModifica.HasValue && Model.IDStato < (int)StatiEnum.Depositato)
                        {
                            <label style="font-size: small !important">Ultima modifica: </label>
                            <br/>
                            <b>[@Model.DataModifica.Value.ToString("dd/MM/yyyy HH:mm")] @Model.PersonaModifica.DisplayName</b>
                        }
                        @if (!string.IsNullOrEmpty(Model.NOTE_Griglia))
                        {
                            <div class="green-text">
                                <p style="padding-top: 10px">
                                    <b>Nota ufficio dei lavori assembleari: </b>
                                    @Html.Raw(Model.NOTE_Griglia)
                                </p>
                            </div>
                        }
                    </div>
                    <div class="col s6 right-align">
                        <label style="font-size: small !important">Proponente: </label>
                        <br/>
                        <b>@Model.PersonaProponente.DisplayName</b>
                    </div>
                </div>
                @if (!string.IsNullOrEmpty(Model.EM_Certificato))
                {
                    @* TITOLO *@
                    <div class="row">
                        <div class="col s12 center">
                            <h4>
                                <b>
                                    <span>@Html.Raw(Model.N_EM)</span>
                                </b>
                            </h4>
                        </div>
                    </div>
                }
                @* BODY *@
                <div class="row">
                    <div class="col s12 center bodyEMClass">
                        @Html.Raw(Model.BodyEM)
                    </div>
                </div>
                @* FIRME *@
                <div class="row">
                    <div class="col s12">
                        @Html.Raw(Model.Firme)

                        @if (!string.IsNullOrEmpty(Model.DataDeposito))
                        {
                            var testoDeposito = "Emendamento depositato";
                            if (Model.Firma_da_ufficio)
                            {
                                testoDeposito += " d'ufficio";
                            }

                            <label class="green-text">@testoDeposito il @Html.Raw(Model.DataDeposito)</label>
                        }

                        @if (!string.IsNullOrEmpty(Model.Firme_dopo_deposito))
                        {
                            @Html.Raw(Model.Firme_dopo_deposito)
                        }
                    </div>
                </div>
                @if (!string.IsNullOrEmpty(Model.TestoEM_Modificabile))
                {
                    <div class="row">
                        <div class="col s12">
                            <h5>Durante la discussione in aula il testo è stato così modificato:</h5>
                            <hr />
                            @Html.Raw(Model.TestoEM_Modificabile)
                        </div>
                    </div>
                }

                @* INVITI *@
                @if (!string.IsNullOrEmpty(Model.Destinatari))
                {
                    <div class="row">
                        <div class="col s12">
                            <h5>Invitati</h5>
                            <hr/>
                            @Html.Raw(Model.Destinatari)
                        </div>
                    </div>
                }

                @* CREA SUB EM *@
                @Html.Partial("_CommandSUBEM", Model)

                @* NOTE RISERVATE *@
                @if (!string.IsNullOrEmpty(Model.NOTE_EM) && 
                     (User.IsInRole(RuoliExt.Amministratore_PEM)
                    || User.IsInRole(RuoliExt.Segreteria_Assemblea)))
                {
                    <div class="row">
                        <div class="col s12 red-text">
                            <p>
                                <b>Nota riservata:</b>
                                @Html.Raw(Model.NOTE_EM)
                            </p>
                        </div>
                    </div>
                }
            </div>
        </div>

    </div>
</div>

@Html.Partial("_InvitoPanel", new InvitoPanelModel
{
    UIDAtto = Model.UIDAtto,
    UIDEM = Model.UIDEM
})

@section scripts
{
    <script>
        setListaEmendamenti([]);
        setSelezionaTutti(false);
    </script>
}